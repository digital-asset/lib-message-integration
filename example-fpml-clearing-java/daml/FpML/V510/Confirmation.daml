-- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

daml 1.2
-- Generated by Metagen
module FpML.V510.Confirmation
  ( module FpML.V510.Confirmation ) where


-- | The acceptable tolerance in the delivered quantity of
--   a physical commodity product in terms of a number of
--   units of that product.
data AbsoluteTolerance = AbsoluteTolerance with
    positive : Decimal
        -- ^ The maxmium amount by which the quantity delivered
        --   can exceed the agreed quantity.
    negative : Decimal
        -- ^ The maximum amount by which the quantity delivered
        --   can be less than the agreed quantity.
    unit : QuantityUnit
        -- ^ The unit in which the tolerance is specified.
    optionOwnerPartyReference : Optional PartyReference
        -- ^ Indicates whether the tolerance is at the seller's or
        --   buyer's option.
      deriving (Eq, Ord, Show)

-- | Abstract base type for all events.
data AbstractEvent
    = AbstractEvent_TradeNovationContent TradeNovationContent
    | AbstractEvent_TradeChangeBase TradeChangeBase
    | AbstractEvent_TradeNotionalChange TradeNotionalChange
    | AbstractEvent_TradeAmendmentContent TradeAmendmentContent
    | AbstractEvent_OptionExpiry OptionExpiry
    | AbstractEvent_OptionExercise OptionExercise
    | AbstractEvent_OptionEvent OptionEvent
    | AbstractEvent_IndexChange IndexChange
    | AbstractEvent_CorporateActionEvent CorporateActionEvent
    | AbstractEvent_BasketChangeEvent BasketChangeEvent
    deriving (Eq, Ord, Show)

-- | A generic account that represents any party's account
--   at another party. Parties may be identified by the
--   account at another party.
data Account = Account with
    id_ : Text
        -- ^ The unique identifier for the account within the
        --   document.
    accountId : [AccountId]
        -- ^ An account identifier. For example an Account number.
    accountName : Optional AccountName
        -- ^ The name by which the account is known.
    accountType : Optional AccountType
        -- ^ The type of account. e.g., Client, House
    choice_ : Account_choice
      deriving (Eq, Ord, Show)

-- | The data type used for account identifiers.
data AccountId = AccountId with
    accountIdScheme : Optional NonEmptyURI
        -- ^ The identifier scheme used with this accountId. A
        --   unique URI to determine the authoritative issuer of
        --   these identifiers.
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

-- | The data type used for the name of the account.
data AccountName = AccountName with
    accountNameScheme : Optional NonEmptyURI
        -- ^ The identifier scheme used with this accountName. A
        --   unique URI to determine the source of the account
        --   name.
    content : Scheme
      deriving (Eq, Ord, Show)

-- | Reference to an account.
data AccountReference = AccountReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | The data type used for account type.
data AccountType = AccountType with
    accountTypeScheme : Optional NonEmptyURI
        -- ^ The identifier scheme used with this accountType. A
        --   unique URI to determine the the type of account.
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A variant type used inside Account
data Account_choice
    = Account_choice_Items Account_items
    | Account_choice_ServicingParty PartyReference
      -- ^ A reference to the party that services/supports the
      --   account.
    deriving (Eq, Ord, Show)

-- | A record type used inside Account
data Account_items = Account_items with
    accountBeneficiary : PartyReference
        -- ^ A reference to the party beneficiary of the account.
    servicingParty : Optional PartyReference
        -- ^ A reference to the party that services/supports the
        --   account.
      deriving (Eq, Ord, Show)

-- | The type of automatic adjustment that a Letter of
--   Credit can exhibit.
data AccrualReferenceAmountTypeEnum
    = AccrualReferenceAmountTypeEnum_Commitment ()
      -- ^ The accrual is calculated using the facility
      --   commitment amount as the reference amount.
    | AccrualReferenceAmountTypeEnum_Funded ()
      -- ^ The accrual is calculated using the facility total
      --   funded amount as the reference amount.
    | AccrualReferenceAmountTypeEnum_Other ()
      -- ^ The accrual is calculated using another type of
      --   (calculated) reference amount.
    | AccrualReferenceAmountTypeEnum_Unfunded ()
      -- ^ The accrual is calculated using the total facility
      --   unfunded amount as the reference amount. The unfunded
      --   amount refers to the amount of commitment which has
      --   been utilized with unfunded products (e.g. L/Cs).
    | AccrualReferenceAmountTypeEnum_Unutilized ()
      -- ^ The accrual is calculated using the facility total
      --   unutilized amount as the reference amount. The
      --   unutilized amount refers to the amount of commitment
      --   which has not yet been borrowed.
    | AccrualReferenceAmountTypeEnum_Utilized ()
      -- ^ The accrual is calculated using the facility total
      --   utilized amount as the reference amount. The utilized
      --   amount includes both funded and unfunded borrowings.
    deriving (Eq, Ord, Show)

data Acknowledgement = Acknowledgement with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : ResponseMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequence_model : Optional Acknowledgement_Sequence_model
    onBehalfOf_model : Optional Acknowledgement_OnBehalfOf_model
    originalMessage : Optional UnprocessedElementWrapper
    partiesAndAccounts_model : Optional Acknowledgement_PartiesAndAccounts_model
      deriving (Eq, Ord, Show)

-- | A record type used inside Acknowledgement
data Acknowledgement_OnBehalfOf_model = Acknowledgement_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside Acknowledgement
data Acknowledgement_PartiesAndAccounts_model = Acknowledgement_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A record type used inside Acknowledgement
data Acknowledgement_Sequence_model = Acknowledgement_Sequence_model with
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

data ActionOnExpiration
    = ActionOnExpiration_ExerciseAction ExerciseActionEnum
    | ActionOnExpiration_Expiry Bool
    | ActionOnExpiration_FullExercise Bool
    | ActionOnExpiration_Items1 ActionOnExpiration_items
    | ActionOnExpiration_Items2 ActionOnExpiration_items_2
    | ActionOnExpiration_Items3 ActionOnExpiration_items_3
    | ActionOnExpiration_SpecifiedExercise [OptionExerciseAmounts]
      -- ^ Specifies the Number of Units
    deriving (Eq, Ord, Show)

-- | A record type used inside ActionOnExpiration
data ActionOnExpiration_items = ActionOnExpiration_items with
    exerciseInNotionalAmount : Money
        -- ^ Specifies the fixed amount by which the option should
        --   be exercised expressed as notional amount.
    outstandingNotionalAmount : Money
        -- ^ Specifies the Notional amount after the Change
      deriving (Eq, Ord, Show)

-- | A record type used inside ActionOnExpiration
data ActionOnExpiration_items_2 = ActionOnExpiration_items_2 with
    exerciseInNumberOfOptions : Decimal
        -- ^ Specifies the fixed amount by which the option should
        --   be exercised expressed as number of options.
    outstandingNumberOfOptions : Decimal
        -- ^ Specifies the Number of Options after the Change.
      deriving (Eq, Ord, Show)

-- | A record type used inside ActionOnExpiration
data ActionOnExpiration_items_3 = ActionOnExpiration_items_3 with
    exerciseInNumberOfUnits : Decimal
        -- ^ Specifies the fixed amount by which the option should
        --   be exercised express as number of units.
    outstandingNumberOfUnits : Decimal
        -- ^ Specifies the Number of Units
      deriving (Eq, Ord, Show)

-- | The data type used for ESMA action type.
data ActionType = ActionType with
    actionTypeScheme : Optional Text
        -- ^ The identifier scheme used with this actionType. A
        --   unique URI to determine the the type of action.
    content : Scheme
      deriving (Eq, Ord, Show)

data ActualPrice = ActualPrice with
    id_ : Optional Text
    currency : Optional Currency
        -- ^ Specifies the currency associated with the net price.
        --   This element is not present if the price is expressed
        --   in percentage terms (as specified through the
        --   priceExpression element).
    amount : Decimal
        -- ^ Specifies the net price amount. In the case of a
        --   fixed income security or a convertible bond, this
        --   price includes the accrued interests.
    priceExpression : PriceExpressionEnum
        -- ^ Specifies whether the price is expressed in absolute
        --   or relative terms.
      deriving (Eq, Ord, Show)

-- | Provides extra information not represented in the
--   model that may be useful in processing the message
--   i.e. diagnosing the reason for failure.
data AdditionalData = AdditionalData with
    mimeType : MimeType
        -- ^ Indicates the type of media used to provide the extra
        --   information. mimeType is used to determine the
        --   software product(s) that can read the content. MIME
        --   Types are described in RFC 2046.
    choice_ : AdditionalData_choice
      deriving (Eq, Ord, Show)

-- | A variant type used inside AdditionalData
data AdditionalData_choice
    = AdditionalData_choice_String String
      -- ^ Provides extra information as string. In case the
      --   extra information is in XML format, a CDATA section
      --   must be placed around the source message to prevent
      --   its interpretation as XML content.
    | AdditionalData_choice_HexadecimalBinary Text
      -- ^ Provides extra information as binary contents coded
      --   in hexadecimal.
    | AdditionalData_choice_Base64Binary Text
      -- ^ Provides extra information as binary contents coded
      --   in base64.
    | AdditionalData_choice_OriginalMessage AdditionalData_originalMessage
      -- ^ Provides extra information as binary contents coded
      --   in base64.
    deriving (Eq, Ord, Show)

-- | A record type used inside AdditionalData
data AdditionalData_originalMessage = AdditionalData_originalMessage with
    any_ : Text
      deriving (Eq, Ord, Show)

-- | Abstract base type for an extension/substitution
--   point to customize FpML and add additional events.
data AdditionalEvent = AdditionalEvent ()
    deriving (Eq, Ord, Show)

-- | A type that represents a physical postal address.
data Address = Address with
    streetAddress : Optional StreetAddress
        -- ^ The set of street and building number information
        --   that identifies a postal address within a city.
    city : Optional String
        -- ^ The city component of a postal address.
    state : Optional String
        -- ^ A country subdivision used in postal addresses in
        --   some countries. For example, US states, Canadian
        --   provinces, Swiss cantons.
    country : Optional CountryCode
        -- ^ The ISO 3166 standard code for the country within
        --   which the postal address is located.
    postalCode : Optional String
        -- ^ The code, required for computerised mail sorting
        --   systems, that is allocated to a physical address by a
        --   national postal authority.
      deriving (Eq, Ord, Show)

-- | A type for defining a date that shall be subject to
--   adjustment if it would otherwise fall on a day that
--   is not a business day in the specified business
--   centers, together with the convention for adjusting
--   the date.
data AdjustableDate = AdjustableDate with
    id_ : Optional Text
    unadjustedDate : IdentifiedDate
        -- ^ A date subject to adjustment.
    dateAdjustments : BusinessDayAdjustments
        -- ^ The business day convention and financial business
        --   centers used for adjusting the date if it would
        --   otherwise fall on a day that is not a business date
        --   in the specified business centers.
    adjustedDate : Optional IdentifiedDate
        -- ^ The date once the adjustment has been performed.
        --   (Note that this date may change if the business
        --   center holidays change).
      deriving (Eq, Ord, Show)

-- | A type that is different from AdjustableDate in two
--   regards. First, date adjustments can be specified
--   with either a dateAdjustments element or a reference
--   to an existing dateAdjustments element. Second, it
--   does not require the specification of date
--   adjustments.
data AdjustableDate2 = AdjustableDate2 with
    id_ : Optional Text
    unadjustedDate : IdentifiedDate
        -- ^ A date subject to adjustment.
    choice_ : Optional AdjustableDate2_choice
    adjustedDate : Optional IdentifiedDate
        -- ^ The date once the adjustment has been performed.
        --   (Note that this date may change if the business
        --   center holidays change).
      deriving (Eq, Ord, Show)

-- | A variant type used inside AdjustableDate2
data AdjustableDate2_choice
    = AdjustableDate2_choice_DateAdjustments BusinessDayAdjustments
      -- ^ The business day convention and financial business
      --   centers used for adjusting the date if it would
      --   otherwise fall on a day that is not a business dat in
      --   the specified business centers.
    | AdjustableDate2_choice_DateAdjustmentsReference BusinessDayAdjustmentsReference
      -- ^ A pointer style reference to date adjustments defined
      --   elsewhere in the document.
    deriving (Eq, Ord, Show)

-- | A type for defining a series of dates that shall be
--   subject to adjustment if they would otherwise fall on
--   a day that is not a business day in the specified
--   business centers, together with the convention for
--   adjusting the dates.
data AdjustableDates = AdjustableDates with
    id_ : Optional Text
    unadjustedDate : [IdentifiedDate]
        -- ^ A date subject to adjustment.
    dateAdjustments : BusinessDayAdjustments
        -- ^ The business day convention and financial business
        --   centers used for adjusting the date if it would
        --   otherwise fall on a day that is not a business dat in
        --   the specified business centers.
    adjustedDate : [IdentifiedDate]
        -- ^ The date once the adjustment has been performed.
        --   (Note that this date may change if the business
        --   center holidays change).
      deriving (Eq, Ord, Show)

-- | A type for defining a series of dates, either as a
--   list of adjustable dates, or a as a repeating
--   sequence from a base date
data AdjustableDatesOrRelativeDateOffset
    = AdjustableDatesOrRelativeDateOffset_AdjustableDates AdjustableDates
      -- ^ A series of adjustable dates
    | AdjustableDatesOrRelativeDateOffset_RelativeDate RelativeDateOffset
      -- ^ A series of dates specified as a repeating sequence
      --   from a base date.
    deriving (Eq, Ord, Show)

-- | A type for defining a date that shall be subject to
--   adjustment if it would otherwise fall on a day that
--   is not a business day in the specified business
--   centers, together with the convention for adjusting
--   the date.
data AdjustableOrAdjustedDate = AdjustableOrAdjustedDate with
    id_ : Optional Text
    choice_ : AdjustableOrAdjustedDate_choice
      deriving (Eq, Ord, Show)

-- | A variant type used inside AdjustableOrAdjustedDate
data AdjustableOrAdjustedDate_choice
    = AdjustableOrAdjustedDate_choice_Items AdjustableOrAdjustedDate_items
    | AdjustableOrAdjustedDate_choice_AdjustedDate IdentifiedDate
      -- ^ The date once the adjustment has been performed.
      --   (Note that this date may change if the business
      --   center holidays change).
    deriving (Eq, Ord, Show)

-- | A record type used inside AdjustableOrAdjustedDate
data AdjustableOrAdjustedDate_items = AdjustableOrAdjustedDate_items with
    unadjustedDate : IdentifiedDate
        -- ^ A date subject to adjustment.
    dateAdjustments : BusinessDayAdjustments
        -- ^ The business day convention and financial business
        --   centers used for adjusting the date if it would
        --   otherwise fall on a day that is not a business date
        --   in the specified business centers.
    adjustedDate : Optional IdentifiedDate
        -- ^ The date once the adjustment has been performed.
        --   (Note that this date may change if the business
        --   center holidays change).
      deriving (Eq, Ord, Show)

-- | A type giving the choice between defining a date as
--   an explicit date together with applicable adjustments
--   or as relative to some other (anchor) date.
data AdjustableOrRelativeDate = AdjustableOrRelativeDate with
    id_ : Optional Text
    choice_ : AdjustableOrRelativeDate_choice
      deriving (Eq, Ord, Show)

-- | A variant type used inside AdjustableOrRelativeDate
data AdjustableOrRelativeDate_choice
    = AdjustableOrRelativeDate_choice_AdjustableDate AdjustableDate
      -- ^ A date that shall be subject to adjustment if it
      --   would otherwise fall on a day that is not a business
      --   day in the specified business centers, together with
      --   the convention for adjusting the date.
    | AdjustableOrRelativeDate_choice_RelativeDate RelativeDateOffset
      -- ^ A date specified as some offset to another date (the
      --   anchor date).
    deriving (Eq, Ord, Show)

-- | A type giving the choice between defining a series of
--   dates as an explicit list of dates together with
--   applicable adjustments or as relative to some other
--   series of (anchor) dates.
data AdjustableOrRelativeDates = AdjustableOrRelativeDates with
    id_ : Optional Text
    choice_ : AdjustableOrRelativeDates_choice
      deriving (Eq, Ord, Show)

-- | A variant type used inside AdjustableOrRelativeDates
data AdjustableOrRelativeDates_choice
    = AdjustableOrRelativeDates_choice_AdjustableDates AdjustableDates
      -- ^ A series of dates that shall be subject to adjustment
      --   if they would otherwise fall on a day that is not a
      --   business day in the specified business centers,
      --   together with the convention for adjusting the date.
    | AdjustableOrRelativeDates_choice_RelativeDates RelativeDates
      -- ^ A series of dates specified as some offset to another
      --   series of dates (the anchor dates).
    deriving (Eq, Ord, Show)

data AdjustableRelativeOrPeriodicDates = AdjustableRelativeOrPeriodicDates with
    id_ : Optional Text
    choice_ : AdjustableRelativeOrPeriodicDates_choice
      deriving (Eq, Ord, Show)

-- | A type giving the choice between defining a series of
--   dates as an explicit list of dates together with
--   applicable adjustments, or as relative to some other
--   series of (anchor) dates, or as a set of factors to
--   specify periodic occurences.
data AdjustableRelativeOrPeriodicDates2 = AdjustableRelativeOrPeriodicDates2 with
    id_ : Optional Text
    choice_ : AdjustableRelativeOrPeriodicDates2_choice
      deriving (Eq, Ord, Show)

-- | A variant type used inside
--   AdjustableRelativeOrPeriodicDates2
data AdjustableRelativeOrPeriodicDates2_choice
    = AdjustableRelativeOrPeriodicDates2_choice_AdjustableDates AdjustableDates
      -- ^ A series of dates that shall be subject to adjustment
      --   if they would otherwise fall on a day that is not a
      --   business day in the specified business centers,
      --   together with the convention for adjusting the date.
    | AdjustableRelativeOrPeriodicDates2_choice_RelativeDates RelativeDates
      -- ^ A series of dates specified as some offset to another
      --   series of dates (the anchor dates).
    | AdjustableRelativeOrPeriodicDates2_choice_PeriodicDates PeriodicDates
    deriving (Eq, Ord, Show)

-- | A variant type used inside
--   AdjustableRelativeOrPeriodicDates
data AdjustableRelativeOrPeriodicDates_choice
    = AdjustableRelativeOrPeriodicDates_choice_AdjustableDates AdjustableDates
      -- ^ A series of dates that shall be subject to adjustment
      --   if they would otherwise fall on a day that is not a
      --   business day in the specified business centers,
      --   together with the convention for adjusting the date.
    | AdjustableRelativeOrPeriodicDates_choice_RelativeDateSequence RelativeDateSequence
      -- ^ A series of dates specified as some offset to other
      --   dates (the anchor dates) which can
    | AdjustableRelativeOrPeriodicDates_choice_PeriodicDates PeriodicDates
    deriving (Eq, Ord, Show)

-- | A type defining a date (referred to as the derived
--   date) as a relative offset from another date
--   (referred to as the anchor date) plus optional date
--   adjustments.
data AdjustedRelativeDateOffset = AdjustedRelativeDateOffset with
    id_ : Optional Text
    periodMultiplier : Int
        -- ^ A time period multiplier, e.g. 1, 2 or 3 etc. A
        --   negative value can be used when specifying an offset
        --   relative to another date, e.g. -2 days.
    period : PeriodEnum
        -- ^ A time period, e.g. a day, week, month or year of the
        --   stream. If the periodMultiplier value is 0 (zero)
        --   then period must contain the value D (day).
    dayType : Optional DayTypeEnum
        -- ^ In the case of an offset specified as a number of
        --   days, this element defines whether consideration is
        --   given as to whether a day is a good business day or
        --   not. If a day type of business days is specified then
        --   non-business days are ignored when calculating the
        --   offset. The financial business centers to use for
        --   determination of business days are implied by the
        --   context in which this element is used. This element
        --   must only be included when the offset is specified as
        --   a number of days. If the offset is zero days then the
        --   dayType element should not be included.
    businessDayConvention : BusinessDayConventionEnum
        -- ^ The convention for adjusting a date if it would
        --   otherwise fall on a day that is not a business day.
    businessCentersOrReference_model : Optional AdjustedRelativeDateOffset_BusinessCentersOrReference_model
    dateRelativeTo : DateReference
        -- ^ Specifies the anchor as an href attribute. The href
        --   attribute value is a pointer style reference to the
        --   element or component elsewhere in the document where
        --   the anchor date is defined.
    adjustedDate : Optional IdentifiedDate
        -- ^ The date once the adjustment has been performed.
        --   (Note that this date may change if the business
        --   center holidays change).
    relativeDateAdjustments : Optional BusinessDayAdjustments
        -- ^ The business day convention and financial business
        --   centers used for adjusting the relative date if it
        --   would otherwise fall on a day that is not a business
        --   date in the specified business centers.
      deriving (Eq, Ord, Show)

-- | A variant type used inside AdjustedRelativeDateOffset
data AdjustedRelativeDateOffset_BusinessCentersOrReference_model
    = AdjustedRelativeDateOffset_BusinessCentersOrReference_model_BusinessCentersReference BusinessCentersReference
      -- ^ A pointer style reference to a set of financial
      --   business centers defined elsewhere in the document.
      --   This set of business centers is used to determine
      --   whether a particular day is a business day or not.
    | AdjustedRelativeDateOffset_BusinessCentersOrReference_model_BusinessCenters BusinessCenters
    deriving (Eq, Ord, Show)

-- | Information about whether and when a product was
--   admitted to trading on a facility.
data AdmissionToTrading = AdmissionToTrading with
    requested : Bool
        -- ^ Whether the issuer of the financial instrument has
        --   requested or approved the trading or admission to
        --   trading of their financial instruments on a trading
        --   venue.
    requestDate : Optional Time
        -- ^ Date and time of the request for admission to trading
        --   on the trading venue.
    approvalDate : Optional Time
        -- ^ Date and time the issuer has approved admission to
        --   trading or trading in its financial instruments on a
        --   trading venue.
    admissionDate : Optional Time
        -- ^ Date and time of the admission to trading on the
        --   trading venue or the date and time when the
        --   instrument was first traded or an order or quote was
        --   first received by the trading venue.
    terminationDate : Optional Time
        -- ^ Date and time when the financial instrument ceases to
        --   be traded or to be admitted to trading on the trading
        --   venue.
      deriving (Eq, Ord, Show)

data Algorithm = Algorithm with
    name : Text
        -- ^ The name of the algorithm.
    role : AlgorithmRole
        -- ^ The category of the function of the algorithm. The
        --   related individual performs the role specified in
        --   this field for the base party. For example, if the
        --   role is "Trader", the related person acts acts or
        --   acted as the base party's trader.
      deriving (Eq, Ord, Show)

-- | A type describing a role played by an algorithm in
--   one or more transactions. Examples include roles such
--   as TradingDecision, RoutingDecision. This can be
--   extended to provide custom roles.
data AlgorithmRole = AlgorithmRole with
    algorithmRoleScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data Allocation = Allocation with
    allocationTradeId : [TradeIdentifier]
        -- ^ Unique ID for the allocation. Multiple allocation
        --   trade IDs are provided to allow for the use of
        --   USI/UTI representations along with party-specific
        --   trade identifiers.
    partyReference : PartyReference
        -- ^ Reference to a party.
    accountReference : Optional AccountReference
        -- ^ Reference to an account.
    choice_ : Allocation_choice
    collateral : Optional Collateral
        -- ^ The sum that must be posted upfront to collateralize
        --   against counterparty credit risk.
    creditChargeAmount : Optional Money
        -- ^ Special credit fee assessed to certain institutions.
    approvals : Optional Approvals
        -- ^ A container for approval states in the workflow.
    masterConfirmationDate : Optional Date
        -- ^ The date of the confirmation executed between the
        --   parties and intended to govern the allocated trade
        --   between those parties.
    relatedParty : [RelatedParty]
        -- ^ Specifies any relevant parties to the allocation
        --   which should be referenced.
      deriving (Eq, Ord, Show)

-- | A message indicating that a request to allocate a
--   trade has been approved by the sender.
data AllocationApproved = AllocationApproved with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : ResponseMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequence_model : Optional AllocationApproved_Sequence_model
    onBehalfOf_model : Optional AllocationApproved_OnBehalfOf_model
    blockTradeIdentifier : Optional TradeIdentifier
    allocations : Optional Allocations
    partiesAndAccounts_model : Optional AllocationApproved_PartiesAndAccounts_model
      deriving (Eq, Ord, Show)

-- | A record type used inside AllocationApproved
data AllocationApproved_OnBehalfOf_model = AllocationApproved_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside AllocationApproved
data AllocationApproved_PartiesAndAccounts_model = AllocationApproved_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A record type used inside AllocationApproved
data AllocationApproved_Sequence_model = AllocationApproved_Sequence_model with
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A message indicating that a request to allocate a
--   trade has been refused by the sender.
data AllocationRefused = AllocationRefused with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : ResponseMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequence_model : Optional AllocationRefused_Sequence_model
    onBehalfOf_model : Optional AllocationRefused_OnBehalfOf_model
    blockTradeIdentifier : Optional TradeIdentifier
    allocations : Optional Allocations
    partiesAndAccounts_model : Optional AllocationRefused_PartiesAndAccounts_model
    reason : [Reason]
      deriving (Eq, Ord, Show)

-- | A record type used inside AllocationRefused
data AllocationRefused_OnBehalfOf_model = AllocationRefused_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside AllocationRefused
data AllocationRefused_PartiesAndAccounts_model = AllocationRefused_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A record type used inside AllocationRefused
data AllocationRefused_Sequence_model = AllocationRefused_Sequence_model with
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | Code that describes what type of allocation applies
--   to the trade. Options include Unallocated,
--   PreAllocation, PostAllocation.
data AllocationReportingStatus = AllocationReportingStatus with
    allocationReportingStatusScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A variant type used inside Allocation
data Allocation_choice
    = Allocation_choice_AllocatedFraction Decimal
      -- ^ The fractional allocation (0.45 = 45%) of the
      --   notional and "block" fees to this particular client
      --   subaccount.
    | Allocation_choice_AllocatedNotional [Money]
      -- ^ The notional allocation (amount and currency) to this
      --   particular client account.
    deriving (Eq, Ord, Show)

-- | The allocations for a single side of a trade.
data Allocations = Allocations with
    allocatingPartyReference : Optional PartyReference
        -- ^ A pointer style reference to one of the parties to
        --   the trade, defined elsewhere in the document. The
        --   party referenced has requested its position in the
        --   trade to be allocated to several other parties or
        --   accounts.
    allocation : [Allocation]
      deriving (Eq, Ord, Show)

-- | A type defining the exercise period for an American
--   style option together with any rules governing the
--   notional amount of the underlying which can be
--   exercised on any given exercise date and any
--   associated exercise fees.
data AmericanExercise = AmericanExercise with
    id_ : Optional Text
    commencementDate : AdjustableOrRelativeDate
        -- ^ The first day of the exercise period for an American
        --   style option.
    expirationDate : AdjustableOrRelativeDate
        -- ^ The last day within an exercise period for an
        --   American style option. For a European style option it
        --   is the only day within the exercise period.
    relevantUnderlyingDate : Optional AdjustableOrRelativeDates
        -- ^ The date on the underlying set by the exercise of an
        --   option. What this date is depends on the option (e.g.
        --   in a swaption it is the swap effective date, in an
        --   extendible/cancelable provision it is the swap
        --   termination date).
    earliestExerciseTime : BusinessCenterTime
        -- ^ The earliest time at which notice of exercise can be
        --   given by the buyer to the seller (or seller's agent)
        --   i) on the expriation date, in the case of a European
        --   style option, (ii) on each bermuda option exercise
        --   date and the expiration date, in the case of a
        --   Bermuda style option the commencement date to, and
        --   including, the expiration date , in the case of an
        --   American option.
    latestExerciseTime : Optional BusinessCenterTime
        -- ^ For a Bermuda or American style option, the latest
        --   time on an exercise business day (excluding the
        --   expiration date) within the exercise period that
        --   notice can be given by the buyer to the seller or
        --   seller's agent. Notice of exercise given after this
        --   time will be deemed to have been given on the next
        --   exercise business day.
    expirationTime : BusinessCenterTime
        -- ^ The latest time for exercise on expirationDate.
    multipleExercise : Optional MultipleExercise
        -- ^ As defined in the 2000 ISDA Definitions, Section
        --   12.4. Multiple Exercise, the buyer of the option has
        --   the right to exercise all or less than all the
        --   unexercised notional amount of the underlying swap on
        --   one or more days in the exercise period, but on any
        --   such day may not exercise less than the minimum
        --   notional amount or more that the maximum notional
        --   amount, and if an integral multiple amount is
        --   specified, the notional amount exercised must be
        --   equal to, or be an intergral multiple of, the
        --   integral multiple amount.
    exerciseFeeSchedule : Optional ExerciseFeeSchedule
        -- ^ The fees associated with an exercise date. The fees
        --   are conditional on the exercise occuring. The fees
        --   can be specified as actual currency amounts or as
        --   percentages of the notional amount being exercised.
      deriving (Eq, Ord, Show)

-- | The type of adjustment applied to any amount.
data AmountAdjustmentEnum
    = AmountAdjustmentEnum_Decrease ()
      -- ^ Denotes an decrease.
    | AmountAdjustmentEnum_Increase ()
      -- ^ Denotes an increase.
    deriving (Eq, Ord, Show)

-- | A type defining a nominal amount with a reference.
data AmountRef = AmountRef with
    amount : PositiveDecimal
    amountReference : Optional AmountReference
      deriving (Eq, Ord, Show)

-- | Specifies a reference to a monetary amount.
data AmountReference = AmountReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | A type defining a currency amount or a currency
--   amount schedule.
data AmountSchedule = AmountSchedule with
    id_ : Optional Text
    initialValue : Decimal
        -- ^ The initial rate or amount, as the case may be. An
        --   initial rate of 5% would be represented as 0.05.
    step : [Step]
        -- ^ The schedule of step date and value pairs. On each
        --   step date the associated step value becomes effective
        --   A list of steps may be ordered in the document by
        --   ascending step date. An FpML document containing an
        --   unordered list of steps is still regarded as a
        --   conformant document.
    currency : Currency
        -- ^ The currency in which an amount is denominated.
      deriving (Eq, Ord, Show)

-- | A reference to an asset, e.g. a portfolio, trade, or
--   reference instrument..
data AnyAssetReference = AnyAssetReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | A specific approval state in the workflow.
data Approval = Approval with
    type_ : ApprovalType
        -- ^ The type of approval (e.g. "pre-clearing credit").
    status : NormalizedString
        -- ^ The current state of approval (.e.g preapproved,
        --   pending approval, etc.)
    approver : Optional PersonId
        -- ^ The full name or identifiying ID of the relevant
        --   approver.
    approvingPartyReference : Optional PartyReference
        -- ^ A pointer style reference to a party defined
        --   elsewhere in the document. The party referenced has
        --   approved the specified item (e.g. trade or
        --   allocation).
    approvedPartyReference : Optional PartyReference
        -- ^ A pointer style reference to a party defined
        --   elsewhere in the document. The party referenced was
        --   approved for the specified item (e.g. trade or
        --   allocation) by the approving party (if specified).
    approvalId : Optional ApprovalId
        -- ^ An identifer for a specific appoval, to allow the
        --   approval to be identified and tracked.
      deriving (Eq, Ord, Show)

-- | An approval identifier allocated by a party. FpML
--   does not define the domain values associated with
--   this element.
data ApprovalId = ApprovalId with
    approvalIdScheme : Optional NonEmptyURI
    id_ : Optional Text
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

-- | A message describing the approvals currently applied
--   to the trade and their status (e.g. pending,
--   approved, refused).
data ApprovalStatusNotification = ApprovalStatusNotification with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : NotificationMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    correlationAndOptionalSequence_model : Optional ApprovalStatusNotification_CorrelationAndOptionalSequence_model
    onBehalfOf_model : Optional ApprovalStatusNotification_OnBehalfOf_model
    choice_ : ApprovalStatusNotification_choice
    approvals : Approvals
        -- ^ All of the approvals for a specific trade.
    partiesAndAccounts_model : Optional ApprovalStatusNotification_PartiesAndAccounts_model
      deriving (Eq, Ord, Show)

-- | A record type used inside ApprovalStatusNotification
data ApprovalStatusNotification_CorrelationAndOptionalSequence_model = ApprovalStatusNotification_CorrelationAndOptionalSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequence_model : Optional ApprovalStatusNotification_Sequence_model
      deriving (Eq, Ord, Show)

-- | A record type used inside ApprovalStatusNotification
data ApprovalStatusNotification_OnBehalfOf_model = ApprovalStatusNotification_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside ApprovalStatusNotification
data ApprovalStatusNotification_PartiesAndAccounts_model = ApprovalStatusNotification_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A record type used inside ApprovalStatusNotification
data ApprovalStatusNotification_Sequence_model = ApprovalStatusNotification_Sequence_model with
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A variant type used inside ApprovalStatusNotification
data ApprovalStatusNotification_choice
    = ApprovalStatusNotification_choice_Trade Trade
    | ApprovalStatusNotification_choice_TradeIdentifier TradeIdentifier
    deriving (Eq, Ord, Show)

-- | A type that qualifies the type of approval.
data ApprovalType = ApprovalType with
    approvalTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data Approvals = Approvals with
    approval : [Approval]
      deriving (Eq, Ord, Show)

-- | As per ISDA 2002 Definitions.
data Asian = Asian with
    averagingInOut : AveragingInOutEnum
    strikeFactor : Optional Decimal
        -- ^ The factor of strike.
    averagingPeriodIn : Optional AveragingPeriod
        -- ^ The averaging in period.
    averagingPeriodOut : Optional AveragingPeriod
        -- ^ The averaging out period.
      deriving (Eq, Ord, Show)

-- | Abstract base class for all underlying assets.
data Asset
    = Asset_Warrant ExchangeTradedContract
    | Asset_Option ExchangeTradedOption
    | Asset_MutualFund MutualFund
    | Asset_Mortgage Mortgage
    | Asset_Loan Loan
    | Asset_Index Index
    | Asset_Future Future
    | Asset_ExchangeTradedFund ExchangeTradedFund
    | Asset_Equity EquityAsset
    | Asset_ConvertibleBond ConvertibleBond
    | Asset_Commodity Commodity
    | Asset_Cash Cash
    | Asset_Bond Bond
    | Asset_Basket Basket
    | Asset_SimpleIrSwap SimpleIRSwap
    | Asset_SimpleFra SimpleFra
    | Asset_SimpleCreditDefaultSwap SimpleCreditDefaultSwap
    | Asset_RateIndex RateIndex
    | Asset_Fx FxRateAsset
    | Asset_Deposit Deposit
    deriving (Eq, Ord, Show)

data AssetClass = AssetClass with
    assetClassScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A scheme identifying the types of measures that can
--   be used to describe an asset.
data AssetMeasureType = AssetMeasureType with
    assetMeasureScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | Characterise the asset pool behind an asset backed
--   bond.
data AssetPool = AssetPool with
    versionHistory_model : Optional AssetPool_VersionHistory_model
    initialFactor : Decimal
        -- ^ The part of the mortgage that is outstanding on trade
        --   inception, i.e. has not been repaid yet as principal.
        --   It is expressed as a multiplier factor to the
        --   morgage: 1 means that the whole mortage amount is
        --   outstanding, 0.8 means that 20% has been repaid.
    currentFactor : Optional Decimal
        -- ^ The part of the mortgage that is currently
        --   outstanding. It is expressed similarly to the initial
        --   factor, as factor multiplier to the mortgage. This
        --   term is formally defined as part of the "ISDA
        --   Standard Terms Supplement for use with credit
        --   derivatives transactions on mortgage-backed security
        --   with pas-as-you-go or physical settlement".
      deriving (Eq, Ord, Show)

-- | A record type used inside AssetPool
data AssetPool_VersionHistory_model = AssetPool_VersionHistory_model with
    version : Int
        -- ^ The version number
    effectiveDate : Optional IdentifiedDate
        -- ^ Optionally it is possible to specify a version
        --   effective date when a versionId is supplied.
      deriving (Eq, Ord, Show)

-- | Reference to an underlying asset.
data AssetReference = AssetReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | A type to define automatic exercise of a swaption.
--   With automatic exercise the option is deemed to have
--   exercised if it is in the money by more than the
--   threshold amount on the exercise date.
data AutomaticExercise = AutomaticExercise with
    thresholdRate : Decimal
        -- ^ A threshold rate. The threshold of 0.10% would be
        --   represented as 0.001
      deriving (Eq, Ord, Show)

-- | To indicate the limitation percentage and limitation
--   period.
data AverageDailyTradingVolumeLimit = AverageDailyTradingVolumeLimit with
    limitationPercentage : RestrictedPercentage
        -- ^ Specifies the limitation percentage in Average Daily
        --   trading volume.
    limitationPeriod : Int
        -- ^ Specifies the limitation period for Average Daily
        --   trading volume in number of days.
      deriving (Eq, Ord, Show)

-- | The average price leg of an average price commodity
--   bullion or non-precious metal forward transaction.
data AveragePriceLeg = AveragePriceLeg with
    id_ : Optional Text
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    choice_1 : AveragePriceLeg_choice
    commodity : Commodity
        -- ^ Identifies the underlying asset when it is a listed
        --   commodity.
    quantityReference : QuantityReference
        -- ^ A pointer to a specification of quantity defined
        --   elsewhere.
    pricingStartDate : AdjustableDate
        -- ^ Defines the Start of the Pricing period.
        --   PricingStartDate is optional when discrete
        --   pricingDates are supplied and is not recommended to
        --   be included. Should they coexist, pricingStartDate is
        --   expected to be the same as the earliest pricing date
        --   or earlier for a Term deal as the discrete dates will
        --   take precedence.
    calculation : FloatingLegCalculation
        -- ^ Captures details relevant to the calculation of the
        --   floating price.
    choice_2 : AveragePriceLeg_choice_2
      deriving (Eq, Ord, Show)

-- | A variant type used inside AveragePriceLeg
data AveragePriceLeg_choice
    = AveragePriceLeg_choice_CalculationDates AdjustableDates
      -- ^ The Calculation Period dates for this leg of the
      --   trade where the Calculation Periods are all one day
      --   long. Only dates explicitly included determine the
      --   Calculation Periods and there is a Calculation Period
      --   for each date specified. As such one-day Calculation
      --   Period are typical a physically-settled emissions or
      --   metals trades it is expected that this element will
      --   not be used in performance swaps.
    | AveragePriceLeg_choice_CalculationPeriods AdjustableDates
      -- ^ The Calculation Period start dates for this leg of
      --   the swap. This type is only intended to be used if
      --   the Calculation Periods differ on each leg. If
      --   Calculation Periods mirror another leg, then the
      --   calculationPeriodsReference element should be used to
      --   point to the Calculation Periods on that leg - or the
      --   calculationPeriodsScheduleReference can be used to
      --   point to the Calculation Periods Schedule for that
      --   leg.
    | AveragePriceLeg_choice_CalculationPeriodsSchedule CommodityCalculationPeriodsSchedule
      -- ^ The Calculation Periods for this leg of the swap.
      --   This type is only intended to be used if the
      --   Calculation Periods differ on each leg. If
      --   Calculation Periods mirror another leg, then the
      --   calculationPeriodsReference element should be used to
      --   point to the Calculation Periods on the other leg -
      --   or the calculationPeriodsScheduleReference can be
      --   used to point to the Calculation Periods Schedule for
      --   that leg.
    | AveragePriceLeg_choice_CalculationPeriodsReference CalculationPeriodsReference
      -- ^ A pointer style reference to the Calculation Periods
      --   defined on another leg.
    | AveragePriceLeg_choice_CalculationPeriodsScheduleReference CalculationPeriodsScheduleReference
      -- ^ A pointer style reference to the Calculation Periods
      --   Schedule defined on another leg.
    | AveragePriceLeg_choice_CalculationPeriodsDatesReference CalculationPeriodsDatesReference
      -- ^ A pointer style reference to single-day-duration
      --   Calculation Periods defined on another leg.
    deriving (Eq, Ord, Show)

-- | A variant type used inside AveragePriceLeg
data AveragePriceLeg_choice_2
    = AveragePriceLeg_choice_2_RelativePaymentDates CommodityRelativePaymentDates
      -- ^ The Payment Dates of the trade relative to the
      --   Calculation Periods.
    | AveragePriceLeg_choice_2_PaymentDates AdjustableDatesOrRelativeDateOffset
      -- ^ Dates on which payments will be made.
    | AveragePriceLeg_choice_2_MasterAgreementPaymentDates Bool
      -- ^ If present and true indicates that the Payment
      --   Date(s) are specified in the relevant master
      --   agreement.
    deriving (Eq, Ord, Show)

-- | The type of averaging used in an Asian option.
data AveragingInOutEnum
    = AveragingInOutEnum_In ()
      -- ^ The average price is used to derive the strike price.
      --   Also known as "Asian strike" style option.
    | AveragingInOutEnum_Out ()
      -- ^ The average price is used to derive the expiration
      --   price. Also known as "Asian price" style option.
    | AveragingInOutEnum_Both ()
      -- ^ The average price is used to derive both the strike
      --   and the expiration price.
    deriving (Eq, Ord, Show)

-- | The method of calculation to be used when averaging
--   rates. Per ISDA 2000 Definitions, Section 6.2.
--   Certain Definitions Relating to Floating Amounts.
data AveragingMethodEnum
    = AveragingMethodEnum_Unweighted ()
      -- ^ The arithmetic mean of the relevant rates for each
      --   reset date.
    | AveragingMethodEnum_Weighted ()
      -- ^ The arithmetic mean of the relevant rates in effect
      --   for each day in a calculation period calculated by
      --   multiplying each relevant rate by the number of days
      --   such relevant rate is in effect, determining the sum
      --   of such products and dividing such sum by the number
      --   of days in the calculation period.
    deriving (Eq, Ord, Show)

-- | An un ordered list of weighted averaging
--   observations.
data AveragingObservationList = AveragingObservationList with
    averagingObservation : [WeightedAveragingObservation]
        -- ^ A single weighted averaging observation.
      deriving (Eq, Ord, Show)

-- | Period over which an average value is taken.
data AveragingPeriod = AveragingPeriod with
    schedule : [AveragingSchedule]
        -- ^ A schedule for generating averaging observation
        --   dates.
    choice_ : Optional AveragingPeriod_choice
        -- ^ A choice between unweighted and weighted averaging
        --   date and times.
    marketDisruption : Optional MarketDisruption
        -- ^ The market disruption event as defined by ISDA 2002
        --   Definitions.
      deriving (Eq, Ord, Show)

-- | A variant type used inside AveragingPeriod
data AveragingPeriod_choice
    = AveragingPeriod_choice_AveragingDateTimes DateTimeList
      -- ^ An unweighted list of averaging observation date and
      --   times.
    | AveragingPeriod_choice_AveragingObservations AveragingObservationList
      -- ^ A weighted list of averaging observation date and
      --   times.
    deriving (Eq, Ord, Show)

-- | Method of generating a series of dates.
data AveragingSchedule = AveragingSchedule with
    startDate : Date
        -- ^ Date on which this period begins.
    endDate : Date
        -- ^ Date on which this period ends.
    averagingPeriodFrequency : CalculationPeriodFrequency
        -- ^ The frequency at which averaging period occurs with
        --   the regular part of the valuation schedule and their
        --   roll date convention.
      deriving (Eq, Ord, Show)

-- | As per ISDA 2002 Definitions.
data Barrier = Barrier with
    barrierCap : Optional TriggerEvent
        -- ^ A trigger level approached from beneath.
    barrierFloor : Optional TriggerEvent
        -- ^ A trigger level approached from above.
      deriving (Eq, Ord, Show)

-- | Some kind of numerical measure about an asset, eg.
--   its NPV, together with characteristics of that
--   measure.
data BasicQuotation = BasicQuotation with
    id_ : Optional Text
    value : Optional Decimal
        -- ^ The value of the the quotation.
    measureType : Optional AssetMeasureType
        -- ^ The type of the value that is measured. This could be
        --   an NPV, a cash flow, a clean price, etc.
    quoteUnits : Optional PriceQuoteUnits
        -- ^ The optional units that the measure is expressed in.
        --   If not supplied, this is assumed to be a price/value
        --   in currency units.
    side : Optional QuotationSideEnum
        -- ^ The side (bid/mid/ask) of the measure.
    currency : Optional Currency
        -- ^ The optional currency that the measure is expressed
        --   in. If not supplied, this is defaulted from the
        --   reportingCurrency in the valuationScenarioDefinition.
    currencyType : Optional ReportingCurrencyType
        -- ^ The optional currency that the measure is expressed
        --   in. If not supplied, this is defaulted from the
        --   reportingCurrency in the valuationScenarioDefinition.
    timing : Optional QuoteTiming
        -- ^ When during a day the quote is for. Typically, if
        --   this element is supplied, the QuoteLocation needs
        --   also to be supplied.
    quoteLocation_model : Optional BasicQuotation_QuoteLocation_model
    informationSource : [InformationSource]
        -- ^ The information source where a published or displayed
        --   market rate will be obtained, e.g. Telerate Page
        --   3750.
    pricingModel : Optional PricingModel
        -- ^ .
    time_ : Optional Time
        -- ^ When the quote was observed or when a calculated
        --   value was generated.
    valuationDate : Optional Date
        -- ^ When the quote was computed.
    expiryTime : Optional Time
        -- ^ When does the quote cease to be valid.
    cashflowType : Optional CashflowType
        -- ^ For cash flows, the type of the cash flows. Examples
        --   include: Coupon payment, Premium Fee, Settlement Fee,
        --   Brokerage Fee, etc.
      deriving (Eq, Ord, Show)

-- | A variant type used inside BasicQuotation
data BasicQuotation_QuoteLocation_model
    = BasicQuotation_QuoteLocation_model_BusinessCenter BusinessCenter
      -- ^ A city or other business center.
    | BasicQuotation_QuoteLocation_model_ExchangeId ExchangeId
      -- ^ The exchange (e.g. stock or futures exchange) from
      --   which the quote is obtained.
    deriving (Eq, Ord, Show)

-- | A type describing the underlyer features of a basket
--   swap. Each of the basket constituents are described
--   through an embedded component, the
--   basketConstituentsType.
data Basket = Basket with
    id_ : Optional Text
    openUnits : Optional Decimal
        -- ^ The number of units (index or securities) that
        --   constitute the underlyer of the swap. In the case of
        --   a basket swap, this element is used to reference both
        --   the number of basket units, and the number of each
        --   asset components of the basket when these are
        --   expressed in absolute terms.
    basketConstituent : [BasketConstituent]
        -- ^ Describes each of the components of the basket.
    basketDivisor : Optional Decimal
        -- ^ Specifies the basket divisor amount. This value is
        --   normally used to adjust the constituent weight for
        --   pricing or to adjust for dividends, or other
        --   corporate actions.
    basketVersion : Optional Int
        -- ^ Basket version, used to record changes in basket
        --   composition or weights
    basketIdentifier_model : Optional Basket_BasketIdentifier_model
    basketCurrency : Optional Currency
        -- ^ Specifies the currency for this basket.
      deriving (Eq, Ord, Show)

-- | A structure indicating that the basket underlyer of
--   the trade has changed due to client trading activity
data BasketChangeEvent = BasketChangeEvent with
    eventIdentifier : [BusinessEventIdentifier]
      deriving (Eq, Ord, Show)

-- | A type describing each of the constituents of a
--   basket.
data BasketConstituent = BasketConstituent with
    id_ : Optional Text
    payerReceiver_model : Optional BasketConstituent_PayerReceiver_model
    underlyingAsset : Asset
        -- ^ Define the underlying asset, either a listed security
        --   or other instrument.
    constituentWeight : Optional ConstituentWeight
        -- ^ Specifies the weight of each of the underlyer
        --   constituent within the basket, either in absolute or
        --   relative terms. This is an optional component, as
        --   certain swaps do not specify a specific weight for
        --   each of their basket constituents.
    dividendPayout : Optional DividendPayout
        -- ^ Specifies the dividend payout ratio associated with
        --   an equity underlyer. A basket swap can have different
        --   payout ratios across the various underlying
        --   constituents. In certain cases the actual ratio is
        --   not known on trade inception, and only general
        --   conditions are then specified. Users should note that
        --   FpML makes a distinction between the derivative
        --   contract and the underlyer of the contract. It would
        --   be better if the agreed dividend payout on a
        --   derivative contract was modelled at the level of the
        --   derivative contract, an approach which may be adopted
        --   in the next major version of FpML.
    underlyerPrice : Optional Price
        -- ^ Specifies the price that is associated with each of
        --   the basket constituents. This component is optional,
        --   as it is not absolutely required to accurately
        --   describe the economics of the trade, considering the
        --   price that characterizes the equity swap is
        --   associated to the leg of the trade.
    underlyerNotional : Optional Money
        -- ^ Specifies the notional (i.e. price * quantity) that
        --   is associated with each of the basket constituents.
        --   This component is optional, as it is not absolutely
        --   required to accurately describe the economics of the
        --   trade, considering the notional that characterizes
        --   the equity swap is associated to the leg of the
        --   trade.
    underlyerSpread : Optional SpreadScheduleReference
        -- ^ Provides a link to the spread schedule used for this
        --   underlyer.
    couponPayment : Optional PendingPayment
        -- ^ The next upcoming coupon payment.
    underlyerFinancing : Optional UnderlyerInterestLeg
        -- ^ Financing terms associated with this underlyer
    underlyerLoanRate : Optional UnderlyerLoanRate
        -- ^ Loan rate terms associated with this underlyer.
        --   Commonly used for stock loan. You must not duplicate
        --   data elements already contained within dividend
        --   conditions at transaction level
    underlyerCollateral : Optional Collateral
        -- ^ Collateral associated with this underlyer. Note that
        --   this is not typical usage, collateral is more often
        --   at transaction level
      deriving (Eq, Ord, Show)

-- | A record type used inside BasketConstituent
data BasketConstituent_PayerReceiver_model = BasketConstituent_PayerReceiver_model with
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
      deriving (Eq, Ord, Show)

data BasketId = BasketId with
    basketIdScheme : Optional NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

data BasketName = BasketName with
    basketNameScheme : Optional NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

-- | A variant type used inside Basket
data Basket_BasketIdentifier_model
    = Basket_BasketIdentifier_model_Items Basket_items
    | Basket_BasketIdentifier_model_BasketId [BasketId]
      -- ^ A CDS basket identifier
    deriving (Eq, Ord, Show)

-- | A record type used inside Basket
data Basket_items = Basket_items with
    basketName : BasketName
        -- ^ The name of the basket expressed as a free format
        --   string. FpML does not define usage rules for this
        --   element.
    basketId : [BasketId]
        -- ^ A CDS basket identifier
      deriving (Eq, Ord, Show)

-- | A type defining the beneficiary of the funds.
data Beneficiary = Beneficiary with
    choice_ : Beneficiary_choice
    beneficiaryPartyReference : Optional PartyReference
        -- ^ Link to the party acting as beneficiary. This element
        --   can only appear within the beneficiary container
        --   element.
      deriving (Eq, Ord, Show)

-- | A variant type used inside Beneficiary
data Beneficiary_choice
    = Beneficiary_choice_RoutingIds RoutingIds
      -- ^ A set of unique identifiers for a party, eachone
      --   identifying the party within a payment system. The
      --   assumption is that each party will not have more than
      --   one identifier within the same payment system.
    | Beneficiary_choice_RoutingExplicitDetails RoutingExplicitDetails
      -- ^ A set of details that is used to identify a party
      --   involved in the routing of a payment when the party
      --   does not have a code that identifies it within one of
      --   the recognized payment systems.
    | Beneficiary_choice_RoutingIdsAndExplicitDetails RoutingIdsAndExplicitDetails
      -- ^ A combination of coded payment system identifiers and
      --   details for physical addressing for a party involved
      --   in the routing of a payment.
    deriving (Eq, Ord, Show)

-- | A type defining the Bermuda option exercise dates and
--   the expiration date together with any rules
--   govenerning the notional amount of the underlying
--   which can be exercised on any given exercise date and
--   any associated exercise fee.
data BermudaExercise = BermudaExercise with
    id_ : Optional Text
    bermudaExerciseDates : AdjustableOrRelativeDates
        -- ^ The dates the define the Bermuda option exercise
        --   dates and the expiration date. The last specified
        --   date is assumed to be the expiration date. The dates
        --   can either be specified as a series of explicit dates
        --   and associated adjustments or as a series of dates
        --   defined relative to another schedule of dates, for
        --   example, the calculation period start dates. Where a
        --   relative series of dates are defined the first and
        --   last possible exercise dates can be separately
        --   specified.
    relevantUnderlyingDate : Optional AdjustableOrRelativeDates
        -- ^ The date on the underlying set by the exercise of an
        --   option. What this date is depends on the option (e.g.
        --   in a swaption it is the swap effective date, in an
        --   extendible/cancelable provision it is the swap
        --   termination date).
    earliestExerciseTime : BusinessCenterTime
        -- ^ The earliest time at which notice of exercise can be
        --   given by the buyer to the seller (or seller's agent)
        --   i) on the expriation date, in the case of a European
        --   style option, (ii) on each bermuda option exercise
        --   date and the expiration date, in the case of a
        --   Bermuda style option the commencement date to, and
        --   including, the expiration date , in the case of an
        --   American option.
    latestExerciseTime : Optional BusinessCenterTime
        -- ^ For a Bermuda or American style option, the latest
        --   time on an exercise business day (excluding the
        --   expiration date) within the exercise period that
        --   notice can be given by the buyer to the seller or
        --   seller's agent. Notice of exercise given after this
        --   time will be deemed to have been given on the next
        --   exercise business day.
    expirationTime : BusinessCenterTime
        -- ^ The latest time for exercise on expirationDate.
    multipleExercise : Optional MultipleExercise
        -- ^ As defined in the 2000 ISDA Definitions, Section
        --   12.4. Multiple Exercise, the buyer of the option has
        --   the right to exercise all or less than all the
        --   unexercised notional amount of the underlying swap on
        --   one or more days in the exercise period, but on any
        --   such day may not exercise less than the minimum
        --   notional amount or more that the maximum notional
        --   amount, and if an integral multiple amount is
        --   specified, the notional amount exercised must be
        --   equal to, or be an intergral multiple of, the
        --   integral multiple amount.
    exerciseFeeSchedule : Optional ExerciseFeeSchedule
        -- ^ The fees associated with an exercise date. The fees
        --   are conditional on the exercise occuring. The fees
        --   can be specified as actual currency amounts or as
        --   percentages of the notional amount being exercised.
      deriving (Eq, Ord, Show)

-- | An exchange traded bond.
data Bond = Bond with
    id_ : Optional Text
    instrumentId : [InstrumentId]
        -- ^ Identification of the underlying asset, using public
        --   and/or private identifiers.
    description : Optional String
        -- ^ Long name of the underlying asset.
    currency : Optional IdentifiedCurrency
        -- ^ Trading currency of the underlyer when transacted as
        --   a cash instrument.
    exchangeId : Optional ExchangeId
        -- ^ Identification of the exchange on which this asset is
        --   transacted for the purposes of calculating a
        --   contractural payoff. The term "Exchange" is assumed
        --   to have the meaning as defined in the ISDA 2002
        --   Equity Derivatives Definitions.
    clearanceSystem : Optional ClearanceSystem
        -- ^ Identification of the clearance system associated
        --   with the transaction exchange.
    definition : Optional ProductReference
        -- ^ An optional reference to a full FpML product that
        --   defines the simple product in greater detail. In case
        --   of inconsistency between the terms of the simple
        --   product and those of the detailed definition, the
        --   values in the simple product override those in the
        --   detailed definition.
    choice_ : Optional Bond_choice
        -- ^ Specifies the issuer name of a fixed income security
        --   or convertible bond. This name can either be
        --   explicitly stated, or specified as an href into
        --   another element of the document, such as the obligor.
    seniority : Optional CreditSeniority
        -- ^ The repayment precedence of a debt instrument.
    couponType : Optional CouponType
        -- ^ Specifies if the bond has a variable coupon,
        --   step-up/down coupon or a zero-coupon.
    couponRate : Optional Decimal
        -- ^ Specifies the coupon rate (expressed in percentage)
        --   of a fixed income security or convertible bond.
    maturity : Optional Date
        -- ^ The date when the principal amount of a security
        --   becomes due and payable.
    parValue : Optional Decimal
        -- ^ Specifies the nominal amount of a fixed income
        --   security or convertible bond.
    faceAmount : Optional Decimal
        -- ^ Specifies the total amount of the issue. Corresponds
        --   to the par value multiplied by the number of issued
        --   security.
    paymentFrequency : Optional Period
        -- ^ Specifies the frequency at which the bond pays, e.g.
        --   6M.
    dayCountFraction : Optional DayCountFraction
        -- ^ The day count basis for the bond.
      deriving (Eq, Ord, Show)

-- | A variant type used inside Bond
data Bond_choice
    = Bond_choice_IssuerName String
    | Bond_choice_IssuerPartyReference PartyReference
    deriving (Eq, Ord, Show)

-- | When breakage cost is applicable, this defines who is
--   calculating it.
data BreakageCalculatedByEnum
    = BreakageCalculatedByEnum_Agent_Bank ()
      -- ^ Breakage cost is calculated by the agent bank.
    | BreakageCalculatedByEnum_Lender ()
      -- ^ Breakage cost is calculated by the lender.
    deriving (Eq, Ord, Show)

-- | Identifies the market sector in which the trade has
--   been arranged.
data BrokerConfirmation = BrokerConfirmation with
    brokerConfirmationType : BrokerConfirmationType
        -- ^ The type of broker confirmation executed between the
        --   parties.
      deriving (Eq, Ord, Show)

-- | Identifies the market sector in which the trade has
--   been arranged.
data BrokerConfirmationType = BrokerConfirmationType with
    brokerConfirmationTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A scheme defining where bullion is to be delivered
--   for a Bullion Transaction.
data BullionDeliveryLocation = BullionDeliveryLocation with
    bullionDeliveryLocationScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | Physically settled leg of a physically settled
--   Bullion Transaction.
data BullionPhysicalLeg = BullionPhysicalLeg with
    id_ : Optional Text
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    bullionType : BullionTypeEnum
        -- ^ The type of Bullion underlying a Bullion Transaction.
    deliveryLocation : BullionDeliveryLocation
        -- ^ The physical delivery location for the transaction.
    choice_ : BullionPhysicalLeg_choice
    totalPhysicalQuantity : Optional UnitQuantity
        -- ^ The Total Quantity of the commodity to be delivered.
    settlementDate : AdjustableOrRelativeDate
        -- ^ Date on which the bullion will settle.
      deriving (Eq, Ord, Show)

-- | A variant type used inside BullionPhysicalLeg
data BullionPhysicalLeg_choice
    = BullionPhysicalLeg_choice_PhysicalQuantity CommodityNotionalQuantity
      -- ^ The Quantity per Delivery Period.
    | BullionPhysicalLeg_choice_PhysicalQuantitySchedule CommodityPhysicalQuantitySchedule
      -- ^ Allows the documentation of a shaped quantity trade
      --   where the quantity changes over the life of the
      --   transaction.
    deriving (Eq, Ord, Show)

-- | Defines which type of bullion is applicable for a
--   Bullion Transaction.
data BullionTypeEnum
    = BullionTypeEnum_Gold ()
      -- ^ Gold. Quality as per the Good Delivery Rules issued
      --   by the London Bullion Market Association.
    | BullionTypeEnum_Palladium ()
      -- ^ Palladium. Quality as per the Good Delivery Rules
      --   issued by the London Platinum and Palladium Market.
    | BullionTypeEnum_Platinum ()
      -- ^ Palladium. Quality as per the Good Delivery Rules
      --   issued by the London Platinum and Palladium Market.
    | BullionTypeEnum_Silver ()
      -- ^ Silver. Quality as per the Good Delivery Rules issued
      --   by the London Bullion Market Association.
    | BullionTypeEnum_Rhodium ()
      -- ^ Quality as per the Good Delivery Rules for Rhodium.
    | BullionTypeEnum_RhodiumSponge ()
      -- ^ DEPRECATED value which will be removed in FpML-6-0
      --   onwards. Quality as per the Good Delivery Rules for
      --   Rhodium (Sponge) is too specific.
    | BullionTypeEnum_Iridium ()
      -- ^ Quality as per the Good Delivery Rules for Iridium.
    | BullionTypeEnum_Ruthenium ()
      -- ^ Quality as per the Good Delivery Rules for Ruthenium.
    | BullionTypeEnum_Osmium ()
      -- ^ Quality as per the Good Delivery Rules for Osmium.
    deriving (Eq, Ord, Show)

-- | A code identifying a business day calendar location.
--   A business day calendar location is drawn from the
--   list identified by the business day calendar location
--   scheme.
data BusinessCenter = BusinessCenter with
    businessCenterScheme : Optional NonEmptyURI
    id_ : Optional Text
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type for defining a time with respect to a business
--   day calendar location. For example, 11:00am London
--   time.
data BusinessCenterTime = BusinessCenterTime with
    hourMinuteTime : HourMinuteTime
        -- ^ A time specified in hh:mm:ss format where the second
        --   component must be '00', e.g. 11am would be
        --   represented as 11:00:00.
    businessCenter : BusinessCenter
      deriving (Eq, Ord, Show)

-- | A type for defining business day calendar used in
--   determining whether a day is a business day or not. A
--   list of business day calendar locations may be
--   ordered in the document alphabetically based on
--   business day calendar location code. An FpML document
--   containing an unordered business day calendar
--   location list is still regarded as a conformant
--   document.
data BusinessCenters = BusinessCenters with
    id_ : Optional Text
    businessCenter : [BusinessCenter]
      deriving (Eq, Ord, Show)

-- | A pointer style reference to a set of business day
--   calendar defined elsewhere in the document.
data BusinessCentersReference = BusinessCentersReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | A type defining a range of contiguous business days
--   by defining an unadjusted first date, an unadjusted
--   last date and a business day convention and business
--   centers for adjusting the first and last dates if
--   they would otherwise fall on a non business day in
--   the specified business centers. The days between the
--   first and last date must also be good business days
--   in the specified centers to be counted in the range.
data BusinessDateRange = BusinessDateRange with
    unadjustedFirstDate : Date
        -- ^ The first date of a date range.
    unadjustedLastDate : Date
        -- ^ The last date of a date range.
    businessDayConvention : BusinessDayConventionEnum
        -- ^ The convention for adjusting a date if it would
        --   otherwise fall on a day that is not a business day.
    businessCentersOrReference_model : Optional BusinessDateRange_BusinessCentersOrReference_model
      deriving (Eq, Ord, Show)

-- | A variant type used inside BusinessDateRange
data BusinessDateRange_BusinessCentersOrReference_model
    = BusinessDateRange_BusinessCentersOrReference_model_BusinessCentersReference BusinessCentersReference
      -- ^ A pointer style reference to a set of financial
      --   business centers defined elsewhere in the document.
      --   This set of business centers is used to determine
      --   whether a particular day is a business day or not.
    | BusinessDateRange_BusinessCentersOrReference_model_BusinessCenters BusinessCenters
    deriving (Eq, Ord, Show)

-- | A type defining the business day convention and
--   financial business centers used for adjusting any
--   relevant date if it would otherwise fall on a day
--   that is not a business day in the specified business
--   centers.
data BusinessDayAdjustments = BusinessDayAdjustments with
    id_ : Optional Text
    businessDayConvention : BusinessDayConventionEnum
        -- ^ The convention for adjusting a date if it would
        --   otherwise fall on a day that is not a business day.
    businessCentersOrReference_model : Optional BusinessDayAdjustments_BusinessCentersOrReference_model
      deriving (Eq, Ord, Show)

-- | Reference to a business day adjustments structure.
data BusinessDayAdjustmentsReference = BusinessDayAdjustmentsReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | A variant type used inside BusinessDayAdjustments
data BusinessDayAdjustments_BusinessCentersOrReference_model
    = BusinessDayAdjustments_BusinessCentersOrReference_model_BusinessCentersReference BusinessCentersReference
      -- ^ A pointer style reference to a set of financial
      --   business centers defined elsewhere in the document.
      --   This set of business centers is used to determine
      --   whether a particular day is a business day or not.
    | BusinessDayAdjustments_BusinessCentersOrReference_model_BusinessCenters BusinessCenters
    deriving (Eq, Ord, Show)

-- | The convention for adjusting any relevant date if it
--   would otherwise fall on a day that is not a valid
--   business day. Note that FRN is included here as a
--   type of business day convention although it does not
--   strictly fall within ISDA's definition of a Business
--   Day Convention and does not conform to the simple
--   definition given above.
data BusinessDayConventionEnum
    = BusinessDayConventionEnum_FOLLOWING ()
      -- ^ The non-business date will be adjusted to the first
      --   following day that is a business day
    | BusinessDayConventionEnum_FRN ()
      -- ^ Per 2000 ISDA Definitions, Section 4.11. FRN
      --   Convention; Eurodollar Convention.
    | BusinessDayConventionEnum_MODFOLLOWING ()
      -- ^ The non-business date will be adjusted to the first
      --   following day that is a business day unless that day
      --   falls in the next calendar month, in which case that
      --   date will be the first preceding day that is a
      --   business day.
    | BusinessDayConventionEnum_PRECEDING ()
      -- ^ The non-business day will be adjusted to the first
      --   preceding day that is a business day.
    | BusinessDayConventionEnum_MODPRECEDING ()
      -- ^ The non-business date will be adjusted to the first
      --   preceding day that is a business day unless that day
      --   falls in the previous calendar month, in which case
      --   that date will be the first following day that us a
      --   business day.
    | BusinessDayConventionEnum_NEAREST ()
      -- ^ The non-business date will be adjusted to the nearest
      --   day that is a business day - i.e. if the non-business
      --   day falls on any day other than a Sunday or a Monday,
      --   it will be the first preceding day that is a business
      --   day, and will be the first following business day if
      --   it falls on a Sunday or a Monday.
    | BusinessDayConventionEnum_NONE ()
      -- ^ The date will not be adjusted if it falls on a day
      --   that is not a business day.
    | BusinessDayConventionEnum_NotApplicable ()
      -- ^ The date adjustments conventions are defined
      --   elsewhere, so it is not required to specify them
      --   here.
    deriving (Eq, Ord, Show)

-- | A type defining an event identifier issued by the
--   indicated party.
data BusinessEventIdentifier = BusinessEventIdentifier with
    id_ : Optional Text
    partyReference : PartyReference
        -- ^ Reference to a party.
    accountReference : Optional AccountReference
        -- ^ Reference to an account.
    eventId : EventId
      deriving (Eq, Ord, Show)

-- | A type that can be used to identify the type of
--   business process in a request. Examples include
--   Allocation, Clearing, Confirmation, etc.
data BusinessProcess = BusinessProcess with
    businessProcessScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type that represents information about a unit
--   within an organization.
data BusinessUnit = BusinessUnit with
    id_ : Optional Text
    name : Optional String
        -- ^ A name used to describe the organization unit
    businessUnitId : Optional FpmlUnit
        -- ^ An identifier used to uniquely identify organization
        --   unit
    contactInfo : Optional ContactInformation
        -- ^ Information on how to contact the unit using various
        --   means.
    country : Optional CountryCode
        -- ^ The ISO 3166 standard code for the country where the
        --   individual works.
      deriving (Eq, Ord, Show)

-- | Reference to an organizational unit.
data BusinessUnitReference = BusinessUnitReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | A type describing a role played by a unit in one or
--   more transactions. Examples include roles such as
--   Trader, Collateral, Confirmation, Settlement, etc.
--   This can be extended to provide custom roles.
data BusinessUnitRole = BusinessUnitRole with
    unitRoleScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data BuySellEnum
    = BuySellEnum_Buyer ()
    | BuySellEnum_Seller ()
    deriving (Eq, Ord, Show)

-- | A type defining the ISDA calculation agent
--   responsible for performing duties as defined in the
--   applicable product definitions.
data CalculationAgent
    = CalculationAgent_CalculationAgentPartyReference [PartyReference]
      -- ^ A pointer style reference to a party identifier
      --   defined elsewhere in the document. The party
      --   referenced is the ISDA Calculation Agent for the
      --   trade. If more than one party is referenced then the
      --   parties are assumed to be co-calculation agents, i.e.
      --   they have joint responsibility.
    | CalculationAgent_CalculationAgentParty CalculationAgentPartyEnum
      -- ^ The ISDA calculation agent responsible for performing
      --   duties as defined in the applicable product
      --   definitions. For example, the Calculation Agent may
      --   be defined as being the Non-exercising Party.
    deriving (Eq, Ord, Show)

-- | The specification of how a calculation agent will be
--   determined.
data CalculationAgentPartyEnum
    = CalculationAgentPartyEnum_ExercisingParty ()
      -- ^ The party that gives notice of exercise. Per 2000
      --   ISDA Definitions, Section 11.1. Parties, paragraph
      --   (d).
    | CalculationAgentPartyEnum_NonExercisingParty ()
      -- ^ The party that is given notice of exercise. Per 2000
      --   ISDA Definitions, Section 11.1. Parties, paragraph
      --   (e).
    | CalculationAgentPartyEnum_AsSpecifiedInMasterAgreement ()
      -- ^ The Calculation Agent is determined by reference to
      --   the relevant master agreement.
    | CalculationAgentPartyEnum_AsSpecifiedInStandardTermsSupplement ()
      -- ^ The Calculation Agent is determined by reference to
      --   the relevant standard terms supplement.
    | CalculationAgentPartyEnum_Both ()
      -- ^ Both parties with joined rights to be a calculation
      --   agent.
    deriving (Eq, Ord, Show)

-- | A type defining the frequency at which calculation
--   period end dates occur within the regular part of the
--   calculation period schedule and thier roll date
--   convention. In case the calculation frequency is of
--   value T (term), the period is defined by the
--   swap\swapStream\calculationPerioDates\effectiveDate
--   and the
--   swap\swapStream\calculationPerioDates\terminationDate.
data CalculationPeriodFrequency = CalculationPeriodFrequency with
    id_ : Optional Text
    periodMultiplier : Int
        -- ^ A time period multiplier, e.g. 1, 2 or 3 etc. If the
        --   period value is T (Term) then periodMultiplier must
        --   contain the value 1.
    period : PeriodExtendedEnum
        -- ^ A time period, e.g. a day, week, month, year or term
        --   of the stream.
    rollConvention : RollConventionEnum
        -- ^ Used in conjunction with a frequency and the regular
        --   period start date of a calculation period, determines
        --   each calculation period end date within the regular
        --   part of a calculation period schedule.
      deriving (Eq, Ord, Show)

-- | A pointer style reference to single-day-duration
--   calculation periods defined elsewhere - note that
--   this schedule consists of a parameterised schedule in
--   a calculationPeriodsSchedule container.
data CalculationPeriodsDatesReference = CalculationPeriodsDatesReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | A pointer style reference to a calculation periods
--   schedule defined elsewhere - note that this schedule
--   consists of a series of actual dates in a
--   calculationPeriods container.
data CalculationPeriodsReference = CalculationPeriodsReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | A pointer style reference to a calculation periods
--   schedule defined elsewhere - note that this schedule
--   consists of a parameterised schedule in a
--   calculationPeriodsSchedule container.
data CalculationPeriodsScheduleReference = CalculationPeriodsScheduleReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | Describes the date source calendar for a contract
--   whereby the prices are from the underlying commodity
--   price source (e.g. exchange traded futures contract),
--   but the dates are based off another calendar (e.g.
--   the listed option on the futures contract).
data CalendarSourceEnum
    = CalendarSourceEnum_ListedOption ()
      -- ^ Pricing Dates (based off of listed options dates) in
      --   respect of each Calculation Period, the last
      --   Commodity Business Day on which the relevant Options
      --   Contract is scheduled to trade on the Exchange.
    | CalendarSourceEnum_Future ()
      -- ^ Pricing Dates (based off of futures dates) in respect
      --   of each Calculation Period, the last Commodity
      --   Business Day on which the relevant Futures Contract
      --   is scheduled to trade on the Exchange.
    deriving (Eq, Ord, Show)

-- | A type for defining a calendar spread feature.
data CalendarSpread = CalendarSpread with
    expirationDateTwo : AdjustableOrRelativeDate
      deriving (Eq, Ord, Show)

-- | Identifies a party to the on-demand repo transaction
--   that has a right to demand for termination of the
--   repo transaction.
data CallingPartyEnum
    = CallingPartyEnum_InitialBuyer ()
      -- ^ Initial buyer to the repo transaction.
    | CallingPartyEnum_InitialSeller ()
      -- ^ Initial seller to the repo transaction.
    | CallingPartyEnum_Either ()
      -- ^ Either, Buyer or Seller to the repo transaction.
    | CallingPartyEnum_AsDefinedInMasterAgreement ()
      -- ^ As defined in Master Agreement.
    deriving (Eq, Ord, Show)

data Cash = Cash with
    id_ : Optional Text
    instrumentId : [InstrumentId]
        -- ^ Identification of the underlying asset, using public
        --   and/or private identifiers.
    description : Optional String
        -- ^ Long name of the underlying asset.
    currency : Currency
        -- ^ The currency in which an amount is denominated.
      deriving (Eq, Ord, Show)

-- | A type defining the list of reference institutions
--   polled for relevant rates or prices when determining
--   the cash settlement amount for a product where cash
--   settlement is applicable.
data CashSettlementReferenceBanks = CashSettlementReferenceBanks with
    id_ : Optional Text
    referenceBank : [ReferenceBank]
        -- ^ An institution (party) identified by means of a
        --   coding scheme and an optional name.
      deriving (Eq, Ord, Show)

-- | An identifier used to identify a single component
--   cashflow.
data CashflowId = CashflowId with
    cashflowIdScheme : Optional NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

-- | The notional/principal value/quantity/volume used to
--   compute the cashflow.
data CashflowNotional = CashflowNotional with
    id_ : Optional Text
    choice_ : CashflowNotional_choice
    amount : Decimal
        -- ^ The quantity of notional (in currency or other
        --   units).
      deriving (Eq, Ord, Show)

-- | A variant type used inside CashflowNotional
data CashflowNotional_choice
    = CashflowNotional_choice_Currency Currency
      -- ^ The currency in which an amount is denominated.
    | CashflowNotional_choice_Units NormalizedString
      -- ^ The units in which an amount (not monetary) is
      --   denominated.
    deriving (Eq, Ord, Show)

-- | A coding scheme used to describe the type or purpose
--   of a cash flow or cash flow component.
data CashflowType = CashflowType with
    cashflowTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | Abstract base type for non-negotiated trade change
--   descriptions
data ChangeEvent
    = ChangeEvent_IndexChange IndexChange
    | ChangeEvent_CorporateAction CorporateActionEvent
    | ChangeEvent_BasketChange BasketChangeEvent
    deriving (Eq, Ord, Show)

-- | A classified non negative payment.
data ClassifiablePayment = ClassifiablePayment with
    id_ : Optional Text
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    paymentDate : AdjustableOrRelativeDate
        -- ^ The payment date, which can be expressed as either an
        --   adjustable or relative date.
    paymentAmount : NonNegativeMoney
        -- ^ Non negative payment amount.
    paymentType : [PaymentType]
        -- ^ Payment classification.
      deriving (Eq, Ord, Show)

-- | Unless otherwise specified, the principal clearance
--   system customarily used for settling trades in the
--   relevant underlying.
data ClearanceSystem = ClearanceSystem with
    clearanceSystemScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A structure describing a trade registration event
--   that is part of a clearing process.
data Clearing = Clearing with
    submitted : TradeWrapper
        -- ^ The original trade or event submitted to the clearing
        --   service.
    cleared : [TradeWrapper]
        -- ^ The trades or events generated by the clearing
        --   service as a result of clearing.
      deriving (Eq, Ord, Show)

-- | A message indicating that a clearing request has been
--   acted on and as a result a trade has been cleared.
data ClearingConfirmed = ClearingConfirmed with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : NotificationMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    correlationAndOptionalSequence_model : Optional ClearingConfirmed_CorrelationAndOptionalSequence_model
    onBehalfOf_model : Optional ClearingConfirmed_OnBehalfOf_model
    compression_model : Optional ClearingConfirmed_Compression_model
    portfolioReference_model : Optional ClearingConfirmed_PortfolioReference_model
    clearingResults_model : Optional ClearingConfirmed_ClearingResults_model
    eventValuation_model : Optional ClearingConfirmed_EventValuation_model
    creditLimitInformation : [CreditLimitInformation]
    partiesAndAccounts_model : Optional ClearingConfirmed_PartiesAndAccounts_model
      deriving (Eq, Ord, Show)

-- | A variant type used inside ClearingConfirmed
data ClearingConfirmed_ClearingResults_model
    = ClearingConfirmed_ClearingResults_model_TradePackage TradePackage
    | ClearingConfirmed_ClearingResults_model_Items1 ClearingConfirmed_items
    | ClearingConfirmed_ClearingResults_model_AdditionalEvent AdditionalEvent
      -- ^ The additionalEvent element is an
      --   extension/substitution point to customize FpML and
      --   add additional events.
    | ClearingConfirmed_ClearingResults_model_Items2 ClearingConfirmed_items_2
    | ClearingConfirmed_ClearingResults_model_DeClear DeClear
      -- ^ A structure describing a declear event. The deClear
      --   event allows a firm to request that a trade be
      --   removed from clearing, or a clearing service to
      --   request consent for this, or to report that it has
      --   been done.
    | ClearingConfirmed_ClearingResults_model_Clearing Clearing
    deriving (Eq, Ord, Show)

-- | A record type used inside ClearingConfirmed
data ClearingConfirmed_Compression_model = ClearingConfirmed_Compression_model with
    compressionActivity : CompressionActivity
        -- ^ Compression information for the trade.
      deriving (Eq, Ord, Show)

-- | A record type used inside ClearingConfirmed
data ClearingConfirmed_CorrelationAndOptionalSequence_model = ClearingConfirmed_CorrelationAndOptionalSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequence_model : Optional ClearingConfirmed_Sequence_model
      deriving (Eq, Ord, Show)

-- | A record type used inside ClearingConfirmed
data ClearingConfirmed_EventValuation_model = ClearingConfirmed_EventValuation_model with
    quote : [BasicQuotation]
        -- ^ Pricing information for the trade.
      deriving (Eq, Ord, Show)

-- | A record type used inside ClearingConfirmed
data ClearingConfirmed_OnBehalfOf_model = ClearingConfirmed_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside ClearingConfirmed
data ClearingConfirmed_PartiesAndAccounts_model = ClearingConfirmed_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A record type used inside ClearingConfirmed
data ClearingConfirmed_PortfolioReference_model = ClearingConfirmed_PortfolioReference_model with
    portfolioReference : PortfolioReference
      deriving (Eq, Ord, Show)

-- | A record type used inside ClearingConfirmed
data ClearingConfirmed_Sequence_model = ClearingConfirmed_Sequence_model with
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside ClearingConfirmed
data ClearingConfirmed_items = ClearingConfirmed_items with
    originatingEvent : Optional OriginatingEvent
    trade : Trade
      deriving (Eq, Ord, Show)

-- | A record type used inside ClearingConfirmed
data ClearingConfirmed_items_2 = ClearingConfirmed_items_2 with
    terminatingEvent : Optional TerminatingEvent
        -- ^ This may be used to describe why a trade was
        --   terminated.
    termination : TradeNotionalChange
      deriving (Eq, Ord, Show)

-- | The reason a trade is exempted from a clearing
--   mandate.
data ClearingExceptionReason = ClearingExceptionReason with
    clearingExceptionReasonScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data ClearingInstructions = ClearingInstructions with
    requestedClearingAction : Optional RequestedClearingAction
    requestedClearingOrganizationPartyReference : Optional PartyReference
      deriving (Eq, Ord, Show)

-- | A message indicating that a clearing request has not
--   been acted on due to a business decision and
--   therefore no trade has been cleared.
data ClearingRefused = ClearingRefused with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : NotificationMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    correlationAndOptionalSequence_model : Optional ClearingRefused_CorrelationAndOptionalSequence_model
    onBehalfOf_model : Optional ClearingRefused_OnBehalfOf_model
    tradingEvents_model : Optional ClearingRefused_TradingEvents_model
    eventValuation_model : Optional ClearingRefused_EventValuation_model
    partiesAndAccounts_model : Optional ClearingRefused_PartiesAndAccounts_model
    reason : [Reason]
      deriving (Eq, Ord, Show)

-- | A record type used inside ClearingRefused
data ClearingRefused_CorrelationAndOptionalSequence_model = ClearingRefused_CorrelationAndOptionalSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequence_model : Optional ClearingRefused_Sequence_model
      deriving (Eq, Ord, Show)

-- | A record type used inside ClearingRefused
data ClearingRefused_EventValuation_model = ClearingRefused_EventValuation_model with
    quote : [BasicQuotation]
        -- ^ Pricing information for the trade.
      deriving (Eq, Ord, Show)

-- | A record type used inside ClearingRefused
data ClearingRefused_OnBehalfOf_model = ClearingRefused_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside ClearingRefused
data ClearingRefused_PartiesAndAccounts_model = ClearingRefused_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A record type used inside ClearingRefused
data ClearingRefused_Sequence_model = ClearingRefused_Sequence_model with
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A variant type used inside ClearingRefused
data ClearingRefused_TradingEvents_model
    = ClearingRefused_TradingEvents_model_TradePackage TradePackage
    | ClearingRefused_TradingEvents_model_Items ClearingRefused_items
    | ClearingRefused_TradingEvents_model_AdditionalEvent AdditionalEvent
      -- ^ The additionalEvent element is an
      --   extension/substitution point to customize FpML and
      --   add additional events.
    deriving (Eq, Ord, Show)

-- | A record type used inside ClearingRefused
data ClearingRefused_items = ClearingRefused_items with
    originatingEvent : Optional OriginatingEvent
    trade : Trade
      deriving (Eq, Ord, Show)

-- | A message providing the current status of a clearing
--   request.
data ClearingStatus = ClearingStatus with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : NotificationMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    correlationAndOptionalSequence_model : Optional ClearingStatus_CorrelationAndOptionalSequence_model
    onBehalfOf_model : Optional ClearingStatus_OnBehalfOf_model
    clearingStatusItem : Optional ClearingStatusItem
        -- ^ Describes the status of the clearing process relating
        --   to the identified trade.
    partiesAndAccounts_model : Optional ClearingStatus_PartiesAndAccounts_model
      deriving (Eq, Ord, Show)

-- | A component of a clearing status report. This
--   provides the clearing status for a single trade.
data ClearingStatusItem = ClearingStatusItem with
    choice_ : ClearingStatusItem_choice
    clearingStatusValue : ClearingStatusValue
        -- ^ The status of the clearing process for the identified
        --   trade. For example, Received, Pending (Approval),
        --   Registered (i.e. cleared), Rejected, etc.
    updatedDateTime : Optional Time
        -- ^ When the clearing status changed to the current
        --   value. This is mostly useful if the clearing status
        --   messages could be delayed from when the status
        --   actually changes; this could be important if the
        --   status date is used as the basis of any settlement
        --   calculations.
    reason : [Reason]
        -- ^ Supporting information which may be produced to
        --   explain the clearing process status. This may be a
        --   business reason e.g. failed eligibility criteria for
        --   a trade in Rejected status.
    statusAppliesTo : [PartyReference]
        -- ^ Reference to parties currently in this status, e.g.
        --   parties for which we are awaiting approval. For
        --   example, if a trade is in "Pending" status, this
        --   would identify which parties' approval the trade was
        --   pending.
      deriving (Eq, Ord, Show)

-- | A variant type used inside ClearingStatusItem
data ClearingStatusItem_choice
    = ClearingStatusItem_choice_TradeIdentifier [TradeIdentifier]
      -- ^ Identifier(s) for the trade which is the subject of
      --   the clearing request to which this status relates.
    | ClearingStatusItem_choice_TradeReferenceInformation TradeReferenceInformation
      -- ^ Information about a trade.
    | ClearingStatusItem_choice_Trade Trade
      -- ^ Complete economics of the trade
    | ClearingStatusItem_choice_TradePackage TradePackage
    deriving (Eq, Ord, Show)

-- | The current status value of a clearing request.
data ClearingStatusValue = ClearingStatusValue with
    clearingStatusScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A record type used inside ClearingStatus
data ClearingStatus_CorrelationAndOptionalSequence_model = ClearingStatus_CorrelationAndOptionalSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequence_model : Optional ClearingStatus_Sequence_model
      deriving (Eq, Ord, Show)

-- | A record type used inside ClearingStatus
data ClearingStatus_OnBehalfOf_model = ClearingStatus_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside ClearingStatus
data ClearingStatus_PartiesAndAccounts_model = ClearingStatus_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A record type used inside ClearingStatus
data ClearingStatus_Sequence_model = ClearingStatus_Sequence_model with
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | The different options for specifying the attributes
--   of a coal quality measure as a decimal value.
data CoalAttributeDecimal
    = CoalAttributeDecimal_Items CoalAttributeDecimal_items
    | CoalAttributeDecimal_RejectionLimit Decimal
      -- ^ The actual limits of the quality characteristics of
      --   the Coal Product above or below which the Buyer may
      --   reject a Shipment.
    deriving (Eq, Ord, Show)

-- | A record type used inside CoalAttributeDecimal
data CoalAttributeDecimal_items = CoalAttributeDecimal_items with
    standardContent : Decimal
        -- ^ The actual content of the quality characteristics of
        --   the Coal Product Shipment expected by the Buyer.
    rejectionLimit : Optional Decimal
        -- ^ The actual limits of the quality characteristics of
        --   the Coal Product above or below which the Buyer may
        --   reject a Shipment.
      deriving (Eq, Ord, Show)

-- | The different options for specifying the attributes
--   of a coal quality measure as a percentage of the
--   measured value.
data CoalAttributePercentage
    = CoalAttributePercentage_Items CoalAttributePercentage_items
    | CoalAttributePercentage_RejectionLimit RestrictedPercentage
      -- ^ The actual limits of the quality characteristics of
      --   the Coal Product above or below which the Buyer may
      --   reject a Shipment.
    deriving (Eq, Ord, Show)

-- | A record type used inside CoalAttributePercentage
data CoalAttributePercentage_items = CoalAttributePercentage_items with
    standardContent : RestrictedPercentage
        -- ^ The actual content of the quality characteristics of
        --   the Coal Product Shipment expected by the Buyer.
    rejectionLimit : Optional RestrictedPercentage
        -- ^ The actual limits of the quality characteristics of
        --   the Coal Product above or below which the Buyer may
        --   reject a Shipment.
      deriving (Eq, Ord, Show)

-- | The physical delivery conditions for coal.
data CoalDelivery = CoalDelivery with
    choice_ : CoalDelivery_choice
    commodityUSCoalDelivery_model : Optional CoalDelivery_CommodityUSCoalDelivery_model
      deriving (Eq, Ord, Show)

-- | A scheme identifying the types of the Delivery Point
--   for a physically settled coal trade.
data CoalDeliveryPoint = CoalDeliveryPoint with
    deliveryPointScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A record type used inside CoalDelivery
data CoalDelivery_CommodityUSCoalDelivery_model = CoalDelivery_CommodityUSCoalDelivery_model with
    quantityVariationAdjustment : Bool
        -- ^ If true, indicates that QVA is applicable. If false,
        --   indicates that QVA is inapplicable.
    transportationEquipment : Optional CoalTransportationEquipment
        -- ^ The transportation equipment with which the Coal
        --   Product will be delivered and received.
    risk : Optional CommodityDeliveryRisk
        -- ^ Specifies how the risk associated with the delivery
        --   is assigned.
      deriving (Eq, Ord, Show)

-- | A variant type used inside CoalDelivery
data CoalDelivery_choice
    = CoalDelivery_choice_DeliveryPoint CoalDeliveryPoint
      -- ^ The point at which the Coal Product will be delivered
      --   and received.
    | CoalDelivery_choice_DeliveryAtSource Bool
      -- ^ The point at which the Coal Product as a reference to
      --   the Source of the Coal Product. This should be a
      --   reference to the source element within product.
    deriving (Eq, Ord, Show)

-- | Physically settled leg of a physically settled coal
--   transaction.
data CoalPhysicalLeg = CoalPhysicalLeg with
    id_ : Optional Text
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    deliveryPeriods : CommodityDeliveryPeriods
        -- ^ The period during which delivery/deliveries of Coal
        --   Products may be scheduled. Equivalent to Nomination
        --   Period(s) for US Coal.
    coal : CoalProduct
        -- ^ The specification of the Coal Product to be
        --   delivered.
    deliveryConditions : CoalDelivery
        -- ^ The physical delivery conditions for the transaction.
    deliveryQuantity : CommodityPhysicalQuantity
        -- ^ The different options for specifying the quantity.
      deriving (Eq, Ord, Show)

-- | A type defining the characteristics of the coal being
--   traded in a physically settled gas transaction.
data CoalProduct = CoalProduct with
    choice_ : CoalProduct_choice
    source : [CoalProductSource]
        -- ^ The SCoTA cargo origin, mining region, mine(s),
        --   mining complex(es), loadout(s) or river dock(s) or
        --   other point(s) of origin that Seller and Buyer agree
        --   are acceptable origins for the Coal Product. For
        --   International Coal transactions, this is the Origin
        --   of the Coal Product.
    sCoTASpecifications : Optional Bool
        -- ^ Indicates whether type and source refer to globalCOAL
        --   SCoTA specifications.
    commodityUSCoalProduct_model : Optional CoalProduct_CommodityUSCoalProduct_model
      deriving (Eq, Ord, Show)

-- | A scheme identifying the sources of coal for a
--   physically settled coal trade.
data CoalProductSource = CoalProductSource with
    commodityCoalProductSourceScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The different options for specifying the quality
--   attributes of the coal to be delivered.
data CoalProductSpecifications
    = CoalProductSpecifications_StandardQuality CoalStandardQuality
    | CoalProductSpecifications_StandardQualitySchedule CoalStandardQualitySchedule
    deriving (Eq, Ord, Show)

-- | A scheme identifying the types of coal for a
--   physically settled coal trade.
data CoalProductType = CoalProductType with
    commodityCoalProductTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A record type used inside CoalProduct
data CoalProduct_CommodityUSCoalProduct_model = CoalProduct_CommodityUSCoalProduct_model with
    btuQualityAdjustment : CoalQualityAdjustments
        -- ^ The Quality Adjustment formula to be used where the
        --   Actual Shipment BTU/Lb value differs from the
        --   Standard BTU/Lb value.
    so2QualityAdjustment : Optional CoalQualityAdjustments
        -- ^ The Quality Adjustment formula to be used where the
        --   Actual Shipment SO2/MMBTU value differs from the
        --   Standard SO2/MMBTU value.
      deriving (Eq, Ord, Show)

-- | A variant type used inside CoalProduct
data CoalProduct_choice
    = CoalProduct_choice_Type CoalProductType
      -- ^ The type of coal product to be delivered by reference
      --   to a pre-defined specification. For contracts under
      --   SCoTA terms this is the quality specification code
      --   (e.g. "DES ARA")
    | CoalProduct_choice_CoalProductSpecifications CoalProductSpecifications
      -- ^ The type of coal product to be delivered specified in
      --   full.
    deriving (Eq, Ord, Show)

-- | A scheme identifying the quality adjustment formulae
--   for a physically settled coal trade.
data CoalQualityAdjustments = CoalQualityAdjustments with
    commodityCoalQualityAdjustmentsScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The quality attributes of the coal to be delivered.
data CoalStandardQuality = CoalStandardQuality with
    moisture : Optional CoalAttributePercentage
        -- ^ The moisture content of the coal product.
    ash : Optional CoalAttributePercentage
        -- ^ The ash content of the coal product.
    sulfur : Optional CoalAttributePercentage
        -- ^ The sulfur/sulphur content of the coal product.
    sO2 : Optional CoalAttributePercentage
        -- ^ The sulfur/sulphur dioxide content of the coal
        --   product.
    volatile : Optional CoalAttributePercentage
        -- ^ The volatile content of the coal product.
    bTUperLB : Optional CoalAttributeDecimal
        -- ^ The number of British Thermal Units per Pound of the
        --   coal product.
    topSize : Optional CoalAttributeDecimal
        -- ^ The smallest sieve opening that will result in less
        --   than 5% of a sample of the coal product remaining.
    finesPassingScreen : Optional CoalAttributeDecimal
    grindability : Optional CoalAttributeDecimal
        -- ^ The Hardgrove Grindability Index value of the coal to
        --   be delivered.
    ashFusionTemperature : Optional CoalAttributeDecimal
        -- ^ The temperature at which the ash form of the coal
        --   product fuses completely in accordance with the ASTM
        --   International D1857 Standard Test Methodology.
    initialDeformation : Optional CoalAttributeDecimal
        -- ^ The temperature at which an ash cone shows evidence
        --   of deformation.
    softeningHeightWidth : Optional CoalAttributeDecimal
        -- ^ The temperature at which the height of an ash cone
        --   equals its width. (Softening temperature).
    softeningHeightHalfWidth : Optional CoalAttributeDecimal
        -- ^ The temperature at which the height of an ash cone
        --   equals half its width. (Hemisphere temperature).
    fluid : Optional CoalAttributeDecimal
        -- ^ The temperature at which the ash cone flattens.
      deriving (Eq, Ord, Show)

-- | The quality attributes of the coal to be delivered,
--   specified on a periodic basis.
data CoalStandardQualitySchedule = CoalStandardQualitySchedule with
    standardQualityStep : [CoalStandardQuality]
    choice_ : CoalStandardQualitySchedule_choice
      deriving (Eq, Ord, Show)

-- | A variant type used inside
--   CoalStandardQualitySchedule
data CoalStandardQualitySchedule_choice
    = CoalStandardQualitySchedule_choice_DeliveryPeriodsReference CalculationPeriodsReference
      -- ^ A pointer style reference to the Delivery Periods
      --   defined elsewhere.
    | CoalStandardQualitySchedule_choice_DeliveryPeriodsScheduleReference CalculationPeriodsScheduleReference
      -- ^ A pointer style reference to the Calculation Periods
      --   Schedule defined elsewhere.
    deriving (Eq, Ord, Show)

-- | A scheme identifying the methods by which coal may be
--   transported.
data CoalTransportationEquipment = CoalTransportationEquipment with
    commodityCoalTransportationEquipmentScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type for defining the obligations of the
--   counterparty subject to credit support requirements.
data Collateral = Collateral with
    independentAmount : IndependentAmount
        -- ^ Independent Amount is an amount that usually less
        --   creditworthy counterparties are asked to provide. It
        --   can either be a fixed amount or a percentage of the
        --   Transaction's value. The Independent Amount can be:
        --   (i) transferred before any trading between the
        --   parties occurs (as a deposit at a third party's
        --   account or with the counterparty) or (ii) callable
        --   after trading has occurred (typically because a
        --   downgrade has occurred). In situation (i), the
        --   Independent Amount is not included in the calculation
        --   of Exposure, but in situation (ii), it is included in
        --   the calculation of Exposure. Thus, for situation
        --   (ii), the Independent Amount may be transferred along
        --   with any collateral call. Independent Amount is a
        --   defined term in the ISDA Credit Support Annex. ("with
        --   respect to a party, the amount specified as such for
        --   that party in Paragraph 13; if no amount is
        --   specified, zero").
      deriving (Eq, Ord, Show)

data CollateralAllocationAccepted = CollateralAllocationAccepted with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : ResponseMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequence_model : Optional CollateralAllocationAccepted_Sequence_model
    onBehalfOf_model : Optional CollateralAllocationAccepted_OnBehalfOf_model
      deriving (Eq, Ord, Show)

-- | A record type used inside
--   CollateralAllocationAccepted
data CollateralAllocationAccepted_OnBehalfOf_model = CollateralAllocationAccepted_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside
--   CollateralAllocationAccepted
data CollateralAllocationAccepted_Sequence_model = CollateralAllocationAccepted_Sequence_model with
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

data CollateralValueAllocation = CollateralValueAllocation with
    type_ : CollateralValueAllocationEnum
        -- ^ The type of allocation e.g. Full or ExcessOverMargin
    value : [Money]
      deriving (Eq, Ord, Show)

-- | Denotes the method of collateral value allocation
data CollateralValueAllocationEnum
    = CollateralValueAllocationEnum_Buffer ()
      -- ^ The amount that is being allocated from a buffer
      --   account. A buffer account is meant to hold funds that
      --   the FCM can use to cover the liability of any client.
      --   In effect, the FCM has provided funds that are
      --   available to meet its customers’ needs and the DCO
      --   may use such collateral to meet a default by a
      --   customer to the same extent as if the customer
      --   provided the collateral.
    | CollateralValueAllocationEnum_Full ()
      -- ^ The full amount is being allocated
    | CollateralValueAllocationEnum_ExcessOverMargin ()
      -- ^ The allocated amount is an excess over the margin
      --   requirement
    | CollateralValueAllocationEnum_Margin ()
      -- ^ The allocated amount for margin requirement
    deriving (Eq, Ord, Show)

-- | Code that describes what type of collateral is posted
--   by a party to a transaction. Options include
--   Uncollateralized, Partial, Full, One-Way.
data CollateralizationType = CollateralizationType with
    collateralTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type describing the commission that will be charged
--   for each of the hedge transactions.
data Commission = Commission with
    commissionDenomination : CommissionDenominationEnum
        -- ^ The type of units used to express a commission.
    commissionAmount : Decimal
        -- ^ The commission amount, expressed in the way indicated
        --   by the commissionType element.
    currency : Optional Currency
        -- ^ The currency in which an amount is denominated.
    commissionPerTrade : Optional Decimal
        -- ^ The total commission per trade.
    fxRate : [FxRate]
        -- ^ FX Rates that have been used to convert commissions
        --   to a single currency.
      deriving (Eq, Ord, Show)

-- | The unit in which a commission is denominated.
data CommissionDenominationEnum
    = CommissionDenominationEnum_BPS ()
      -- ^ The commission is expressed in basis points, in
      --   reference to the price referenced in the document.
    | CommissionDenominationEnum_Percentage ()
      -- ^ The commission is expressed as a percentage of the
      --   gross price referenced in the document.
    | CommissionDenominationEnum_CentsPerShare ()
      -- ^ The commission is expressed in cents per share.
    | CommissionDenominationEnum_FixedAmount ()
      -- ^ The commission is expressed as a absolute amount.
    deriving (Eq, Ord, Show)

-- | A type describing a commodity underlying asset.
data Commodity = Commodity with
    id_ : Optional Text
    instrumentId : [InstrumentId]
        -- ^ Identification of the underlying asset, using public
        --   and/or private identifiers.
    description : Optional String
        -- ^ Long name of the underlying asset.
    commodityReferencePriceFramework_model : Optional Commodity_CommodityReferencePriceFramework_model
    specifiedPrice : SpecifiedPriceEnum
        -- ^ The 'specified Price' describes the nature of the
        --   underlying price that is observed. It must be be
        --   stated in the underlyer definition as it is not
        --   defined in the Commodity Reference Price. Example
        --   values of 'specifiedPrice' are 'Settlement' (for a
        --   futures contract) and 'WeightedAverage' (for some
        --   published prices and indices).
    sequence_ : Optional Commodity_sequence
    multiplier : Optional PositiveDecimal
        -- ^ The 'multiplier' specifies the multiplier associated
        --   with the Transaction. The 'multiplier' element has
        --   two uses: (1) for Freight Transactions or any
        --   Calculation Period specified for a Freight
        --   Transaction, if an amount is specified as the
        --   Multiplier then it is captured by this element and
        --   (2) if the Transaction is a heat rate option, the
        --   heat rate multiplier is represented in this element.
        --   If multiplier is not provided, multiplier is assumed
        --   to be 1. (i.e. rate source states 1 BBL of Oil as 90
        --   Dollars. Multiplier of 10 will change the value to
        --   900 dollars.)
      deriving (Eq, Ord, Show)

-- | A type for defining exercise procedures associated
--   with an American style exercise of a commodity
--   option.
data CommodityAmericanExercise = CommodityAmericanExercise with
    id_ : Optional Text
    exercisePeriod : CommodityExercisePeriods
        -- ^ Describes the American exercise periods.
    sequence_ : Optional CommodityAmericanExercise_sequence
        -- ^ Option Strip
    choice_ : Optional CommodityAmericanExercise_choice
        -- ^ Choice between latest exercise time expressed as
        --   literal time, or using a determination method.
    expirationTime : Optional BusinessCenterTime
        -- ^ The specific time of day on which the option expires.
    multipleExercise : Optional CommodityMultipleExercise
        -- ^ The presence of this element indicates that the
        --   option may be partially exercised. It is not
        --   applicable to European or Asian options.
      deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityAmericanExercise
data CommodityAmericanExercise_choice
    = CommodityAmericanExercise_choice_LatestExerciseTime BusinessCenterTime
      -- ^ For a Bermuda or American style option, the latest
      --   time on an exercise business day (excluding the
      --   expiration date) within the exercise period that
      --   notice can be given by the buyer to the seller or
      --   seller's agent. Notice of exercise given after this
      --   time will be deemed to have been given on the next
      --   exercise business day.
    | CommodityAmericanExercise_choice_LatestExerciseTimeDetermination DeterminationMethod
      -- ^ Latest exercise time determination method.
    deriving (Eq, Ord, Show)

-- | A record type used inside CommodityAmericanExercise
data CommodityAmericanExercise_sequence = CommodityAmericanExercise_sequence with
    exercisePeriod : [CommodityExercisePeriods]
        -- ^ Describes the American exercise periods.
    exerciseFrequency : Optional Frequency
        -- ^ The exercise frequency for the strip.
      deriving (Eq, Ord, Show)

-- | The specification of how a barrier option will
--   trigger (that is, knock-in or knock-out) or expire
--   based on the position of the spot rate relative to
--   trigger level.
data CommodityBarrier = CommodityBarrier with
    knock : CommodityKnockEnum
        -- ^ The knock feature of a commodity barrier option.
    featurePaymentAmount : Optional PositiveMoney
        -- ^ In the case of barrier options where the option
        --   automatically expires and the barrier is breached in
        --   such a way to to result in a "knock-out" vent, this
        --   amount is paid to the the option holder so as to
        --   refund or rebate a portion of any premium paid.
    trigger : CommodityTrigger
      deriving (Eq, Ord, Show)

data CommodityBase = CommodityBase with
    commodityBaseScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | Describes the swap's underlyer when it has multiple
--   asset components.
data CommodityBasket = CommodityBasket with
    choice_1 : CommodityBasket_choice
    choice_2 : CommodityBasket_choice_2
      deriving (Eq, Ord, Show)

-- | Abstract base class for all underlying assets.
data CommodityBasketBase
    = CommodityBasketBase_CommodityBasketByPercentage CommodityBasketByPercentage
    | CommodityBasketBase_CommodityBasketByNotional CommodityBasketByNotional
    deriving (Eq, Ord, Show)

data CommodityBasketByNotional = CommodityBasketByNotional with
    id_ : Optional Text
    underlying : [CommodityBasketUnderlyingByNotional]
        -- ^ Indicates the role of the option buyer with regard to
        --   this underlyer.
      deriving (Eq, Ord, Show)

data CommodityBasketByPercentage = CommodityBasketByPercentage with
    id_ : Optional Text
    underlying : [CommodityBasketUnderlyingByPercentage]
        -- ^ Indicates the role of the option buyer with regard to
        --   this underlyer.
    notionalAmount : NotionalAmount
      deriving (Eq, Ord, Show)

data CommodityBasketOption = CommodityBasketOption with
    id_ : Optional Text
    product_model : Optional CommodityBasketOption_Product_model
    buyerPartyReference : PartyReference
        -- ^ A reference to the party that buys this instrument,
        --   ie. pays for this instrument and receives the rights
        --   defined by it. See 2000 ISDA definitions Article 11.1
        --   (b). In the case of FRAs this the fixed rate payer.
    buyerAccountReference : Optional AccountReference
        -- ^ A reference to the account that buys this instrument.
    sellerPartyReference : PartyReference
        -- ^ A reference to the party that sells ("writes") this
        --   instrument, i.e. that grants the rights defined by
        --   this instrument and in return receives a payment for
        --   it. See 2000 ISDA definitions Article 11.1 (a). In
        --   the case of FRAs this is the floating rate payer.
    sellerAccountReference : Optional AccountReference
        -- ^ A reference to the account that sells this
        --   instrument.
    optionType : PutCallEnum
        -- ^ The type of option transaction.
    commodityBasketOptionFeatures_model : Optional CommodityBasketOption_CommodityBasketOptionFeatures_model
    choice_1 : CommodityBasketOption_choice_2
    choice_2 : CommodityBasketOption_choice_3
    choice_3 : CommodityBasketOption_choice_4
    exercise : CommodityExerciseBasket
        -- ^ The parameters for defining how the commodity option
        --   can be exercised and how it is settled.
    premium : [CommodityPremium]
        -- ^ The option premium payable by the buyer to the
        --   seller.
    commodityContent_model : Optional CommodityBasketOption_CommodityContent_model
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityBasketOption
data CommodityBasketOption_CommodityBasketOptionFeatures_model = CommodityBasketOption_CommodityBasketOptionFeatures_model with
    effectiveDate : AdjustableOrRelativeDate
        -- ^ The effective date of the Commodity Option
        --   Transaction. Note that the Termination/Expiration
        --   Date should be specified in expirationDate within the
        --   CommodityAmericanExercise type or the
        --   CommodityEuropeanExercise type, as applicable.
    terminationDate : Optional AdjustableOrRelativeDate
        -- ^ Specifies the termination date of the Commodity
        --   Option Transaction. In some confirmations this will
        --   be indicated as the second date in "Option Term" or
        --   "Term". Note: If provided, terminationDate should not
        --   be before specified expirationDate within the
        --   CommodityAmericanExercise type or the
        --   CommodityEuropeanExercise type.
    choice_ : CommodityBasketOption_choice
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityBasketOption
data CommodityBasketOption_CommodityContent_model = CommodityBasketOption_CommodityContent_model with
    commonPricing : Optional Bool
        -- ^ If Common Pricing is elected (“true”) for a
        --   Transaction with referencing more than one Commodity
        --   Reference Price then no date will be a Pricing Date
        --   unless such a date is a day on which all Commodity
        --   Reference Prices are scheduled to be published.
    marketDisruption : Optional CommodityMarketDisruption
        -- ^ Contains contract terms related to triggers and
        --   responses to market disruptions as defined in the
        --   1993 or 2005 Commodity Definitions.
    settlementDisruption : Optional CommodityBullionSettlementDisruptionEnum
        -- ^ Describes contract terms related to the consequences
        --   of Bullion Settlement Disruption Events.
    rounding : Optional Rounding
        -- ^ Rounding direction and precision for amounts.
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityBasketOption
data CommodityBasketOption_Product_model = CommodityBasketOption_Product_model with
    primaryAssetClass : Optional AssetClass
        -- ^ A classification of the most important risk class of
        --   the trade. FpML defines a simple asset class
        --   categorization using a coding scheme.
    secondaryAssetClass : [AssetClass]
        -- ^ A classification of additional risk classes of the
        --   trade, if any. FpML defines a simple asset class
        --   categorization using a coding scheme.
    productType : [ProductType]
        -- ^ A classification of the type of product. FpML defines
        --   a simple product categorization using a coding
        --   scheme.
    productId : [ProductId]
        -- ^ A product reference identifier. The product ID is an
        --   identifier that describes the key economic
        --   characteristics of the trade type, with the exception
        --   of concepts such as size (notional, quantity, number
        --   of units) and price (fixed rate, strike, etc.) that
        --   are negotiated for each transaction. It can be used
        --   to hold identifiers such as the "UPI" (universal
        --   product identifier) required by certain regulatory
        --   reporting rules. It can also be used to hold
        --   identifiers of benchmark products or product
        --   temnplates used by certain trading systems or
        --   facilities. FpML does not define the domain values
        --   associated with this element. Note that the domain
        --   values for this element are not strictly an
        --   enumerated list.
    assetClass : [AssetClass]
        -- ^ A classification of the risk class of the trade. FpML
        --   defines a simple asset class categorization using a
        --   coding scheme.
      deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityBasketOption
data CommodityBasketOption_choice
    = CommodityBasketOption_choice_CalculationPeriodsSchedule CommodityCalculationPeriodsSchedule
      -- ^ A parametric representation of the Calculation
      --   Periods of the Commodity Option Transaction.
    | CommodityBasketOption_choice_CalculationPeriods AdjustableDates
      -- ^ An absolute representation of the Calculation Period
      --   start dates of the Commodity Option Transaction.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityBasketOption
data CommodityBasketOption_choice_2
    = CommodityBasketOption_choice_2_NotionalQuantityBasket CommodityBasketByNotional
    | CommodityBasketOption_choice_2_NotionalAmountBasket CommodityBasketByPercentage
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityBasketOption
data CommodityBasketOption_choice_3
    = CommodityBasketOption_choice_3_StrikePriceUnderlyingReference StrikePriceUnderlyingReference
    | CommodityBasketOption_choice_3_StrikePriceBasketReference StrikePriceBasketReference
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityBasketOption
data CommodityBasketOption_choice_4
    = CommodityBasketOption_choice_4_StrikePricePerUnit NonNegativeMoney
      -- ^ The currency amount of the strike price per unit.
    | CommodityBasketOption_choice_4_StrikePricePerUnitSchedule CommodityStrikeSchedule
    | CommodityBasketOption_choice_4_FloatingStrikePricePerUnit FloatingStrikePrice
      -- ^ The currency amount of the strike price per unit.
    | CommodityBasketOption_choice_4_FloatingStrikePricePerUnitSchedule CommodityCalculationPeriodsSchedule
    deriving (Eq, Ord, Show)

data CommodityBasketUnderlyingBase = CommodityBasketUnderlyingBase with
    id_ : Optional Text
    direction : PayerReceiverEnum
        -- ^ Indicates the role of the option buyer with regard to
        --   this underlyer.
    commodity : Commodity
        -- ^ Specifies the underlying component. At the time of
        --   the initial schema design, only underlyers of type
        --   Commodity are supported; the choice group in the
        --   future could offer the possibility of adding other
        --   types later.
    pricingDates : Optional CommodityPricingDates
        -- ^ The dates on which the option will price.
    averagingMethod : Optional AveragingMethodEnum
        -- ^ The Method of Averaging if there is more than one
        --   Pricing Date.
      deriving (Eq, Ord, Show)

data CommodityBasketUnderlyingByNotional = CommodityBasketUnderlyingByNotional with
    id_ : Optional Text
    direction : PayerReceiverEnum
        -- ^ Indicates the role of the option buyer with regard to
        --   this underlyer.
    commodity : Commodity
        -- ^ Specifies the underlying component. At the time of
        --   the initial schema design, only underlyers of type
        --   Commodity are supported; the choice group in the
        --   future could offer the possibility of adding other
        --   types later.
    pricingDates : Optional CommodityPricingDates
        -- ^ The dates on which the option will price.
    averagingMethod : Optional AveragingMethodEnum
        -- ^ The Method of Averaging if there is more than one
        --   Pricing Date.
    fx : Optional CommodityFx
        -- ^ FX observations to be used to convert the observed
        --   Commodity Reference Price to the Settlement Currency.
    conversionFactor : Optional Decimal
        -- ^ If the Notional Quantity is specified in a unit that
        --   does not match the unit in which the Commodity
        --   Reference Price is quoted, the scaling or conversion
        --   factor used to convert the Commodity Reference Price
        --   unit into the Notional Quantity unit should be stated
        --   here. If there is no conversion, this element is not
        --   intended to be used.
    choice_ : CommodityBasketUnderlyingByNotional_choice_2
      deriving (Eq, Ord, Show)

-- | A variant type used inside
--   CommodityBasketUnderlyingByNotional
data CommodityBasketUnderlyingByNotional_choice
    = CommodityBasketUnderlyingByNotional_choice_NotionalQuantitySchedule CommodityNotionalQuantitySchedule
      -- ^ Allows the documentation of a shaped notional trade
      --   where the notional changes over the life of the
      --   transaction.
    | CommodityBasketUnderlyingByNotional_choice_NotionalQuantity CommodityNotionalQuantity
      -- ^ The Notional Quantity.
    | CommodityBasketUnderlyingByNotional_choice_SettlementPeriodsNotionalQuantity [CommoditySettlementPeriodsNotionalQuantity]
      -- ^ For an electricity transaction, the Notional Quantity
      --   for a one or more groups of Settlement Periods to
      --   which the Notional Quantity is based. If the schedule
      --   differs for different groups of Settlement Periods,
      --   this element should be repeated.
    deriving (Eq, Ord, Show)

-- | A variant type used inside
--   CommodityBasketUnderlyingByNotional
data CommodityBasketUnderlyingByNotional_choice_2
    = CommodityBasketUnderlyingByNotional_choice_2_Items CommodityBasketUnderlyingByNotional_items
    | CommodityBasketUnderlyingByNotional_choice_2_QuantityReference QuantityReference
      -- ^ A pointer style reference to a quantity defined on
      --   another leg.
    deriving (Eq, Ord, Show)

-- | A record type used inside
--   CommodityBasketUnderlyingByNotional
data CommodityBasketUnderlyingByNotional_items = CommodityBasketUnderlyingByNotional_items with
    choice_ : CommodityBasketUnderlyingByNotional_choice
    totalNotionalQuantity : Optional Decimal
        -- ^ The Total Notional Quantity.
      deriving (Eq, Ord, Show)

data CommodityBasketUnderlyingByPercentage = CommodityBasketUnderlyingByPercentage with
    id_ : Optional Text
    direction : PayerReceiverEnum
        -- ^ Indicates the role of the option buyer with regard to
        --   this underlyer.
    commodity : Commodity
        -- ^ Specifies the underlying component. At the time of
        --   the initial schema design, only underlyers of type
        --   Commodity are supported; the choice group in the
        --   future could offer the possibility of adding other
        --   types later.
    pricingDates : Optional CommodityPricingDates
        -- ^ The dates on which the option will price.
    averagingMethod : Optional AveragingMethodEnum
        -- ^ The Method of Averaging if there is more than one
        --   Pricing Date.
    constituentWeight : Optional NonNegativeDecimal
        -- ^ If the Notional Quantity is specified in a unit that
        --   does not match the unit in which the Commodity
        --   Reference Price is quoted, the scaling or conversion
        --   factor used to convert the Commodity Reference Price
        --   unit into the Notional Quantity unit should be stated
        --   here. If there is no conversion, this element is not
        --   intended to be used.
      deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityBasket
data CommodityBasket_choice
    = CommodityBasket_choice_Items CommodityBasket_items
    | CommodityBasket_choice_BasketId [BasketId]
      -- ^ A CDS basket identifier
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityBasket
data CommodityBasket_choice_2
    = CommodityBasket_choice_2_NotionalQuantityBasket CommodityBasketByNotional
    | CommodityBasket_choice_2_NotionalAmountBasket CommodityBasketByPercentage
    deriving (Eq, Ord, Show)

-- | A record type used inside CommodityBasket
data CommodityBasket_items = CommodityBasket_items with
    basketName : BasketName
        -- ^ The name of the basket expressed as a free format
        --   string. FpML does not define usage rules for this
        --   element.
    basketId : [BasketId]
        -- ^ A CDS basket identifier
      deriving (Eq, Ord, Show)

-- | The consequences of Bullion Settlement Disruption
--   Events.
data CommodityBullionSettlementDisruptionEnum
    = CommodityBullionSettlementDisruptionEnum_Negotiation ()
      -- ^ Negotiation will apply in the event of Bullion
      --   Settlement Disruption as per Section 10.5.(d) of the
      --   2005 Commodity Definitions.
    | CommodityBullionSettlementDisruptionEnum_Cancellation_and_Payment ()
      -- ^ Cancellation and Payment will apply in the event of
      --   Bullion Settlement Disruption as per Section 10.5.(d)
      --   of the 2005 Commodity Definitions.
    deriving (Eq, Ord, Show)

-- | Defines a commodity business day calendar.
data CommodityBusinessCalendar = CommodityBusinessCalendar with
    commodityBusinessCalendarScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A parametric representation of the Calculation
--   Periods for on Asian option or a leg of a swap. In
--   case the calculation frequency is of value T (term),
--   the period is defined by the
--   commoditySwap\effectiveDate and the
--   commoditySwap\terminationDate.
data CommodityCalculationPeriodsSchedule = CommodityCalculationPeriodsSchedule with
    id_ : Optional Text
    periodMultiplier : Int
        -- ^ A time period multiplier, e.g. 1, 2 or 3 etc. If the
        --   period value is T (Term) then periodMultiplier must
        --   contain the value 1.
    period : PeriodExtendedEnum
        -- ^ A time period, e.g. a day, week, month, year or term
        --   of the stream.
    balanceOfFirstPeriod : Bool
        -- ^ If true, indicates that that the first Calculation
        --   Period should run from the Effective Date to the end
        --   of the calendar period in which the Effective Date
        --   falls, e.g. Jan 15 - Jan 31 if the calculation
        --   periods are one month long and Effective Date is Jan
        --   15. If false, the first Calculation Period should run
        --   from the Effective Date for one whole period, e.g.
        --   Jan 15 to Feb 14 if the calculation periods are one
        --   month long and Effective Date is Jan 15.
      deriving (Eq, Ord, Show)

-- | A day type classification used in counting the number
--   of days between two dates for a commodity
--   transaction.
data CommodityDayTypeEnum
    = CommodityDayTypeEnum_Business ()
      -- ^ When calculating the number of days between two dates
      --   the count includes only business days.
    | CommodityDayTypeEnum_Calendar ()
      -- ^ When calculating the number of days between two dates
      --   the count includes all calendar days.
    | CommodityDayTypeEnum_CommodityBusiness ()
      -- ^ When calculating the number of days between two dates
      --   the count includes only commodity business days.
    | CommodityDayTypeEnum_CurrencyBusiness ()
      -- ^ When calculating the number of days between two dates
      --   the count includes only currency business days.
    | CommodityDayTypeEnum_ExchangeBusiness ()
      -- ^ When calculating the number of days between two dates
      --   the count includes only stock exchange business days.
    | CommodityDayTypeEnum_ScheduledTradingDay ()
      -- ^ When calculating the number of days between two dates
      --   the count includes only scheduled trading days.
    | CommodityDayTypeEnum_GasFlow ()
      -- ^ When calculating the number of days between two dates
      --   the count includes only gas flow days (dates on which
      --   gas is delivered).
    | CommodityDayTypeEnum_NearbyContractDay ()
      -- ^ The days that are starting from the end of the prior
      --   nearby futures/option contract through the nearby
      --   futures/option contract as specified in the message.
      --   For example: If referring to the Z21 WTI contract,
      --   first day of this type will be 21-Oct-21 and the last
      --   day of this type will be 19-Nov-21.
    deriving (Eq, Ord, Show)

-- | The different options for specifying the Delivery
--   Periods of a physical leg.
data CommodityDeliveryPeriods = CommodityDeliveryPeriods with
    id_ : Optional Text
    choice_ : CommodityDeliveryPeriods_choice
      deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityDeliveryPeriods
data CommodityDeliveryPeriods_choice
    = CommodityDeliveryPeriods_choice_Periods AdjustableDates
      -- ^ The Delivery Periods for this leg of the swap. This
      --   type is only intended to be used if the Delivery
      --   Periods differ from the Calculation Periods on the
      --   fixed or floating leg. If DeliveryPeriods mirror
      --   another leg, then the calculationPeriodsReference
      --   element should be used to point to the Calculation
      --   Periods on that leg - or the
      --   calculationPeriodsScheduleReference can be used to
      --   point to the Calculation Periods Schedule for that
      --   leg.
    | CommodityDeliveryPeriods_choice_PeriodsSchedule CommodityCalculationPeriodsSchedule
      -- ^ The Delivery Periods for this leg of the swap. This
      --   type is only intended to be used if the Delivery
      --   Periods differ from the Calculation Periods on the
      --   fixed or floating leg. If DeliveryPeriods mirror
      --   another leg, then the calculationPeriodsReference
      --   element should be used to point to the Calculation
      --   Periods on that leg - or the
      --   calculationPeriodsScheduleReference can be used to
      --   point to the Calculation Periods Schedule for that
      --   leg.
    | CommodityDeliveryPeriods_choice_CalculationPeriodsReference CalculationPeriodsReference
      -- ^ A pointer style reference to the Calculation Periods
      --   defined on another leg.
    | CommodityDeliveryPeriods_choice_CalculationPeriodsScheduleReference CalculationPeriodsScheduleReference
      -- ^ A pointer style reference to the Calculation Periods
      --   Schedule defined on another leg.
    | CommodityDeliveryPeriods_choice_CalculationPeriodsDatesReference CalculationPeriodsDatesReference
      -- ^ A pointer style reference to single-day-duration
      --   Calculation Periods defined on another leg.
    deriving (Eq, Ord, Show)

-- | A scheme identifying the types of the Delivery Point
--   for a physically settled commodity trade.
data CommodityDeliveryPoint = CommodityDeliveryPoint with
    deliveryPointScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A scheme identifying how the parties to the trade
--   aportion responsibility for the delivery of the
--   commodity product (for example Free On Board, Cost,
--   Insurance, Freight)
data CommodityDeliveryRisk = CommodityDeliveryRisk with
    deliveryRiskScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data CommodityDetails = CommodityDetails with
    commodityDetailsScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | Defined the conditions under which the digital option
--   can triggers and, if triggered, what payment results.
data CommodityDigital = CommodityDigital with
    trigger : CommodityTrigger
    featurePaymentAmount : PositiveMoney
        -- ^ The cash payment that is made when the digital
        --   barrier is breached.
      deriving (Eq, Ord, Show)

-- | The parameters for defining how the commodity digital
--   option can be exercised. It differs from the
--   CommodityExercise type in that it lacks a
--   specification of Settlement Currency. The Settlement
--   Currency is specified in the 'featurePayment'
--   element.
data CommodityDigitalExercise = CommodityDigitalExercise with
    choice_1 : CommodityDigitalExercise_choice
    automaticExercise : Optional Bool
        -- ^ Specifies whether or not Automatic Exercise applies
        --   to a Commodity Option Transaction.
    writtenConfirmation : Optional Bool
        -- ^ Specifies whether or not Written Confirmation applies
        --   to a Commodity Option Transaction.
    choice_2 : CommodityDigitalExercise_choice_2
      deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityDigitalExercise
data CommodityDigitalExercise_choice
    = CommodityDigitalExercise_choice_AmericanExercise CommodityAmericanExercise
      -- ^ The parameters for defining the expiration date for
      --   an American option.
    | CommodityDigitalExercise_choice_EuropeanExercise CommodityEuropeanExercise
      -- ^ The parameters for defining the expiration date and
      --   time for a European or Asian style option. For an
      --   Asian style option the expiration date is equivalent
      --   to the termination date.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityDigitalExercise
data CommodityDigitalExercise_choice_2
    = CommodityDigitalExercise_choice_2_RelativePaymentDates CommodityRelativePaymentDates
      -- ^ The Payment Dates of the trade relative to the
      --   Calculation Periods.
    | CommodityDigitalExercise_choice_2_PaymentDates AdjustableDatesOrRelativeDateOffset
      -- ^ Dates on which payments will be made.
    | CommodityDigitalExercise_choice_2_MasterAgreementPaymentDates Bool
      -- ^ If present and true indicates that the Payment
      --   Date(s) are specified in the relevant master
      --   agreement.
    deriving (Eq, Ord, Show)

-- | Defines the digital commodity option product type.
--   Digital options exercise when a barrier is breached
--   and are financially settled. The
--   'commodityDigitalOption' type is an extension of the
--   'commodityOption' product.
data CommodityDigitalOption = CommodityDigitalOption with
    id_ : Optional Text
    product_model : Optional CommodityDigitalOption_Product_model
    buyerPartyReference : PartyReference
        -- ^ A reference to the party that buys this instrument,
        --   ie. pays for this instrument and receives the rights
        --   defined by it. See 2000 ISDA definitions Article 11.1
        --   (b). In the case of FRAs this the fixed rate payer.
    buyerAccountReference : Optional AccountReference
        -- ^ A reference to the account that buys this instrument.
    sellerPartyReference : PartyReference
        -- ^ A reference to the party that sells ("writes") this
        --   instrument, i.e. that grants the rights defined by
        --   this instrument and in return receives a payment for
        --   it. See 2000 ISDA definitions Article 11.1 (a). In
        --   the case of FRAs this is the floating rate payer.
    sellerAccountReference : Optional AccountReference
        -- ^ A reference to the account that sells this
        --   instrument.
    optionType : PutCallEnum
        -- ^ The type of option transaction.
    commodity : Commodity
        -- ^ Specifies the underlying instrument. Usual content is
        --   an ISDA Commodity Reference Price Name. The
        --   'commodity' underlyer component is specified using a
        --   reference to the 'commodity' asset (see description
        --   above at the Commodity Underlyer section).
    effectiveDate : Optional AdjustableOrRelativeDate
        -- ^ The effective date of the Commodity Option
        --   Transaction. Note that the Termination/Expiration
        --   Date should be specified in expirationDate within the
        --   CommodityAmericanExercise type or the
        --   CommodityEuropeanExercise type, as applicable.
    terminationDate : Optional AdjustableOrRelativeDate
        -- ^ Specifies the termination date of the Commodity
        --   Option Transaction. In some confirmations this will
        --   be indicated as the second date in "Option Term" or
        --   "Term". Note: If provided, terminationDate should not
        --   be before specified expirationDate within the
        --   CommodityAmericanExercise type or the
        --   CommodityEuropeanExercise type.
    commodityAsian_model : Optional CommodityDigitalOption_CommodityAsian_model
    digital : CommodityDigital
        -- ^ The barrier and cash payout features of the digital
        --   option.
    choice_ : CommodityDigitalOption_choice_2
    exercise : CommodityDigitalExercise
        -- ^ The parameters for defining how the commodity option
        --   can be exercised and how it is settled.
    premium : [CommodityPremium]
        -- ^ The option premium payable by the buyer to the
        --   seller.
    commodityContent_model : Optional CommodityDigitalOption_CommodityContent_model
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityDigitalOption
data CommodityDigitalOption_CommodityAsian_model = CommodityDigitalOption_CommodityAsian_model with
    choice_ : CommodityDigitalOption_choice
    pricingDates : CommodityPricingDates
        -- ^ The dates on which the option will price.
    averagingMethod : Optional AveragingMethodEnum
        -- ^ The Method of Averaging if there is more than one
        --   Pricing Date.
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityDigitalOption
data CommodityDigitalOption_CommodityContent_model = CommodityDigitalOption_CommodityContent_model with
    commonPricing : Optional Bool
        -- ^ If Common Pricing is elected (“true”) for a
        --   Transaction with referencing more than one Commodity
        --   Reference Price then no date will be a Pricing Date
        --   unless such a date is a day on which all Commodity
        --   Reference Prices are scheduled to be published.
    marketDisruption : Optional CommodityMarketDisruption
        -- ^ Contains contract terms related to triggers and
        --   responses to market disruptions as defined in the
        --   1993 or 2005 Commodity Definitions.
    settlementDisruption : Optional CommodityBullionSettlementDisruptionEnum
        -- ^ Describes contract terms related to the consequences
        --   of Bullion Settlement Disruption Events.
    rounding : Optional Rounding
        -- ^ Rounding direction and precision for amounts.
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityDigitalOption
data CommodityDigitalOption_Product_model = CommodityDigitalOption_Product_model with
    primaryAssetClass : Optional AssetClass
        -- ^ A classification of the most important risk class of
        --   the trade. FpML defines a simple asset class
        --   categorization using a coding scheme.
    secondaryAssetClass : [AssetClass]
        -- ^ A classification of additional risk classes of the
        --   trade, if any. FpML defines a simple asset class
        --   categorization using a coding scheme.
    productType : [ProductType]
        -- ^ A classification of the type of product. FpML defines
        --   a simple product categorization using a coding
        --   scheme.
    productId : [ProductId]
        -- ^ A product reference identifier. The product ID is an
        --   identifier that describes the key economic
        --   characteristics of the trade type, with the exception
        --   of concepts such as size (notional, quantity, number
        --   of units) and price (fixed rate, strike, etc.) that
        --   are negotiated for each transaction. It can be used
        --   to hold identifiers such as the "UPI" (universal
        --   product identifier) required by certain regulatory
        --   reporting rules. It can also be used to hold
        --   identifiers of benchmark products or product
        --   temnplates used by certain trading systems or
        --   facilities. FpML does not define the domain values
        --   associated with this element. Note that the domain
        --   values for this element are not strictly an
        --   enumerated list.
    assetClass : [AssetClass]
        -- ^ A classification of the risk class of the trade. FpML
        --   defines a simple asset class categorization using a
        --   coding scheme.
      deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityDigitalOption
data CommodityDigitalOption_choice
    = CommodityDigitalOption_choice_CalculationPeriodsSchedule CommodityCalculationPeriodsSchedule
      -- ^ A parametric representation of the Calculation
      --   Periods of the Commodity Option Transaction.
    | CommodityDigitalOption_choice_CalculationPeriods AdjustableDates
      -- ^ An absolute representation of the Calculation Period
      --   start dates of the Commodity Option Transaction.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityDigitalOption
data CommodityDigitalOption_choice_2
    = CommodityDigitalOption_choice_2_NotionalAmount NotionalAmount
      -- ^ Volume contracted when volume is specified as a
      --   currency-denominated amount.
    | CommodityDigitalOption_choice_2_Items CommodityDigitalOption_items
    deriving (Eq, Ord, Show)

-- | A record type used inside CommodityDigitalOption
data CommodityDigitalOption_items = CommodityDigitalOption_items with
    notionalQuantity : CommodityNotionalQuantity
        -- ^ The volume contracted when the volume is specified as
        --   a quantity of commodity.
    totalNotionalQuantity : Optional Decimal
      deriving (Eq, Ord, Show)

-- | A type for defining exercise procedures associated
--   with a European style exercise of a commodity option.
data CommodityEuropeanExercise = CommodityEuropeanExercise with
    id_ : Optional Text
    expirationDate : AdjustableOrRelativeDate
        -- ^ The last day within an exercise period for an
        --   American style option. For a European style option it
        --   is the only day within the exercise period. For an
        --   averaging option this is equivalent to the
        --   Termination Date.
    sequence_ : Optional CommodityEuropeanExercise_sequence
        -- ^ Option Strip
    expirationTime : Optional BusinessCenterTime
        -- ^ The specific time of day on which the option expires.
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityEuropeanExercise
data CommodityEuropeanExercise_sequence = CommodityEuropeanExercise_sequence with
    expirationDate : [AdjustableOrRelativeDate]
        -- ^ The last day within an exercise period for an
        --   American style option. For a European style option it
        --   is the only day within the exercise period. For an
        --   averaging option this is equivalent to the
        --   Termination Date.
    exerciseFrequency : Optional Frequency
        -- ^ The exercise frequency for the strip.
      deriving (Eq, Ord, Show)

-- | The parameters for defining how the commodity option
--   can be exercised, how it is priced and how it is
--   settled.
data CommodityExercise = CommodityExercise with
    choice_1 : CommodityExercise_choice
    automaticExercise : Optional Bool
        -- ^ Specifies whether or not Automatic Exercise applies
        --   to a Commodity Option Transaction.
    writtenConfirmation : Optional Bool
        -- ^ Specifies whether or not Written Confirmation applies
        --   to a Commodity Option Transaction.
    settlementCurrency : IdentifiedCurrency
        -- ^ The currency into which the Commodity Option
        --   Transaction will settle. If this is not the same as
        --   the currency in which the Commodity Reference Price
        --   is quoted, then an FX determination method should
        --   also be specified.
    fx : Optional CommodityFx
        -- ^ FX observations to be used to convert the observed
        --   Commodity Reference Price to the Settlement Currency.
    conversionFactor : Optional Decimal
        -- ^ If the Notional Quantity is specified in a unit that
        --   does not match the unit in which the Commodity
        --   Reference Price is quoted, the scaling or conversion
        --   factor used to convert the Commodity Reference Price
        --   unit into the Notional Quantity unit should be stated
        --   here. If there is no conversion, this element is not
        --   intended to be used.
    choice_2 : CommodityExercise_choice_2
      deriving (Eq, Ord, Show)

-- | The parameters for defining how the commodity option
--   can be exercised, how it is priced and how it is
--   settled.
data CommodityExerciseBasket = CommodityExerciseBasket with
    choice_1 : CommodityExerciseBasket_choice
    automaticExercise : Optional Bool
        -- ^ Specifies whether or not Automatic Exercise applies
        --   to a Commodity Option Transaction.
    writtenConfirmation : Optional Bool
        -- ^ Specifies whether or not Written Confirmation applies
        --   to a Commodity Option Transaction.
    settlementCurrency : IdentifiedCurrency
        -- ^ The currency into which the Commodity Option
        --   Transaction will settle. If this is not the same as
        --   the currency in which the Commodity Reference Price
        --   is quoted, then an FX determination method should
        --   also be specified.
    choice_2 : CommodityExerciseBasket_choice_2
      deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityExerciseBasket
data CommodityExerciseBasket_choice
    = CommodityExerciseBasket_choice_AmericanExercise CommodityAmericanExercise
      -- ^ The parameters for defining the exercise period for
      --   an American style option together with the rules
      --   governing the quantity of the commodity that can be
      --   exercised on any given exercise date.
    | CommodityExerciseBasket_choice_EuropeanExercise CommodityEuropeanExercise
      -- ^ The parameters for defining the expiration date and
      --   time for a European or Asian style option. For an
      --   Asian style option the expiration date is equivalent
      --   to the termination date.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityExerciseBasket
data CommodityExerciseBasket_choice_2
    = CommodityExerciseBasket_choice_2_RelativePaymentDates CommodityRelativePaymentDates
      -- ^ The Payment Dates of the trade relative to the
      --   Calculation Periods.
    | CommodityExerciseBasket_choice_2_PaymentDates AdjustableDatesOrRelativeDateOffset
      -- ^ Dates on which payments will be made.
    | CommodityExerciseBasket_choice_2_MasterAgreementPaymentDates Bool
      -- ^ If present and true indicates that the Payment
      --   Date(s) are specified in the relevant master
      --   agreement.
    deriving (Eq, Ord, Show)

data CommodityExercisePeriods = CommodityExercisePeriods with
    commencementDate : AdjustableOrRelativeDate
        -- ^ The first day of the exercise period for an American
        --   style option.
    expirationDate : AdjustableOrRelativeDate
        -- ^ The last day within an exercise period for an
        --   American style option. For a European style option it
        --   is the only day within the exercise period.
      deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityExercise
data CommodityExercise_choice
    = CommodityExercise_choice_AmericanExercise CommodityAmericanExercise
      -- ^ The parameters for defining the expiration date for
      --   an American option.
    | CommodityExercise_choice_EuropeanExercise CommodityEuropeanExercise
      -- ^ The parameters for defining the expiration date and
      --   time for a European or Asian style option. For an
      --   Asian style option the expiration date is equivalent
      --   to the termination date.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityExercise
data CommodityExercise_choice_2
    = CommodityExercise_choice_2_RelativePaymentDates CommodityRelativePaymentDates
      -- ^ The Payment Dates of the trade relative to the
      --   Calculation Periods.
    | CommodityExercise_choice_2_PaymentDates AdjustableDatesOrRelativeDateOffset
      -- ^ Dates on which payments will be made.
    | CommodityExercise_choice_2_MasterAgreementPaymentDates Bool
      -- ^ If present and true indicates that the Payment
      --   Date(s) are specified in the relevant master
      --   agreement.
    deriving (Eq, Ord, Show)

-- | A scheme identifying the physical event relative to
--   which option expiration occurs.
data CommodityExpireRelativeToEvent = CommodityExpireRelativeToEvent with
    commodityExpireRelativeToEventScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data CommodityFixedInterestCalculation = CommodityFixedInterestCalculation with
    fixedRate : IdentifiedRate
        -- ^ The calculation period fixed rate or "fee" rate. A
        --   per annum rate, expressed as a decimal. A fixed rate
        --   of 5% would be represented as 0.05. When multiplied
        --   by the Notional Amount and the number of calendar
        --   days in the Calculation Period divided by the
        --   calendar days basis, is the fixed amount payed per
        --   Calculation Period.
    dayCountFraction : DayCountFraction
        -- ^ Specifies the basis for the adjustment of a rate from
        --   an annual rate to a rate appropriate for the
        --   Calculation Period: e.g. the number of calendar days
        --   in the Calculation Period divided by the calendar
        --   days basis e.g. actual number of days in the
        --   Calculation Period divided by 365.
      deriving (Eq, Ord, Show)

-- | The Fixed Price for a given Calculation Period during
--   the life of the trade. There must be a Fixed Price
--   step specified for each Calculation Period,
--   regardless of whether the Fixed Price changes or
--   remains the same between periods.
data CommodityFixedPriceSchedule = CommodityFixedPriceSchedule with
    choice_1 : CommodityFixedPriceSchedule_choice
    choice_2 : CommodityFixedPriceSchedule_choice_2
      deriving (Eq, Ord, Show)

-- | A variant type used inside
--   CommodityFixedPriceSchedule
data CommodityFixedPriceSchedule_choice
    = CommodityFixedPriceSchedule_choice_FixedPriceStep [FixedPrice]
      -- ^ The Fixed Price for a given Calculation Period during
      --   the life of the trade. There must be a Fixed Price
      --   step specified for each Calculation Period,
      --   regardless of whether the Fixed Price changes or
      --   remains the same between periods.
    | CommodityFixedPriceSchedule_choice_WorldscaleRateStep [Decimal]
      -- ^ For a Wet Voyager Charter Freight Swap, the number of
      --   Worldscale Points for purposes of the calculation of
      --   a Fixed Amount for a given Calculation Period during
      --   the life of the trade. There must be Worldscale Rate
      --   Step specified for each Calculation Period,
      --   regardless of whether the Worldscale Rate Step
      --   changes or remains the same between periods.
    | CommodityFixedPriceSchedule_choice_ContractRateStep [NonNegativeMoney]
      -- ^ For a DRY Voyage Charter or Time Charter Freight
      --   Swap, the price per relevant unit for pruposes of the
      --   calculation of a Fixed Amount for a given Calculation
      --   Period during the life of the trade. There must be
      --   Worldscale Rate Step specified for each Calculation
      --   Period, regardless of whether the Worldscale Rate
      --   Step changes or remains the same between periods.
    | CommodityFixedPriceSchedule_choice_SettlementPeriodsPriceSchedule [CommoditySettlementPeriodsPriceSchedule]
      -- ^ For an electricity transaction, the fixed price
      --   schedule for one or more groups of Settlement Periods
      --   on which fixed payments are based. if the schedule
      --   differs for different groups of Settlement Periods,
      --   this element should be repeated.
    deriving (Eq, Ord, Show)

-- | A variant type used inside
--   CommodityFixedPriceSchedule
data CommodityFixedPriceSchedule_choice_2
    = CommodityFixedPriceSchedule_choice_2_CalculationPeriodsReference CalculationPeriodsReference
      -- ^ A pointer style reference to the Calculation Periods
      --   defined on another leg.
    | CommodityFixedPriceSchedule_choice_2_CalculationPeriodsScheduleReference CalculationPeriodsScheduleReference
      -- ^ A pointer style reference to the Calculation Periods
      --   Schedule defined on another leg.
    | CommodityFixedPriceSchedule_choice_2_CalculationPeriodsDatesReference CalculationPeriodsDatesReference
      -- ^ A pointer style reference to single-day-duration
      --   Calculation Periods defined on another leg.
    deriving (Eq, Ord, Show)

-- | Commodity Forward
data CommodityForward = CommodityForward with
    id_ : Optional Text
    product_model : Optional CommodityForward_Product_model
    valueDate : Optional AdjustableOrRelativeDate
        -- ^ Specifies the value date of the Commodity Forward
        --   Transaction. This is the day on which both the cash
        --   and the physical commodity settle.
    choice_ : CommodityForward_choice
    commodityForwardLeg : CommodityForwardLeg
        -- ^ Defines the substitutable commodity forward leg.
    commodityContent_model : Optional CommodityForward_CommodityContent_model
      deriving (Eq, Ord, Show)

-- | Abstract base class for all commodity forward legs.
data CommodityForwardLeg
    = CommodityForwardLeg_MetalPhysicalLeg MetalPhysicalLeg
    | CommodityForwardLeg_BullionPhysicalLeg BullionPhysicalLeg
    deriving (Eq, Ord, Show)

-- | A record type used inside CommodityForward
data CommodityForward_CommodityContent_model = CommodityForward_CommodityContent_model with
    commonPricing : Optional Bool
        -- ^ If Common Pricing is elected (“true”) for a
        --   Transaction with referencing more than one Commodity
        --   Reference Price then no date will be a Pricing Date
        --   unless such a date is a day on which all Commodity
        --   Reference Prices are scheduled to be published.
    marketDisruption : Optional CommodityMarketDisruption
        -- ^ Contains contract terms related to triggers and
        --   responses to market disruptions as defined in the
        --   1993 or 2005 Commodity Definitions.
    settlementDisruption : Optional CommodityBullionSettlementDisruptionEnum
        -- ^ Describes contract terms related to the consequences
        --   of Bullion Settlement Disruption Events.
    rounding : Optional Rounding
        -- ^ Rounding direction and precision for amounts.
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityForward
data CommodityForward_Product_model = CommodityForward_Product_model with
    primaryAssetClass : Optional AssetClass
        -- ^ A classification of the most important risk class of
        --   the trade. FpML defines a simple asset class
        --   categorization using a coding scheme.
    secondaryAssetClass : [AssetClass]
        -- ^ A classification of additional risk classes of the
        --   trade, if any. FpML defines a simple asset class
        --   categorization using a coding scheme.
    productType : [ProductType]
        -- ^ A classification of the type of product. FpML defines
        --   a simple product categorization using a coding
        --   scheme.
    productId : [ProductId]
        -- ^ A product reference identifier. The product ID is an
        --   identifier that describes the key economic
        --   characteristics of the trade type, with the exception
        --   of concepts such as size (notional, quantity, number
        --   of units) and price (fixed rate, strike, etc.) that
        --   are negotiated for each transaction. It can be used
        --   to hold identifiers such as the "UPI" (universal
        --   product identifier) required by certain regulatory
        --   reporting rules. It can also be used to hold
        --   identifiers of benchmark products or product
        --   temnplates used by certain trading systems or
        --   facilities. FpML does not define the domain values
        --   associated with this element. Note that the domain
        --   values for this element are not strictly an
        --   enumerated list.
    assetClass : [AssetClass]
        -- ^ A classification of the risk class of the trade. FpML
        --   defines a simple asset class categorization using a
        --   coding scheme.
      deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityForward
data CommodityForward_choice
    = CommodityForward_choice_FixedLeg NonPeriodicFixedPriceLeg
      -- ^ The fixed leg of a Commodity Forward Transaction.
    | CommodityForward_choice_AveragePriceLeg AveragePriceLeg
      -- ^ Specifies the calculated floating price leg of a
      --   Commodity Forward Transaction.
    deriving (Eq, Ord, Show)

-- | Frequency Type for use in Pricing Date
--   specifications.
data CommodityFrequencyType = CommodityFrequencyType with
    commodityFrequencyTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type defining the FX observations to be used to
--   convert the observed Commodity Reference Price to the
--   Settlement Currency. The rate source must be
--   specified. Additionally, a time for the spot price to
--   be observed on that source may be specified, or else
--   an averaging schedule for trades priced using an
--   average FX rate.
data CommodityFx = CommodityFx with
    primaryRateSource : InformationSource
        -- ^ The primary source for where the rate observation
        --   will occur. Will typically be either a page or a
        --   reference bank published rate.
    secondaryRateSource : Optional InformationSource
        -- ^ An alternative, or secondary, source for where the
        --   rate observation will occur. Will typically be either
        --   a page or a reference bank published rate.
    fxType : Optional CommodityFxType
        -- ^ A type to identify how the FX rate will be applied.
        --   This is intended to differentiate between the various
        --   methods for applying FX to the floating price such as
        --   a daily calculation, or averaging the FX and applying
        --   the average at the end of each CalculationPeriod.
    averagingMethod : Optional AveragingMethodEnum
        -- ^ The parties may specify a Method of Averaging when
        --   averaging of the FX rate is applicable.
    choice_ : Optional CommodityFx_choice_4
      deriving (Eq, Ord, Show)

-- | Identifes how the FX rate will be applied. This is
--   intended to differentiate between the various methods
--   for applying FX to the floating price such as a daily
--   calculation, or averaging the FX and applying the
--   average at the end of each CalculationPeriod.
data CommodityFxType = CommodityFxType with
    commodityFxTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityFx
data CommodityFx_LagOrReference_model
    = CommodityFx_LagOrReference_model_Lag Lag
      -- ^ The pricing period per calculation period if the
      --   pricing days do not wholly fall within the respective
      --   calculation period.
    | CommodityFx_LagOrReference_model_LagReference LagReference
      -- ^ Allows a lag to reference one already defined
      --   elsewhere in the trade.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityFx
data CommodityFx_choice
    = CommodityFx_choice_Items1 CommodityFx_items
    | CommodityFx_choice_Items2 CommodityFx_items_2
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityFx
data CommodityFx_choice_2
    = CommodityFx_choice_2_CalculationPeriodsReference CalculationPeriodsReference
      -- ^ A pointer style reference to the Calculation Periods
      --   defined on another leg.
    | CommodityFx_choice_2_CalculationPeriodsScheduleReference CalculationPeriodsScheduleReference
      -- ^ A pointer style reference to the Calculation Periods
      --   Schedule defined on another leg.
    | CommodityFx_choice_2_CalculationPeriodsDatesReference CalculationPeriodsDatesReference
      -- ^ A pointer style reference to single-day-duration
      --   Calculation Periods defined on another leg.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityFx
data CommodityFx_choice_3
    = CommodityFx_choice_3_FxObservationDates [AdjustableDates]
      -- ^ A list of the fx observation dates for a given
      --   Calculation Period.
    | CommodityFx_choice_3_Items CommodityFx_items_3
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityFx
data CommodityFx_choice_4
    = CommodityFx_choice_4_FixingTime BusinessCenterTime
      -- ^ The time at which the spot currency exchange rate
      --   will be observed. It is specified as a time in a
      --   specific business center, e.g. 11:00am London time.
    | CommodityFx_choice_4_Items CommodityFx_items_4
    deriving (Eq, Ord, Show)

-- | A record type used inside CommodityFx
data CommodityFx_items = CommodityFx_items with
    dayDistribution : CommodityFrequencyType
        -- ^ The method by which the pricing days are distributed
        --   across the pricing period.
    dayCount : Optional Int
        -- ^ The number of days over which pricing should take
        --   place.
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityFx
data CommodityFx_items_2 = CommodityFx_items_2 with
    dayOfWeek_ : [DayOfWeekEnum]
        -- ^ The day(s) of the week on which pricing will take
        --   place during the pricing period.
    dayNumber : Optional Int
        -- ^ The occurrence of the dayOfWeek within the pricing
        --   period on which pricing will take place, e.g. the 3rd
        --   Friday within each Calculation Period. If omitted,
        --   every dayOfWeek will be a pricing day.
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityFx
data CommodityFx_items_3 = CommodityFx_items_3 with
    sequence_ : Optional CommodityFx_sequence
    choice_ : CommodityFx_choice_2
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityFx
data CommodityFx_items_4 = CommodityFx_items_4 with
    choice_ : CommodityFx_choice_3
    fixingTime : Optional BusinessCenterTime
        -- ^ The time at which the spot currency exchange rate
        --   will be observed. It is specified as a time in a
        --   specific business center, e.g. 11:00am London time.
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityFx
data CommodityFx_sequence = CommodityFx_sequence with
    dayType : CommodityDayTypeEnum
        -- ^ The type of day on which pricing occurs.
    choice_ : CommodityFx_choice
    businessDayConvention : Optional BusinessDayConventionEnum
        -- ^ The convention for adjusting a date if it would
        --   otherwise fall on a day that is not a business day.
    lagOrReference_model : Optional CommodityFx_LagOrReference_model
      deriving (Eq, Ord, Show)

-- | A type defining a hub or other reference for a
--   physically settled commodity trade.
data CommodityHub = CommodityHub with
    partyReference : PartyReference
        -- ^ Reference to a party.
    accountReference : Optional AccountReference
        -- ^ Reference to an account.
    hubCode : CommodityHubCode
      deriving (Eq, Ord, Show)

-- | A scheme identifying the code for a hub or other
--   reference for a physically settled commodity trade.
data CommodityHubCode = CommodityHubCode with
    hubCodeScheme : NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The publication in which the rate, price, index or
--   factor is to be found. (e.g Gas Daily, Platts
--   Bloomberg.)
data CommodityInformationProvider = CommodityInformationProvider with
    informationProviderScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type defining the source of a commodity rate, price
--   or index or of a market rate or of a conversion
--   factor (e.g. a fx conversion factor).
data CommodityInformationSource = CommodityInformationSource with
    rateSource : CommodityInformationProvider
        -- ^ The publication in which the rate, price, index or
        --   factor is to be found. (e.g Gas Daily, Platts
        --   Bloomberg.)
    rateSourcePage : Optional RateSourcePage
        -- ^ A specific page or screen (in the case of
        --   electronically published information) on which the
        --   rate source is to be found.
    rateSourcePageHeading : Optional String
        -- ^ The heading for the rate source on a given rate
        --   source page or screen.
      deriving (Eq, Ord, Show)

-- | A type describing the interest rate leg (a.k.a fee
--   leg) of the commodity performance swap.
data CommodityInterestLeg = CommodityInterestLeg with
    id_ : Optional Text
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    choice_1 : CommodityInterestLeg_choice
    choice_2 : CommodityInterestLeg_choice_2
    choice_3 : CommodityInterestLeg_choice_3
    commodityFixedInterestCalculation : CommodityFixedInterestCalculation
        -- ^ Specifies the interest payment amount on a return
        --   swap. This amount may be referred to as the interest
        --   amount or the fee amount. Used when the interest
        --   (a.k.a. "Fee") is calculated very simply: notional
        --   amount * (rate * (number of days in Calculation
        --   Period / number of days assumed in the the year)).
      deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityInterestLeg
data CommodityInterestLeg_choice
    = CommodityInterestLeg_choice_CalculationDates AdjustableDates
      -- ^ The Calculation Period dates for this leg of the
      --   trade where the Calculation Periods are all one day
      --   long. Only dates explicitly included determine the
      --   Calculation Periods and there is a Calculation Period
      --   for each date specified. As such one-day Calculation
      --   Period are typical a physically-settled emissions or
      --   metals trades it is expected that this element will
      --   not be used in performance swaps.
    | CommodityInterestLeg_choice_CalculationPeriods AdjustableDates
      -- ^ The Calculation Period start dates for this leg of
      --   the swap. This type is only intended to be used if
      --   the Calculation Periods differ on each leg. If
      --   Calculation Periods mirror another leg, then the
      --   calculationPeriodsReference element should be used to
      --   point to the Calculation Periods on that leg - or the
      --   calculationPeriodsScheduleReference can be used to
      --   point to the Calculation Periods Schedule for that
      --   leg.
    | CommodityInterestLeg_choice_CalculationPeriodsSchedule CommodityCalculationPeriodsSchedule
      -- ^ The Calculation Periods for this leg of the swap.
      --   This type is only intended to be used if the
      --   Calculation Periods differ on each leg. If
      --   Calculation Periods mirror another leg, then the
      --   calculationPeriodsReference element should be used to
      --   point to the Calculation Periods on the other leg -
      --   or the calculationPeriodsScheduleReference can be
      --   used to point to the Calculation Periods Schedule for
      --   that leg.
    | CommodityInterestLeg_choice_CalculationPeriodsReference CalculationPeriodsReference
      -- ^ A pointer style reference to the Calculation Periods
      --   defined on another leg.
    | CommodityInterestLeg_choice_CalculationPeriodsScheduleReference CalculationPeriodsScheduleReference
      -- ^ A pointer style reference to the Calculation Periods
      --   Schedule defined on another leg.
    | CommodityInterestLeg_choice_CalculationPeriodsDatesReference CalculationPeriodsDatesReference
      -- ^ A pointer style reference to single-day-duration
      --   Calculation Periods defined on another leg.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityInterestLeg
data CommodityInterestLeg_choice_2
    = CommodityInterestLeg_choice_2_RelativePaymentDates CommodityRelativePaymentDates
      -- ^ The Payment Dates of the trade relative to the
      --   Calculation Periods.
    | CommodityInterestLeg_choice_2_PaymentDates AdjustableDatesOrRelativeDateOffset
      -- ^ Dates on which payments will be made.
    | CommodityInterestLeg_choice_2_MasterAgreementPaymentDates Bool
      -- ^ If present and true indicates that the Payment
      --   Date(s) are specified in the relevant master
      --   agreement.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityInterestLeg
data CommodityInterestLeg_choice_3
    = CommodityInterestLeg_choice_3_NotionalAmount CommodityNotionalAmount
      -- ^ Specifies the notional amount of a commodity
      --   performance type swap. It is a currency-denominated
      --   value (i.e. price-times-quantity). In confirmations
      --   is also referred to as the Notional Quantity (sic,
      --   expressed in currency units), Notional Amount, Equity
      --   Notional Amount and, in the case of reinvesting
      --   swaps, Initial Notional Amount.
    | CommodityInterestLeg_choice_3_NotionalAmountReference CommodityNotionalAmountReference
      -- ^ A reference to the Return swap notional amount
      --   defined in another leg of the return swap.
    deriving (Eq, Ord, Show)

-- | Barrier Knock In or Out.
data CommodityKnockEnum
    = CommodityKnockEnum_In ()
      -- ^ Option is exercisable.
    | CommodityKnockEnum_Out ()
      -- ^ Option is not exercisable.
    deriving (Eq, Ord, Show)

-- | ISDA 1993 or 2005 commodity market disruption
--   elements.
data CommodityMarketDisruption = CommodityMarketDisruption with
    choice_1 : CommodityMarketDisruption_choice
    choice_2 : Optional CommodityMarketDisruption_choice_2
        -- ^ If omitted then the standard disruption fallbacks of
        --   Section 7.5(d)(i) of the ISDA Commodity Definitions
        --   shall apply.
    fallbackReferencePrice : Optional Underlyer
        -- ^ A fallback commodity reference price for use when
        --   relying on Disruption Fallbacks in Section 7.5(d)(i)
        --   of the ISDA Commodity Definitions or have selected
        --   "Fallback Reference Price" as a disruptionFallback.
    maximumNumberOfDaysOfDisruption : Optional Int
        -- ^ 2005 Commodity Definitions only. If omitted , the
        --   number of days specified in Section 7.6(a) of the
        --   Definitions will apply.
    priceMaterialityPercentage : Optional Decimal
        -- ^ 2005 Commodity Definitions only. To be used where a
        --   price materiality percentage applies to the "Price
        --   Source Disruption" event and this event has been
        --   specified by setting marketDisruption to true or
        --   including it in additionalMarketDisruptionEvent
    minimumFuturesContracts : Optional Int
        -- ^ 1993 Commodity Definitions only. Specifies the Mimum
        --   Futures Contracts level that dictates whether or not
        --   a "De Minimis Trading" event has occurred. Only
        --   relevant if 'De Minimis Trading' has been specified
        --   in marketDisruptionEvent or
        --   additionalMarketDisruptionEvent.
      deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityMarketDisruption
data CommodityMarketDisruption_choice
    = CommodityMarketDisruption_choice_Items CommodityMarketDisruption_items
    | CommodityMarketDisruption_choice_MarketDisruptionEvent [MarketDisruptionEvent]
      -- ^ Market disruption event(s) that apply. Note that
      --   these should only be specified if the default market
      --   disruption events of Section 7.4(d)(i) of the ISDA
      --   Commodity Definitions are to be overridden.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityMarketDisruption
data CommodityMarketDisruption_choice_2
    = CommodityMarketDisruption_choice_2_DisruptionFallbacks DisruptionFallbacksEnum
      -- ^ To be used where disruption fallbacks are set out in
      --   the relevant Master Agreement governing the trade.
    | CommodityMarketDisruption_choice_2_DisruptionFallback [SequencedDisruptionFallback]
    deriving (Eq, Ord, Show)

-- | A record type used inside CommodityMarketDisruption
data CommodityMarketDisruption_items = CommodityMarketDisruption_items with
    marketDisruptionEvents : MarketDisruptionEventsEnum
        -- ^ If Market disruption Events are stated to be
        --   Applicable then the default Market Disruption Events
        --   of Section 7.4(d)(i) of the ISDA Commodity
        --   Definitions shall apply unless specific Market
        --   Disruption Events are stated hereunder, in which case
        --   these shall override the ISDA defaults. If Market
        --   Disruption Events are stated to be Not Applicable,
        --   Market Disruption Events are not applicable to the
        --   trade at all. It is also possible to reference the
        --   Market Disruption Events set out in the relevant
        --   Master Agreement governing the trade.
    additionalMarketDisruptionEvent : [MarketDisruptionEvent]
        -- ^ To be used when marketDisruptionEvents is set to
        --   "Applicable" and additional market disruption
        --   events(s) apply to the default market disruption
        --   events of Section 7.4(d)(i) of the ISDA Commodity
        --   Definitions.
      deriving (Eq, Ord, Show)

data CommodityMetalBrand = CommodityMetalBrand with
    name : CommodityMetalBrandName
    brandManager : Optional CommodityMetalBrandManager
    country : Optional CountryCode
    producer : Optional CommodityMetalProducer
      deriving (Eq, Ord, Show)

data CommodityMetalBrandManager = CommodityMetalBrandManager with
    commodityMetalBrandManagerScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The name of the entity that issues the brand
data CommodityMetalBrandName = CommodityMetalBrandName with
    commodityMetalBrandNameScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data CommodityMetalGrade = CommodityMetalGrade with
    commodityMetalGradeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data CommodityMetalProducer = CommodityMetalProducer with
    commodityMetalProducerScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data CommodityMetalShape = CommodityMetalShape with
    commodityMetalShapeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type for defining the multiple exercise provisions
--   of an American style commodity option.
data CommodityMultipleExercise = CommodityMultipleExercise with
    integralMultipleQuantity : Optional CommodityNotionalQuantity
        -- ^ The integral multiple quantity defines a lower limit
        --   of the Notional Quantity that can be exercised and
        --   also defines a unit multiple of the Notional Quantity
        --   that can be exercised, i.e. only integer multiples of
        --   this Notional Quantity can be exercised.
    minimumNotionalQuantity : CommodityNotionalQuantity
        -- ^ The minimum Notional Quantity that can be exercised
        --   on a given Exercise Date. See multipleExercise.
      deriving (Eq, Ord, Show)

-- | A complex type to specify the notional amount.
data CommodityNotionalAmount = CommodityNotionalAmount with
    id_ : Optional Text
    currency : Currency
        -- ^ The currency in which an amount is denominated.
    amount : NonNegativeDecimal
        -- ^ The non negative monetary quantity in currency units.
    reinvestmentFeature : Bool
        -- ^ This element indicates whether the notional amount
        --   (or equivalent) is constant across each Calculation
        --   Period or whether the notional amount in each
        --   Calculation Period ("false") is the notional amount
        --   in the previous period multiplied by 1 + commodity
        --   index return in the current period ("true"). In cases
        --   where reinstementFeature = true the 'amount' element
        --   is the Initial Notional Amount (or equivalent).
      deriving (Eq, Ord, Show)

-- | A reference to the return swap notional amount.
data CommodityNotionalAmountReference = CommodityNotionalAmountReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | Commodity Notional.
data CommodityNotionalQuantity = CommodityNotionalQuantity with
    id_ : Optional Text
    quantityUnit : QuantityUnit
        -- ^ Quantity Unit is the unit of measure applicable for
        --   the quantity on the Transaction.
    quantityFrequency : CommodityQuantityFrequency
        -- ^ The frequency at which the Notional Quantity is
        --   deemed to apply for purposes of calculating the Total
        --   Notional Quantity.
    quantity : Decimal
        -- ^ Amount of commodity per quantity frequency.
      deriving (Eq, Ord, Show)

-- | The Notional Quantity per Calculation Period. There
--   must be a Notional Quantity step specified for each
--   Calculation Period, regardless of whether the
--   Notional Quantity changes or remains the same between
--   periods.
data CommodityNotionalQuantitySchedule = CommodityNotionalQuantitySchedule with
    id_ : Optional Text
    choice_1 : CommodityNotionalQuantitySchedule_choice
    choice_2 : CommodityNotionalQuantitySchedule_choice_2
      deriving (Eq, Ord, Show)

-- | A variant type used inside
--   CommodityNotionalQuantitySchedule
data CommodityNotionalQuantitySchedule_choice
    = CommodityNotionalQuantitySchedule_choice_NotionalStep [CommodityNotionalQuantity]
      -- ^ The Notional Quantity per Calculation Period. There
      --   must be a Notional Quantity specified for each
      --   Calculation Period, regardless of whether the
      --   quantity changes or remains the same between periods.
    | CommodityNotionalQuantitySchedule_choice_SettlementPeriodsNotionalQuantitySchedule [CommoditySettlementPeriodsNotionalQuantitySchedule]
      -- ^ For an electricity transaction, the Notional Quantity
      --   schedule for a one or more groups of Settlement
      --   Periods to which the Notional Quantity is based. If
      --   the schedule differs for different groups of
      --   Settlement Periods, this element should be repeated.
    deriving (Eq, Ord, Show)

-- | A variant type used inside
--   CommodityNotionalQuantitySchedule
data CommodityNotionalQuantitySchedule_choice_2
    = CommodityNotionalQuantitySchedule_choice_2_CalculationPeriodsReference CalculationPeriodsReference
      -- ^ A pointer style reference to the Calculation Periods
      --   defined on another leg.
    | CommodityNotionalQuantitySchedule_choice_2_CalculationPeriodsScheduleReference CalculationPeriodsScheduleReference
      -- ^ A pointer style reference to the Calculation Periods
      --   Schedule defined on another leg.
    | CommodityNotionalQuantitySchedule_choice_2_CalculationPeriodsDatesReference CalculationPeriodsDatesReference
      -- ^ A pointer style reference to single-day-duration
      --   Calculation Periods defined on another leg.
    deriving (Eq, Ord, Show)

-- | Defines a commodity option product type. The product
--   support for financially-settled exercises or exercise
--   into physical forward contracts written on precious
--   and non-precious metals. options in FpML is based on
--   the creation of a 'commodityOption' product. The
--   product references the 'commodity' underlyer in order
--   to support the underlying asset of the option.
data CommodityOption = CommodityOption with
    id_ : Optional Text
    product_model : Optional CommodityOption_Product_model
    buyerPartyReference : PartyReference
        -- ^ A reference to the party that buys this instrument,
        --   ie. pays for this instrument and receives the rights
        --   defined by it. See 2000 ISDA definitions Article 11.1
        --   (b). In the case of FRAs this the fixed rate payer.
    buyerAccountReference : Optional AccountReference
        -- ^ A reference to the account that buys this instrument.
    sellerPartyReference : PartyReference
        -- ^ A reference to the party that sells ("writes") this
        --   instrument, i.e. that grants the rights defined by
        --   this instrument and in return receives a payment for
        --   it. See 2000 ISDA definitions Article 11.1 (a). In
        --   the case of FRAs this is the floating rate payer.
    sellerAccountReference : Optional AccountReference
        -- ^ A reference to the account that sells this
        --   instrument.
    optionType : PutCallEnum
        -- ^ The type of option transaction.
    choice_ : CommodityOption_choice_8
    premium : [CommodityPremium]
        -- ^ The option premium payable by the buyer to the
        --   seller.
    commodityContent_model : Optional CommodityOption_CommodityContent_model
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityOption
data CommodityOption_CommodityContent_model = CommodityOption_CommodityContent_model with
    commonPricing : Optional Bool
        -- ^ If Common Pricing is elected (“true”) for a
        --   Transaction with referencing more than one Commodity
        --   Reference Price then no date will be a Pricing Date
        --   unless such a date is a day on which all Commodity
        --   Reference Prices are scheduled to be published.
    marketDisruption : Optional CommodityMarketDisruption
        -- ^ Contains contract terms related to triggers and
        --   responses to market disruptions as defined in the
        --   1993 or 2005 Commodity Definitions.
    settlementDisruption : Optional CommodityBullionSettlementDisruptionEnum
        -- ^ Describes contract terms related to the consequences
        --   of Bullion Settlement Disruption Events.
    rounding : Optional Rounding
        -- ^ Rounding direction and precision for amounts.
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityOption
data CommodityOption_CommodityOptionFeatures_model = CommodityOption_CommodityOptionFeatures_model with
    effectiveDate : AdjustableOrRelativeDate
        -- ^ The effective date of the Commodity Option
        --   Transaction. Note that the Termination/Expiration
        --   Date should be specified in expirationDate within the
        --   CommodityAmericanExercise type or the
        --   CommodityEuropeanExercise type, as applicable.
    terminationDate : Optional AdjustableOrRelativeDate
        -- ^ Specifies the termination date of the Commodity
        --   Option Transaction. In some confirmations this will
        --   be indicated as the second date in "Option Term" or
        --   "Term". Note: If provided, terminationDate should not
        --   be before specified expirationDate within the
        --   CommodityAmericanExercise type or the
        --   CommodityEuropeanExercise type.
    choice_ : Optional CommodityOption_choice_2
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityOption
data CommodityOption_Product_model = CommodityOption_Product_model with
    primaryAssetClass : Optional AssetClass
        -- ^ A classification of the most important risk class of
        --   the trade. FpML defines a simple asset class
        --   categorization using a coding scheme.
    secondaryAssetClass : [AssetClass]
        -- ^ A classification of additional risk classes of the
        --   trade, if any. FpML defines a simple asset class
        --   categorization using a coding scheme.
    productType : [ProductType]
        -- ^ A classification of the type of product. FpML defines
        --   a simple product categorization using a coding
        --   scheme.
    productId : [ProductId]
        -- ^ A product reference identifier. The product ID is an
        --   identifier that describes the key economic
        --   characteristics of the trade type, with the exception
        --   of concepts such as size (notional, quantity, number
        --   of units) and price (fixed rate, strike, etc.) that
        --   are negotiated for each transaction. It can be used
        --   to hold identifiers such as the "UPI" (universal
        --   product identifier) required by certain regulatory
        --   reporting rules. It can also be used to hold
        --   identifiers of benchmark products or product
        --   temnplates used by certain trading systems or
        --   facilities. FpML does not define the domain values
        --   associated with this element. Note that the domain
        --   values for this element are not strictly an
        --   enumerated list.
    assetClass : [AssetClass]
        -- ^ A classification of the risk class of the trade. FpML
        --   defines a simple asset class categorization using a
        --   coding scheme.
      deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityOption
data CommodityOption_choice
    = CommodityOption_choice_CalculationPeriodsSchedule CommodityCalculationPeriodsSchedule
      -- ^ A parametric representation of the Calculation
      --   Periods of the Commodity Option Transaction.
    | CommodityOption_choice_CalculationPeriods AdjustableDates
      -- ^ An absolute representation of the Calculation Period
      --   start dates of the Commodity Option Transaction.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityOption
data CommodityOption_choice_2
    = CommodityOption_choice_2_Items CommodityOption_items
    | CommodityOption_choice_2_Barrier CommodityBarrier
      -- ^ Defines a commodity option barrier product feature.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityOption
data CommodityOption_choice_3
    = CommodityOption_choice_3_NotionalQuantitySchedule CommodityNotionalQuantitySchedule
      -- ^ Allows the documentation of a shaped notional trade
      --   where the notional changes over the life of the
      --   transaction.
    | CommodityOption_choice_3_NotionalQuantity CommodityNotionalQuantity
      -- ^ The Notional Quantity.
    | CommodityOption_choice_3_SettlementPeriodsNotionalQuantity [CommoditySettlementPeriodsNotionalQuantity]
      -- ^ For an electricity transaction, the Notional Quantity
      --   for a one or more groups of Settlement Periods to
      --   which the Notional Quantity is based. If the schedule
      --   differs for different groups of Settlement Periods,
      --   this element should be repeated.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityOption
data CommodityOption_choice_4
    = CommodityOption_choice_4_Items CommodityOption_items_2
    | CommodityOption_choice_4_QuantityReference QuantityReference
      -- ^ A pointer style reference to a quantity defined on
      --   another leg.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityOption
data CommodityOption_choice_5
    = CommodityOption_choice_5_StrikePricePerUnit NonNegativeMoney
      -- ^ The currency amount of the strike price per unit.
    | CommodityOption_choice_5_StrikePricePerUnitSchedule CommodityStrikeSchedule
    | CommodityOption_choice_5_FloatingStrikePricePerUnit FloatingStrikePrice
      -- ^ The currency amount of the strike price per unit.
    | CommodityOption_choice_5_FloatingStrikePricePerUnitSchedule CommodityCalculationPeriodsSchedule
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityOption
data CommodityOption_choice_6
    = CommodityOption_choice_6_CommoditySwap CommoditySwap
      -- ^ Defines a commodity swap product.
    | CommodityOption_choice_6_CommodityForward CommodityForward
      -- ^ Defines a commodity forward product.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityOption
data CommodityOption_choice_7
    = CommodityOption_choice_7_WeatherCalculationPeriods WeatherCalculationPeriods
    | CommodityOption_choice_7_WeatherCalculationPeriodsReference CalculationPeriodsReference
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityOption
data CommodityOption_choice_8
    = CommodityOption_choice_8_Items1 CommodityOption_items_3
    | CommodityOption_choice_8_Items2 CommodityOption_items_4
    | CommodityOption_choice_8_Items3 CommodityOption_items_5
    deriving (Eq, Ord, Show)

-- | A record type used inside CommodityOption
data CommodityOption_items = CommodityOption_items with
    choice_ : CommodityOption_choice
    pricingDates : CommodityPricingDates
        -- ^ The dates on which the option will price.
    averagingMethod : Optional AveragingMethodEnum
        -- ^ The Method of Averaging if there is more than one
        --   Pricing Date.
    barrier : Optional CommodityBarrier
        -- ^ Defines a commodity option barrier product feature.
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityOption
data CommodityOption_items_2 = CommodityOption_items_2 with
    choice_ : CommodityOption_choice_3
    totalNotionalQuantity : Optional Decimal
        -- ^ The Total Notional Quantity.
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityOption
data CommodityOption_items_3 = CommodityOption_items_3 with
    commodity : Commodity
        -- ^ Specifies the underlying instrument. Usual content is
        --   an ISDA Commodity Reference Price Name. The
        --   'commodity' underlyer component is specified using a
        --   reference to the 'commodity' asset (see description
        --   above at the Commodity Underlyer section).
    commodityOptionFeatures_model : Optional CommodityOption_CommodityOptionFeatures_model
    choice_1 : CommodityOption_choice_4
    exercise : CommodityExercise
        -- ^ The parameters for defining how the commodity option
        --   can be exercised and how it is settled.
    choice_2 : CommodityOption_choice_5
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityOption
data CommodityOption_items_4 = CommodityOption_items_4 with
    choice_ : CommodityOption_choice_6
    physicalExercise : CommodityPhysicalExercise
        -- ^ The parameters for defining how the commodity option
        --   can be exercised into a physical transaction.
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityOption
data CommodityOption_items_5 = CommodityOption_items_5 with
    effectiveDate : AdjustableOrRelativeDate
        -- ^ Effective date of an option.
    choice_ : CommodityOption_choice_7
    weatherNotionalAmount : NonNegativeMoney
    exercise : CommodityExercise
    weatherIndexStrikeLevel : WeatherIndex
        -- ^ Weather Index strike price level is specified in
        --   terms of weather index units (e.g. 1 Days, 3 Inches,
        --   etc.)
    calculation : WeatherLegCalculation
        -- ^ Contains parameters which figure in the calculation
        --   of payments on a Weather Index Option.
    weatherIndexData : WeatherIndexData
        -- ^ Specifies where the data (e.g. CPD) have been
        --   collected, an actual physical reference point
        --   (weather station) and various fall back arrangements.
      deriving (Eq, Ord, Show)

-- | The Commodity specification of whether payments occur
--   relative e.g. to the Trade Date, or the end of the
--   month, etc.
data CommodityPayRelativeToEnum
    = CommodityPayRelativeToEnum_CalculationPeriodStartDate ()
      -- ^ Payments will occur relative to the first day of each
      --   calculation period.
    | CommodityPayRelativeToEnum_CalculationPeriodEndDate ()
      -- ^ Payments will occur relative to the last day of each
      --   calculation period.
    | CommodityPayRelativeToEnum_LastPricingDate ()
      -- ^ Payments will occur relative to the last Pricing Date
      --   of each Calculation Period.
    | CommodityPayRelativeToEnum_ResetDate ()
      -- ^ Payments will occur relative to the reset date.
    | CommodityPayRelativeToEnum_ValuationDate ()
      -- ^ Payments will occur relative to the valuation date.
    | CommodityPayRelativeToEnum_CalculationDate ()
      -- ^ Payments will occur relative to the Calculation Date.
    | CommodityPayRelativeToEnum_CalculationPeriodMonthEnd ()
      -- ^ Payments will occur relative to the end of the month
      --   date for Calculation Periods which do not end on the
      --   last day of the month.
    | CommodityPayRelativeToEnum_CalculationPeriodMonthStart ()
      -- ^ Payments will occur relative to the start of the
      --   month date for Calculation Periods which do not begin
      --   on the first day of the month.
    | CommodityPayRelativeToEnum_EffectiveDate ()
      -- ^ Payments will occur relative to the Effective Date of
      --   the contract.
    | CommodityPayRelativeToEnum_PricingPeriodMonthEnd ()
      -- ^ Payments will occur relative to the end of the month
      --   date for the month in which Pricing Days occur.
    | CommodityPayRelativeToEnum_TerminationOrExpirationDate ()
      -- ^ Payments will occur relative to the Termination Date
      --   of a swap or the last Expiration Date of an option.
    | CommodityPayRelativeToEnum_TradeDate ()
      -- ^ Payments will occur relative to the Trade Date.
    | CommodityPayRelativeToEnum_PricingPeriodEndOfWeek ()
      -- ^ Payments will occur relative to end of each week
      --   relative to the pricing period.
    | CommodityPayRelativeToEnum_FirstPricingDate ()
      -- ^ Payments will occur relative to the first pricing
      --   date of each calculation period.
    deriving (Eq, Ord, Show)

-- | A scheme identifying the physical event relative to
--   which payment occurs.
data CommodityPayRelativeToEvent = CommodityPayRelativeToEvent with
    commodityPayRelativeToEventScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type describing a commodity performance swap in
--   which one leg pays out based on the return on a
--   reference commodity index or commodity reference
--   price.
data CommodityPerformanceSwap = CommodityPerformanceSwap with
    id_ : Optional Text
    product_model : Optional CommodityPerformanceSwap_Product_model
    effectiveDate : Optional AdjustableOrRelativeDate
        -- ^ Specifies the Eeffective Date of the swap. It is an
        --   optional element because not all confirmations of
        --   total return swaps specify an Effective Date. In
        --   these cases the Term of the contract begins on the
        --   Trade Date.
    terminationDate : AdjustableOrRelativeDate
        -- ^ Specifies the Termination Date of the swap.
    settlementCurrency : Optional IdentifiedCurrency
        -- ^ The currency in which the commodity performance swap
        --   transaction will settle. It is an optional element
        --   because not all confirmations of performance swaps
        --   specify a Settlement Currency.
    commodityPerformanceSwapLeg : [CommodityPerformanceSwapLeg]
        -- ^ A placeholder within 'commodityPerformanceSwap'
        --   structure for the actual commodity swap legs (e.g.
        --   'commodityReturnLeg' and 'commodityInterestLeg').
    commodityContent_model : Optional CommodityPerformanceSwap_CommodityContent_model
    earlyTermination : [CommodityPerformanceSwapEarlyTermination]
        -- ^ Specifies, for one or for both the parties to the
        --   trade, the date prior to the Termination Date from
        --   which the contract can be terminated.
      deriving (Eq, Ord, Show)

-- | A product with which to represent return swaps, total
--   return swaps and excess return swaps.
data CommodityPerformanceSwapBase
    = CommodityPerformanceSwapBase_CommodityPerformanceSwap CommodityPerformanceSwap
    deriving (Eq, Ord, Show)

data CommodityPerformanceSwapEarlyTermination = CommodityPerformanceSwapEarlyTermination with
    partyReference : Optional PartyReference
    startingDate : Optional CommodityStartingDate
      deriving (Eq, Ord, Show)

-- | Abstract base class for all commodity performance
--   swap legs.
data CommodityPerformanceSwapLeg
    = CommodityPerformanceSwapLeg_CommodityVarianceLeg CommodityVarianceLeg
    | CommodityPerformanceSwapLeg_CommodityReturnLeg CommodityReturnLeg
    | CommodityPerformanceSwapLeg_CommodityInterestLeg CommodityInterestLeg
    deriving (Eq, Ord, Show)

-- | A record type used inside CommodityPerformanceSwap
data CommodityPerformanceSwap_CommodityContent_model = CommodityPerformanceSwap_CommodityContent_model with
    commonPricing : Optional Bool
        -- ^ If Common Pricing is elected (“true”) for a
        --   Transaction with referencing more than one Commodity
        --   Reference Price then no date will be a Pricing Date
        --   unless such a date is a day on which all Commodity
        --   Reference Prices are scheduled to be published.
    marketDisruption : Optional CommodityMarketDisruption
        -- ^ Contains contract terms related to triggers and
        --   responses to market disruptions as defined in the
        --   1993 or 2005 Commodity Definitions.
    settlementDisruption : Optional CommodityBullionSettlementDisruptionEnum
        -- ^ Describes contract terms related to the consequences
        --   of Bullion Settlement Disruption Events.
    rounding : Optional Rounding
        -- ^ Rounding direction and precision for amounts.
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityPerformanceSwap
data CommodityPerformanceSwap_Product_model = CommodityPerformanceSwap_Product_model with
    primaryAssetClass : Optional AssetClass
        -- ^ A classification of the most important risk class of
        --   the trade. FpML defines a simple asset class
        --   categorization using a coding scheme.
    secondaryAssetClass : [AssetClass]
        -- ^ A classification of additional risk classes of the
        --   trade, if any. FpML defines a simple asset class
        --   categorization using a coding scheme.
    productType : [ProductType]
        -- ^ A classification of the type of product. FpML defines
        --   a simple product categorization using a coding
        --   scheme.
    productId : [ProductId]
        -- ^ A product reference identifier. The product ID is an
        --   identifier that describes the key economic
        --   characteristics of the trade type, with the exception
        --   of concepts such as size (notional, quantity, number
        --   of units) and price (fixed rate, strike, etc.) that
        --   are negotiated for each transaction. It can be used
        --   to hold identifiers such as the "UPI" (universal
        --   product identifier) required by certain regulatory
        --   reporting rules. It can also be used to hold
        --   identifiers of benchmark products or product
        --   temnplates used by certain trading systems or
        --   facilities. FpML does not define the domain values
        --   associated with this element. Note that the domain
        --   values for this element are not strictly an
        --   enumerated list.
    assetClass : [AssetClass]
        -- ^ A classification of the risk class of the trade. FpML
        --   defines a simple asset class categorization using a
        --   coding scheme.
      deriving (Eq, Ord, Show)

-- | The parameters for defining the expiration date(s)
--   and time(s) for an American style option.
data CommodityPhysicalAmericanExercise = CommodityPhysicalAmericanExercise with
    id_ : Optional Text
    choice_ : CommodityPhysicalAmericanExercise_choice
    latestExerciseTime : Optional PrevailingTime
        -- ^ For a Bermuda or American style option, the latest
        --   time on an exercise business day (excluding the
        --   expiration date) within the exercise period that
        --   notice can be given by the buyer to the seller or
        --   seller's agent. Notice of exercise given after this
        --   time will be deemed to have been given on the next
        --   exercise business day.
    expirationTime : Optional PrevailingTime
        -- ^ The specific time of day at which the option expires.
      deriving (Eq, Ord, Show)

-- | A variant type used inside
--   CommodityPhysicalAmericanExercise
data CommodityPhysicalAmericanExercise_choice
    = CommodityPhysicalAmericanExercise_choice_Items1 CommodityPhysicalAmericanExercise_items
    | CommodityPhysicalAmericanExercise_choice_Items2 CommodityPhysicalAmericanExercise_items_2
    deriving (Eq, Ord, Show)

-- | A record type used inside
--   CommodityPhysicalAmericanExercise
data CommodityPhysicalAmericanExercise_items = CommodityPhysicalAmericanExercise_items with
    commencementDates : AdjustableOrRelativeDates
        -- ^ The first day(s) of the exercise period(s) for an
        --   American-style option.
    expirationDates : AdjustableOrRelativeDates
        -- ^ The Expiration Date(s) of an American-style option.
      deriving (Eq, Ord, Show)

-- | A record type used inside
--   CommodityPhysicalAmericanExercise
data CommodityPhysicalAmericanExercise_items_2 = CommodityPhysicalAmericanExercise_items_2 with
    relativeCommencementDates : CommodityRelativeExpirationDates
        -- ^ The first day(s) of the exercise period(s) for an
        --   American-style option where it is relative to the
        --   occurrence of an external event.
    relativeExpirationDates : CommodityRelativeExpirationDates
        -- ^ The Expiration Date(s) of an American-style option
        --   where it is relative to the occurrence of an external
        --   event.
      deriving (Eq, Ord, Show)

-- | The parameters for defining the expiration date(s)
--   and time(s) for a European style option.
data CommodityPhysicalEuropeanExercise = CommodityPhysicalEuropeanExercise with
    id_ : Optional Text
    choice_ : CommodityPhysicalEuropeanExercise_choice
    expirationTime : Optional PrevailingTime
        -- ^ The specific time of day at which the option expires.
      deriving (Eq, Ord, Show)

-- | A variant type used inside
--   CommodityPhysicalEuropeanExercise
data CommodityPhysicalEuropeanExercise_choice
    = CommodityPhysicalEuropeanExercise_choice_ExpirationDate AdjustableOrRelativeDate
      -- ^ The Expiration Date of a single expiry European-style
      --   option or the first Expiration Date of a multiple
      --   expiry or daily expiring option.
    | CommodityPhysicalEuropeanExercise_choice_ExpirationDates AdjustableRelativeOrPeriodicDates2
      -- ^ The Expiration Date(s) of a European-style option.
    | CommodityPhysicalEuropeanExercise_choice_RelativeExpirationDates CommodityRelativeExpirationDates
      -- ^ The Expiration Date(s) of a European-style option
      --   where it is relative to the occurrence of an external
      --   event.
    deriving (Eq, Ord, Show)

-- | The parameters for defining how the
--   physically-settled commodity option can be exercised
--   and how it is settled.
data CommodityPhysicalExercise = CommodityPhysicalExercise with
    choice_ : CommodityPhysicalExercise_choice
    automaticExercise : Optional Bool
        -- ^ Specifies whether or not Automatic Exercise applies
        --   to a Commodity Option Transaction.
    writtenConfirmation : Optional Bool
        -- ^ Specifies whether or not Written Confirmation applies
        --   to a Commodity Option Transaction.
    clearingInstructions : Optional SwaptionPhysicalSettlement
        -- ^ Specifies any instructions on how the physical
        --   settlement is to be effected when the option is
        --   exercised.
      deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityPhysicalExercise
data CommodityPhysicalExercise_choice
    = CommodityPhysicalExercise_choice_AmericanExercise CommodityPhysicalAmericanExercise
      -- ^ The parameters for defining the expiration date(s)
      --   and time(s) for an American style option.
    | CommodityPhysicalExercise_choice_EuropeanExercise CommodityPhysicalEuropeanExercise
      -- ^ The parameters for defining the expiration date(s)
      --   and time(s) for a European style option.
    deriving (Eq, Ord, Show)

-- | A type defining the physical quantity of the
--   commodity to be delivered.
data CommodityPhysicalQuantity = CommodityPhysicalQuantity with
    id_ : Optional Text
    choice_ : CommodityPhysicalQuantity_choice
    totalPhysicalQuantity : Optional UnitQuantity
        -- ^ The Total Quantity of the commodity to be delivered.
      deriving (Eq, Ord, Show)

-- | An abstract base class for physical quantity types.
data CommodityPhysicalQuantityBase
    = CommodityPhysicalQuantityBase_GasPhysicalQuantity GasPhysicalQuantity
    | CommodityPhysicalQuantityBase_ElectricityPhysicalQuantity ElectricityPhysicalQuantity
    | CommodityPhysicalQuantityBase_CommodityPhysicalQuantity CommodityPhysicalQuantity
    deriving (Eq, Ord, Show)

-- | The Quantity per Delivery Period. There must be a
--   Quantity step specified for each Delivery Period,
--   regardless of whether the Quantity changes or remains
--   the same between periods.
data CommodityPhysicalQuantitySchedule = CommodityPhysicalQuantitySchedule with
    id_ : Optional Text
    quantityStep : [CommodityNotionalQuantity]
        -- ^ The quantity per Calculation Period. There must be a
        --   quantity specified for each Calculation Period,
        --   regardless of whether the quantity changes or remains
        --   the same between periods.
    choice_ : CommodityPhysicalQuantitySchedule_choice
      deriving (Eq, Ord, Show)

-- | A variant type used inside
--   CommodityPhysicalQuantitySchedule
data CommodityPhysicalQuantitySchedule_choice
    = CommodityPhysicalQuantitySchedule_choice_DeliveryPeriodsReference CalculationPeriodsReference
      -- ^ A pointer style reference to the Delivery Periods
      --   defined elsewhere.
    | CommodityPhysicalQuantitySchedule_choice_DeliveryPeriodsScheduleReference CalculationPeriodsScheduleReference
      -- ^ A pointer style reference to the Calculation Periods
      --   Schedule defined elsewhere.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityPhysicalQuantity
data CommodityPhysicalQuantity_choice
    = CommodityPhysicalQuantity_choice_PhysicalQuantity CommodityNotionalQuantity
      -- ^ The Quantity per Delivery Period.
    | CommodityPhysicalQuantity_choice_PhysicalQuantitySchedule CommodityPhysicalQuantitySchedule
      -- ^ Allows the documentation of a shaped quantity trade
      --   where the quantity changes over the life of the
      --   transaction.
    deriving (Eq, Ord, Show)

-- | The pipeline through which the physical commodity
--   will be delivered.
data CommodityPipeline = CommodityPipeline with
    pipelineScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The pipeline cycle during which the physical
--   commodity will be delivered.
data CommodityPipelineCycle = CommodityPipelineCycle with
    pipelineCycleScheme : NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The commodity option premium payable by the buyer to
--   the seller.
data CommodityPremium = CommodityPremium with
    id_ : Optional Text
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    paymentDate : AdjustableOrRelativeDate
        -- ^ The payment date, which can be expressed as either an
        --   adjustable or relative date.
    paymentAmount : NonNegativeMoney
        -- ^ Non negative payment amount.
    premiumPerUnit : Optional NonNegativeMoney
        -- ^ The currency amount of premium to be paid per Unit of
        --   the Total Notional Quantity.
      deriving (Eq, Ord, Show)

-- | The dates on which prices are observed for the
--   underlyer.
data CommodityPricingDates = CommodityPricingDates with
    id_ : Optional Text
    choice_1 : CommodityPricingDates_choice
    choice_2 : CommodityPricingDates_choice_4
      deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityPricingDates
data CommodityPricingDates_choice
    = CommodityPricingDates_choice_CalculationPeriodsReference CalculationPeriodsReference
      -- ^ A pointer style reference to the Calculation Periods
      --   defined on another leg.
    | CommodityPricingDates_choice_CalculationPeriodsScheduleReference CalculationPeriodsScheduleReference
      -- ^ A pointer style reference to the Calculation Periods
      --   Schedule defined on another leg.
    | CommodityPricingDates_choice_CalculationPeriodsDatesReference CalculationPeriodsDatesReference
      -- ^ A pointer style reference to single-day-duration
      --   Calculation Periods defined on another leg.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityPricingDates
data CommodityPricingDates_choice_2
    = CommodityPricingDates_choice_2_Items1 CommodityPricingDates_items
    | CommodityPricingDates_choice_2_Items2 CommodityPricingDates_items_2
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityPricingDates
data CommodityPricingDates_choice_3
    = CommodityPricingDates_choice_3_Items CommodityPricingDates_items_3
    | CommodityPricingDates_choice_3_SettlementPeriods [SettlementPeriods]
      -- ^ Specifies a set of Settlement Periods associated with
      --   an Electricity Transaction for delivery on an
      --   Applicable Day or for a series of Applicable Days.
    | CommodityPricingDates_choice_3_SettlementPeriodsReference [SettlementPeriodsReference]
      -- ^ Allows a set of Settlement Periods to reference one
      --   already defined elsewhere in the trade structure.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityPricingDates
data CommodityPricingDates_choice_4
    = CommodityPricingDates_choice_4_Items CommodityPricingDates_items_4
    | CommodityPricingDates_choice_4_PricingDates [AdjustableDates]
      -- ^ A list of adjustable dates on which the trade will
      --   price. Each date will price for the Calculation
      --   Period within which it falls.
    deriving (Eq, Ord, Show)

-- | A record type used inside CommodityPricingDates
data CommodityPricingDates_items = CommodityPricingDates_items with
    dayDistribution : CommodityFrequencyType
        -- ^ The method by which the pricing days are distributed
        --   across the pricing period.
    dayCount : Optional Int
        -- ^ The number of days over which pricing should take
        --   place.
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityPricingDates
data CommodityPricingDates_items_2 = CommodityPricingDates_items_2 with
    dayOfWeek_ : [DayOfWeekEnum]
        -- ^ The day(s) of the week on which pricing will take
        --   place during the pricing period.
    dayNumber : Optional Int
        -- ^ The occurrence of the dayOfWeek within the pricing
        --   period on which pricing will take place, e.g. the 3rd
        --   Friday within each Calculation Period. If omitted,
        --   every dayOfWeek will be a pricing day.
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityPricingDates
data CommodityPricingDates_items_3 = CommodityPricingDates_items_3 with
    dayType : CommodityDayTypeEnum
        -- ^ The type of day on which pricing occurs.
    choice_ : CommodityPricingDates_choice_2
    businessDayConvention : Optional BusinessDayConventionEnum
        -- ^ The convention for adjusting a date if it would
        --   otherwise fall on a day that is not a business day.
    businessCalendar : Optional CommodityBusinessCalendar
        -- ^ Identifies a commodity business day calendar from
        --   which the pricing dates will be determined.
    calendarSource : Optional CalendarSourceEnum
        -- ^ Used in conjunction with an exchange-based pricing
        --   source. Identifies a date source calendar from which
        --   the pricing dates and thus roll to the next contract
        --   will be based off (e.g. pricing is based on the NYMEX
        --   WTI First Nearby Futures Contract, if “Future” is
        --   chosen, the pricing will roll to the next futures
        --   contract on expiration, if “ListedOption” is chosen,
        --   the pricing will roll to the next futures contract on
        --   the Option expiration date which is three business
        --   days before the expiration of the NYMEX WTI futures
        --   contract.) Omitting this element will result in the
        --   default behavior expected with the pricing source
        --   described within the commodity element.
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityPricingDates
data CommodityPricingDates_items_4 = CommodityPricingDates_items_4 with
    lag : Optional Lag
        -- ^ The pricing period per calculation period if the
        --   pricing days do not wholly fall within the respective
        --   calculation period.
    choice_ : CommodityPricingDates_choice_3
      deriving (Eq, Ord, Show)

-- | A scheme identifying the grade of physical commodity
--   product to be delivered.
data CommodityProductGrade = CommodityProductGrade with
    productGradeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type for defining the frequency at which the
--   Notional Quantity is deemed to apply for purposes of
--   calculating the Total Notional Quantity.
data CommodityQuantityFrequency = CommodityQuantityFrequency with
    quantityFrequencyScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The Expiration Dates of the trade relative to the
--   Calculation Periods.
data CommodityRelativeExpirationDates = CommodityRelativeExpirationDates with
    id_ : Optional Text
    expireRelativeToEvent : CommodityExpireRelativeToEvent
        -- ^ Specifies whether the payment(s) occur relative to
        --   the date of a physical event.
    expirationDateOffset : DateOffset
        -- ^ Specifies any offset from the adjusted Calculation
        --   Period start date or adjusted Calculation Period end
        --   date applicable to each Payment Date.
    businessCentersOrReference_model : Optional CommodityRelativeExpirationDates_BusinessCentersOrReference_model
      deriving (Eq, Ord, Show)

-- | A variant type used inside
--   CommodityRelativeExpirationDates
data CommodityRelativeExpirationDates_BusinessCentersOrReference_model
    = CommodityRelativeExpirationDates_BusinessCentersOrReference_model_BusinessCentersReference BusinessCentersReference
      -- ^ A pointer style reference to a set of financial
      --   business centers defined elsewhere in the document.
      --   This set of business centers is used to determine
      --   whether a particular day is a business day or not.
    | CommodityRelativeExpirationDates_BusinessCentersOrReference_model_BusinessCenters BusinessCenters
    deriving (Eq, Ord, Show)

-- | The Payment Dates of the trade relative to the
--   Calculation Periods.
data CommodityRelativePaymentDates = CommodityRelativePaymentDates with
    id_ : Optional Text
    choice_1 : CommodityRelativePaymentDates_choice
    choice_2 : CommodityRelativePaymentDates_choice_2
    paymentDaysOffset : DateOffset
        -- ^ Specifies any offset from the adjusted Calculation
        --   Period start date, adjusted Calculation Period end
        --   date or Calculation Date applicable to each Payment
        --   Date.
    businessCentersOrReference_model : Optional CommodityRelativePaymentDates_BusinessCentersOrReference_model
      deriving (Eq, Ord, Show)

-- | A variant type used inside
--   CommodityRelativePaymentDates
data CommodityRelativePaymentDates_BusinessCentersOrReference_model
    = CommodityRelativePaymentDates_BusinessCentersOrReference_model_BusinessCentersReference BusinessCentersReference
      -- ^ A pointer style reference to a set of financial
      --   business centers defined elsewhere in the document.
      --   This set of business centers is used to determine
      --   whether a particular day is a business day or not.
    | CommodityRelativePaymentDates_BusinessCentersOrReference_model_BusinessCenters BusinessCenters
    deriving (Eq, Ord, Show)

-- | A variant type used inside
--   CommodityRelativePaymentDates
data CommodityRelativePaymentDates_choice
    = CommodityRelativePaymentDates_choice_PayRelativeTo CommodityPayRelativeToEnum
      -- ^ Specifies whether the payment(s) occur relative to a
      --   date such as the end of each Calculation Period or
      --   the last Pricing Date in each Calculation Period.
    | CommodityRelativePaymentDates_choice_PayRelativeToEvent CommodityPayRelativeToEvent
      -- ^ Specifies whether the payment(s) occur relative to
      --   the date of a physical event such as issuance of a
      --   bill of lading.
    deriving (Eq, Ord, Show)

-- | A variant type used inside
--   CommodityRelativePaymentDates
data CommodityRelativePaymentDates_choice_2
    = CommodityRelativePaymentDates_choice_2_CalculationPeriodsReference CalculationPeriodsReference
      -- ^ A pointer style reference to the Calculation Periods
      --   defined on another leg.
    | CommodityRelativePaymentDates_choice_2_CalculationPeriodsScheduleReference CalculationPeriodsScheduleReference
      -- ^ A pointer style reference to the Calculation Periods
      --   Schedule defined on another leg.
    | CommodityRelativePaymentDates_choice_2_CalculationPeriodsDatesReference CalculationPeriodsDatesReference
      -- ^ A pointer style reference to single-day-duration
      --   Calculation Periods defined on another leg.
    deriving (Eq, Ord, Show)

data CommodityReturnCalculation = CommodityReturnCalculation with
    formula : CommodityReturnCalculationFormulaEnum
        -- ^ Defines the value of the commodity return calculation
        --   formula as simple or compound.
    pricingDates : Optional CommodityPricingDates
        -- ^ Describes which dates are valid dates on which to
        --   observe a price or index level
    valuationDates : Optional CommodityValuationDates
        -- ^ Defines when a price or index level will be observed
        --   that will figure in the return calculation.
    initialPrice : Optional Decimal
        -- ^ If specified in the confirmation, the price or index
        --   level at the beginning of the initial Calculation
        --   Period. For example, if the return calculation is
        --   [(Index End / Index Begin) - 1] and Index Begin is
        --   defined as equal to Index End for the immediately
        --   preceeding Calculation Period, then the value of
        --   Index Begin in the very first Calculation Period is
        --   not defined and is usually specified in the
        --   confirmation.
      deriving (Eq, Ord, Show)

-- | Defines the value of the commodity return calculation
--   formula as simple or compound. The simple return
--   formula is: [ [P sub t - P sub (t-1)] / [P sub (t-1)]
--   ] - 1 where: P sub t is the price or index level at
--   time period t and P sub t-1 is the price or index
--   level in time period t-1. The compound return formula
--   is the geometric average return for the period: PI
--   from d=1 to d=n [ [ [ [P sub t - P sub (t-1)] / [P
--   sub (t-1)] ] + 1] sup (1 / n) ] - 1 where: PI is the
--   product operator, p sub t is the price or index level
--   at time period t, p sub t -1 is the price or index
--   level at time period t-1
data CommodityReturnCalculationFormulaEnum
    = CommodityReturnCalculationFormulaEnum_SimpleFormula ()
      -- ^ The value is when the cash settlement amount is the
      --   simple formula: Notional Amount * ((Index Level sub d
      --   / Index Level sub d-1) - 1). That is, when the cash
      --   settlement amount is the Notional Amount for the
      --   calculation period multiplied by the ratio of the
      --   index level on the reset date/valuation date divided
      --   by the index level on the immediately preceding reset
      --   date/valuation date minus one.
    | CommodityReturnCalculationFormulaEnum_CompoundFormula ()
      -- ^ The value is when the cash settlement amount is the
      --   compound formula:
    deriving (Eq, Ord, Show)

-- | A type describing the return leg of a commodity
--   return swap.
data CommodityReturnLeg = CommodityReturnLeg with
    id_ : Optional Text
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    choice_1 : CommodityReturnLeg_choice
    choice_2 : CommodityReturnLeg_choice_2
    choice_3 : CommodityReturnLeg_choice_3
    choice_4 : CommodityReturnLeg_choice_4
    commodityReturnCalculation : CommodityReturnCalculation
        -- ^ Specifies, in relation to each Payment Date, the
        --   return percentage which, when multiplied times the
        --   notional amount is the amount to which the Payment
        --   Date relates.
      deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityReturnLeg
data CommodityReturnLeg_choice
    = CommodityReturnLeg_choice_CalculationDates AdjustableDates
      -- ^ The Calculation Period dates for this leg of the
      --   trade where the Calculation Periods are all one day
      --   long. Only dates explicitly included determine the
      --   Calculation Periods and there is a Calculation Period
      --   for each date specified. As such one-day Calculation
      --   Period are typical a physically-settled emissions or
      --   metals trades it is expected that this element will
      --   not be used in performance swaps.
    | CommodityReturnLeg_choice_CalculationPeriods AdjustableDates
      -- ^ The Calculation Period start dates for this leg of
      --   the swap. This type is only intended to be used if
      --   the Calculation Periods differ on each leg. If
      --   Calculation Periods mirror another leg, then the
      --   calculationPeriodsReference element should be used to
      --   point to the Calculation Periods on that leg - or the
      --   calculationPeriodsScheduleReference can be used to
      --   point to the Calculation Periods Schedule for that
      --   leg.
    | CommodityReturnLeg_choice_CalculationPeriodsSchedule CommodityCalculationPeriodsSchedule
      -- ^ The Calculation Periods for this leg of the swap.
      --   This type is only intended to be used if the
      --   Calculation Periods differ on each leg. If
      --   Calculation Periods mirror another leg, then the
      --   calculationPeriodsReference element should be used to
      --   point to the Calculation Periods on the other leg -
      --   or the calculationPeriodsScheduleReference can be
      --   used to point to the Calculation Periods Schedule for
      --   that leg.
    | CommodityReturnLeg_choice_CalculationPeriodsReference CalculationPeriodsReference
      -- ^ A pointer style reference to the Calculation Periods
      --   defined on another leg.
    | CommodityReturnLeg_choice_CalculationPeriodsScheduleReference CalculationPeriodsScheduleReference
      -- ^ A pointer style reference to the Calculation Periods
      --   Schedule defined on another leg.
    | CommodityReturnLeg_choice_CalculationPeriodsDatesReference CalculationPeriodsDatesReference
      -- ^ A pointer style reference to single-day-duration
      --   Calculation Periods defined on another leg.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityReturnLeg
data CommodityReturnLeg_choice_2
    = CommodityReturnLeg_choice_2_RelativePaymentDates CommodityRelativePaymentDates
      -- ^ The Payment Dates of the trade relative to the
      --   Calculation Periods.
    | CommodityReturnLeg_choice_2_PaymentDates AdjustableDatesOrRelativeDateOffset
      -- ^ Dates on which payments will be made.
    | CommodityReturnLeg_choice_2_MasterAgreementPaymentDates Bool
      -- ^ If present and true indicates that the Payment
      --   Date(s) are specified in the relevant master
      --   agreement.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityReturnLeg
data CommodityReturnLeg_choice_3
    = CommodityReturnLeg_choice_3_Commodity Commodity
      -- ^ Describes the swap's underlyer when it has only one
      --   asset component.
    | CommodityReturnLeg_choice_3_CommodityBasket CommodityBasket
      -- ^ Describes the swap's underlyer when it has multiple
      --   asset components.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityReturnLeg
data CommodityReturnLeg_choice_4
    = CommodityReturnLeg_choice_4_NotionalAmount CommodityNotionalAmount
      -- ^ Specifies the notional amount of a commodity
      --   performance type swap. It is a currency-denominated
      --   value (i.e. price-times-quantity). In confirmations
      --   is also referred to as the Notional Quantity (sic,
      --   expressed in currency units), Notional Amount, Equity
      --   Notional Amount and, in the case of reinvesting
      --   swaps, Initial Notional Amount.
    | CommodityReturnLeg_choice_4_NotionalAmountReference CommodityNotionalAmountReference
      -- ^ A reference to the Return swap notional amount
      --   defined in another leg of the return swap.
    deriving (Eq, Ord, Show)

-- | The notional quantity of electricity that applies to
--   one or more groups of Settlement Periods.
data CommoditySettlementPeriodsNotionalQuantity = CommoditySettlementPeriodsNotionalQuantity with
    id_ : Optional Text
    quantityUnit : QuantityUnit
        -- ^ Quantity Unit is the unit of measure applicable for
        --   the quantity on the Transaction.
    quantityFrequency : CommodityQuantityFrequency
        -- ^ The frequency at which the Notional Quantity is
        --   deemed to apply for purposes of calculating the Total
        --   Notional Quantity.
    quantity : Decimal
        -- ^ Amount of commodity per quantity frequency.
    settlementPeriodsReference : [SettlementPeriodsReference]
        -- ^ The range(s) of Settlement Periods to which the
        --   Notional Quantity applies.
      deriving (Eq, Ord, Show)

-- | The notional quantity schedule of electricity that
--   applies to one or more groups of Settlement Periods.
data CommoditySettlementPeriodsNotionalQuantitySchedule = CommoditySettlementPeriodsNotionalQuantitySchedule with
    settlementPeriodsNotionalQuantityStep : [CommodityNotionalQuantity]
        -- ^ For an electricity transaction, the Notional Quantity
        --   for a given Calculation Period during the life of the
        --   trade which applies to the range(s) of Settlement
        --   Periods referenced by settlementPeriodsReference.
        --   There must be a settlementPeriodsNotionalQuantityStep
        --   specified for each Calculation Period, regardless of
        --   whether the NotionalQuantity changes or remains the
        --   same between periods.
    settlementPeriodsReference : [SettlementPeriodsReference]
        -- ^ The range(s) of Settlement Periods to which the Fixed
        --   Price steps apply.
      deriving (Eq, Ord, Show)

-- | The fixed price schedule for electricity that applies
--   to one or more groups of Settlement Periods.
data CommoditySettlementPeriodsPriceSchedule = CommoditySettlementPeriodsPriceSchedule with
    settlementPeriodsPriceStep : [FixedPrice]
        -- ^ For an electricity transaction, the Fixed Price for a
        --   given Calculation Period during the life of the trade
        --   which applies to the range(s) of Settlement Periods
        --   referenced by settlementPeriods Reference. There must
        --   be a Fixed Price step specified for each Calculation
        --   Period, regardless of whether the Fixed Price changes
        --   or remains the same between periods.
    settlementPeriodsReference : [SettlementPeriodsReference]
        -- ^ The range(s) of Settlement Periods to which the Fixed
        --   Price steps apply.
      deriving (Eq, Ord, Show)

data CommoditySpread = CommoditySpread with
    id_ : Optional Text
    currency : Currency
        -- ^ The currency in which an amount is denominated.
    amount : Decimal
        -- ^ The monetary quantity in currency units.
    spreadConversionFactor : Optional Decimal
        -- ^ spreadConversionFactor should be used when the unit
        --   of measure of the Commodity Reference Price and the
        --   unit of measure in which the spread is quoted are
        --   different. The value of spreadConversionFactor is the
        --   number of units of measure in which the spread is
        --   quoted per unit of measure of the Commodity Reference
        --   Price.
    spreadUnit : Optional QuantityUnit
        -- ^ spreadUnit should be used when the unit of measure of
        --   the Commodity Reference Price and the unit of measure
        --   in which the spread is quoted are different. The
        --   value of spreadUnit is the unit of measure in which
        --   the spread is quoted.
      deriving (Eq, Ord, Show)

-- | The Spread per Calculation Period. There must be a
--   Spread specified for each Calculation Period,
--   regardless of whether the Spread changes or remains
--   the same between periods.
data CommoditySpreadSchedule = CommoditySpreadSchedule with
    spreadStep : [CommoditySpread]
        -- ^ The spread per Calculation Period. There must be a
        --   spread step specified for each Calculation Period,
        --   regardless of whether the spread changes or remains
        --   the same between periods.
    choice_ : CommoditySpreadSchedule_choice
      deriving (Eq, Ord, Show)

-- | A variant type used inside CommoditySpreadSchedule
data CommoditySpreadSchedule_choice
    = CommoditySpreadSchedule_choice_CalculationPeriodsReference CalculationPeriodsReference
      -- ^ A pointer style reference to the Calculation Periods
      --   defined on another leg.
    | CommoditySpreadSchedule_choice_CalculationPeriodsScheduleReference CalculationPeriodsScheduleReference
      -- ^ A pointer style reference to the Calculation Periods
      --   Schedule defined on another leg.
    | CommoditySpreadSchedule_choice_CalculationPeriodsDatesReference CalculationPeriodsDatesReference
      -- ^ A pointer style reference to single-day-duration
      --   Calculation Periods defined on another leg.
    deriving (Eq, Ord, Show)

-- | A type specifying the date from which the early
--   termination clause can be exercised.
data CommodityStartingDate
    = CommodityStartingDate_DateRelativeTo PartyReference
      -- ^ Reference to a party defined elsewhere in this
      --   document which may be allowed to terminate the trade.
    | CommodityStartingDate_AdjustableDate AdjustableDate
      -- ^ Date from which early termination clause can be
      --   exercised.
    deriving (Eq, Ord, Show)

-- | The Strike Price per Unit per Calculation Period.
--   There must be a Strike Price per Unit step specified
--   for each Calculation Period, regardless of whether
--   the Strike changes or remains the same between
--   periods.
data CommodityStrikeSchedule = CommodityStrikeSchedule with
    strikePricePerUnitStep : [NonNegativeMoney]
        -- ^ The strike price per unit per Calculation Period.
        --   There must be a strike price per unit specified for
        --   each Calculation Period, regardless of whether the
        --   price changes or remains the same between periods.
    choice_ : CommodityStrikeSchedule_choice
      deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityStrikeSchedule
data CommodityStrikeSchedule_choice
    = CommodityStrikeSchedule_choice_CalculationPeriodsReference CalculationPeriodsReference
      -- ^ A pointer style reference to the Calculation Periods
      --   defined on another leg.
    | CommodityStrikeSchedule_choice_CalculationPeriodsScheduleReference CalculationPeriodsScheduleReference
      -- ^ A pointer style reference to the Calculation Periods
      --   Schedule defined on another leg.
    | CommodityStrikeSchedule_choice_CalculationPeriodsDatesReference CalculationPeriodsDatesReference
      -- ^ A pointer style reference to single-day-duration
      --   Calculation Periods defined on another leg.
    deriving (Eq, Ord, Show)

-- | The commodity swap product model is designed to
--   support fixed-float swaps, float-float swaps, fixed
--   vs. physical swaps, float vs. physical swaps as well
--   as, weather specific swaps. Its design is fully
--   compatible with other FpML products and the product
--   reuses standard common types.
data CommoditySwap = CommoditySwap with
    id_ : Optional Text
    product_model : Optional CommoditySwap_Product_model
    effectiveDate : AdjustableOrRelativeDate
        -- ^ Specifies the effective date of this leg of the swap.
        --   When defined in relation to a date specified
        --   somewhere else in the document (through the
        --   relativeDate component), this element will typically
        --   point to the effective date of the other leg of the
        --   swap.
    terminationDate : AdjustableOrRelativeDate
        -- ^ Specifies the termination date of this leg of the
        --   swap. When defined in relation to a date specified
        --   somewhere else in the document (through the
        --   relativeDate component), this element will typically
        --   point to the termination date of the other leg of the
        --   swap.
    settlementCurrency : IdentifiedCurrency
        -- ^ The currency into which the Commodity Swap
        --   Transaction will settle. If this is not the same as
        --   the currency in which the Commodity Reference Price
        --   is quoted on a given floating leg of the Commodity
        --   Swap Transaction, then an FX rate should also be
        --   specified for that leg.
    choice_ : CommoditySwap_choice
    commodityContent_model : Optional CommoditySwap_CommodityContent_model
      deriving (Eq, Ord, Show)

-- | Abstract base class for all commodity swap legs
data CommoditySwapLeg
    = CommoditySwapLeg_OilPhysicalLeg OilPhysicalLeg
    | CommoditySwapLeg_GasPhysicalLeg GasPhysicalLeg
    | CommoditySwapLeg_FloatingLeg FloatingPriceLeg
    | CommoditySwapLeg_FixedLeg FixedPriceLeg
    | CommoditySwapLeg_EnvironmentalPhysicalLeg EnvironmentalPhysicalLeg
    | CommoditySwapLeg_ElectricityPhysicalLeg ElectricityPhysicalLeg
    | CommoditySwapLeg_CoalPhysicalLeg CoalPhysicalLeg
    | CommoditySwapLeg_NonPeriodicFixedPriceLeg NonPeriodicFixedPriceLeg
    | CommoditySwapLeg_WeatherLeg WeatherLeg
    | CommoditySwapLeg_AveragePriceLeg AveragePriceLeg
    deriving (Eq, Ord, Show)

-- | A record type used inside CommoditySwap
data CommoditySwap_CommodityContent_model = CommoditySwap_CommodityContent_model with
    commonPricing : Optional Bool
        -- ^ If Common Pricing is elected (“true”) for a
        --   Transaction with referencing more than one Commodity
        --   Reference Price then no date will be a Pricing Date
        --   unless such a date is a day on which all Commodity
        --   Reference Prices are scheduled to be published.
    marketDisruption : Optional CommodityMarketDisruption
        -- ^ Contains contract terms related to triggers and
        --   responses to market disruptions as defined in the
        --   1993 or 2005 Commodity Definitions.
    settlementDisruption : Optional CommodityBullionSettlementDisruptionEnum
        -- ^ Describes contract terms related to the consequences
        --   of Bullion Settlement Disruption Events.
    rounding : Optional Rounding
        -- ^ Rounding direction and precision for amounts.
      deriving (Eq, Ord, Show)

-- | A record type used inside CommoditySwap
data CommoditySwap_Product_model = CommoditySwap_Product_model with
    primaryAssetClass : Optional AssetClass
        -- ^ A classification of the most important risk class of
        --   the trade. FpML defines a simple asset class
        --   categorization using a coding scheme.
    secondaryAssetClass : [AssetClass]
        -- ^ A classification of additional risk classes of the
        --   trade, if any. FpML defines a simple asset class
        --   categorization using a coding scheme.
    productType : [ProductType]
        -- ^ A classification of the type of product. FpML defines
        --   a simple product categorization using a coding
        --   scheme.
    productId : [ProductId]
        -- ^ A product reference identifier. The product ID is an
        --   identifier that describes the key economic
        --   characteristics of the trade type, with the exception
        --   of concepts such as size (notional, quantity, number
        --   of units) and price (fixed rate, strike, etc.) that
        --   are negotiated for each transaction. It can be used
        --   to hold identifiers such as the "UPI" (universal
        --   product identifier) required by certain regulatory
        --   reporting rules. It can also be used to hold
        --   identifiers of benchmark products or product
        --   temnplates used by certain trading systems or
        --   facilities. FpML does not define the domain values
        --   associated with this element. Note that the domain
        --   values for this element are not strictly an
        --   enumerated list.
    assetClass : [AssetClass]
        -- ^ A classification of the risk class of the trade. FpML
        --   defines a simple asset class categorization using a
        --   coding scheme.
      deriving (Eq, Ord, Show)

-- | A variant type used inside CommoditySwap
data CommoditySwap_choice
    = CommoditySwap_choice_CommoditySwapLeg [CommoditySwapLeg]
      -- ^ Defines the substitutable commodity swap leg
    | CommoditySwap_choice_WeatherLeg [WeatherLeg]
      -- ^ A weather leg element of a Commodity Swap defines
      --   Weather Index Swap transactions. Weather Index Swap
      --   transactions are OTC derivative transactions which
      --   settle financially based on an index calculated from
      --   observations of temperature, precipitation and other
      --   weather-related measurements at weather stations
      --   throughout the world. Sub-Annex C of the 2005 ISDA
      --   Commodity Definitions provides definitions and terms
      --   for a number of types of weather indices. These
      --   indices include: HDD (heating degree days), CDD
      --   (cooling degree days), CPD (critical precipitation
      --   days). Weather Index Swap transactions result in a
      --   cash flow to one of the two counterparties each
      --   Calculation Period depending on the relationship
      --   between the Settlement Level and the Weather Index
      --   Level. A Weather Index swap transaction always
      --   consists of a commodity swap element as a parent to
      --   two weatherLeg elements.
    deriving (Eq, Ord, Show)

-- | Commodity Swaption.
data CommoditySwaption = CommoditySwaption with
    id_ : Optional Text
    product_model : Optional CommoditySwaption_Product_model
    buyerPartyReference : PartyReference
        -- ^ A reference to the party that buys this instrument,
        --   ie. pays for this instrument and receives the rights
        --   defined by it. See 2000 ISDA definitions Article 11.1
        --   (b). In the case of FRAs this the fixed rate payer.
    buyerAccountReference : Optional AccountReference
        -- ^ A reference to the account that buys this instrument.
    sellerPartyReference : PartyReference
        -- ^ A reference to the party that sells ("writes") this
        --   instrument, i.e. that grants the rights defined by
        --   this instrument and in return receives a payment for
        --   it. See 2000 ISDA definitions Article 11.1 (a). In
        --   the case of FRAs this is the floating rate payer.
    sellerAccountReference : Optional AccountReference
        -- ^ A reference to the account that sells this
        --   instrument.
    optionType : PutCallEnum
        -- ^ The type of option transaction.
    commoditySwap : CommoditySwaptionUnderlying
        -- ^ The underlying commodity swap definiton.
    physicalExercise : CommodityPhysicalExercise
        -- ^ The parameters for defining how the commodity option
        --   can be exercised into a physical transaction.
    premium : CommodityPremium
        -- ^ The option premium payable by the buyer to the
        --   seller.
    commodityContent_model : Optional CommoditySwaption_CommodityContent_model
      deriving (Eq, Ord, Show)

data CommoditySwaptionUnderlying = CommoditySwaptionUnderlying with
    effectiveDate : AdjustableOrRelativeDate
        -- ^ Specifies the effective date of this leg of the swap.
        --   When defined in relation to a date specified
        --   somewhere else in the document (through the
        --   relativeDate component), this element will typically
        --   point to the effective date of the other leg of the
        --   swap.
    terminationDate : AdjustableOrRelativeDate
        -- ^ Specifies the termination date of this leg of the
        --   swap. When defined in relation to a date specified
        --   somewhere else in the document (through the
        --   relativeDate component), this element will typically
        --   point to the termination date of the other leg of the
        --   swap.
    settlementCurrency : IdentifiedCurrency
        -- ^ The currency into which the Commodity Swap
        --   Transaction will settle. If this is not the same as
        --   the currency in which the Commodity Reference Price
        --   is quoted on a given floating leg of the Commodity
        --   Swap Transaction, then an FX rate should also be
        --   specified for that leg.
    choice_ : CommoditySwaptionUnderlying_choice
    commodityContent_model : Optional CommoditySwaptionUnderlying_CommodityContent_model
      deriving (Eq, Ord, Show)

-- | A record type used inside CommoditySwaptionUnderlying
data CommoditySwaptionUnderlying_CommodityContent_model = CommoditySwaptionUnderlying_CommodityContent_model with
    commonPricing : Optional Bool
        -- ^ If Common Pricing is elected (“true”) for a
        --   Transaction with referencing more than one Commodity
        --   Reference Price then no date will be a Pricing Date
        --   unless such a date is a day on which all Commodity
        --   Reference Prices are scheduled to be published.
    marketDisruption : Optional CommodityMarketDisruption
        -- ^ Contains contract terms related to triggers and
        --   responses to market disruptions as defined in the
        --   1993 or 2005 Commodity Definitions.
    settlementDisruption : Optional CommodityBullionSettlementDisruptionEnum
        -- ^ Describes contract terms related to the consequences
        --   of Bullion Settlement Disruption Events.
    rounding : Optional Rounding
        -- ^ Rounding direction and precision for amounts.
      deriving (Eq, Ord, Show)

-- | A variant type used inside
--   CommoditySwaptionUnderlying
data CommoditySwaptionUnderlying_choice
    = CommoditySwaptionUnderlying_choice_CommoditySwapLeg [CommoditySwapLeg]
      -- ^ Defines the substitutable commodity swap leg
    | CommoditySwaptionUnderlying_choice_WeatherLeg [WeatherLeg]
      -- ^ A weather leg element of a Commodity Swap defines
      --   Weather Index Swap transactions. Weather Index Swap
      --   transactions are OTC derivative transactions which
      --   settle financially based on an index calculated from
      --   observations of temperature, precipitation and other
      --   weather-related measurements at weather stations
      --   throughout the world. Sub-Annex C of the 2005 ISDA
      --   Commodity Definitions provides definitions and terms
      --   for a number of types of weather indices. These
      --   indices include: HDD (heating degree days), CDD
      --   (cooling degree days), CPD (critical precipitation
      --   days). Weather Index Swap transactions result in a
      --   cash flow to one of the two counterparties each
      --   Calculation Period depending on the relationship
      --   between the Settlement Level and the Weather Index
      --   Level. A Weather Index swap transaction always
      --   consists of a commodity swap element as a parent to
      --   two weatherLeg elements.
    deriving (Eq, Ord, Show)

-- | A record type used inside CommoditySwaption
data CommoditySwaption_CommodityContent_model = CommoditySwaption_CommodityContent_model with
    commonPricing : Optional Bool
        -- ^ If Common Pricing is elected (“true”) for a
        --   Transaction with referencing more than one Commodity
        --   Reference Price then no date will be a Pricing Date
        --   unless such a date is a day on which all Commodity
        --   Reference Prices are scheduled to be published.
    marketDisruption : Optional CommodityMarketDisruption
        -- ^ Contains contract terms related to triggers and
        --   responses to market disruptions as defined in the
        --   1993 or 2005 Commodity Definitions.
    settlementDisruption : Optional CommodityBullionSettlementDisruptionEnum
        -- ^ Describes contract terms related to the consequences
        --   of Bullion Settlement Disruption Events.
    rounding : Optional Rounding
        -- ^ Rounding direction and precision for amounts.
      deriving (Eq, Ord, Show)

-- | A record type used inside CommoditySwaption
data CommoditySwaption_Product_model = CommoditySwaption_Product_model with
    primaryAssetClass : Optional AssetClass
        -- ^ A classification of the most important risk class of
        --   the trade. FpML defines a simple asset class
        --   categorization using a coding scheme.
    secondaryAssetClass : [AssetClass]
        -- ^ A classification of additional risk classes of the
        --   trade, if any. FpML defines a simple asset class
        --   categorization using a coding scheme.
    productType : [ProductType]
        -- ^ A classification of the type of product. FpML defines
        --   a simple product categorization using a coding
        --   scheme.
    productId : [ProductId]
        -- ^ A product reference identifier. The product ID is an
        --   identifier that describes the key economic
        --   characteristics of the trade type, with the exception
        --   of concepts such as size (notional, quantity, number
        --   of units) and price (fixed rate, strike, etc.) that
        --   are negotiated for each transaction. It can be used
        --   to hold identifiers such as the "UPI" (universal
        --   product identifier) required by certain regulatory
        --   reporting rules. It can also be used to hold
        --   identifiers of benchmark products or product
        --   temnplates used by certain trading systems or
        --   facilities. FpML does not define the domain values
        --   associated with this element. Note that the domain
        --   values for this element are not strictly an
        --   enumerated list.
    assetClass : [AssetClass]
        -- ^ A classification of the risk class of the trade. FpML
        --   defines a simple asset class categorization using a
        --   coding scheme.
      deriving (Eq, Ord, Show)

-- | The barrier which, when breached, triggers the
--   knock-in or knock-out of the barrier option.
data CommodityTrigger = CommodityTrigger with
    choice_ : CommodityTrigger_choice
    triggerType : TriggerTypeEnum
        -- ^ For barrier options: the specification of how an
        --   option will trigger or expire based on the position
        --   of the spot rate relative to the trigger level. For
        --   trades with selectable notionals: the specification
        --   of the conditions where one of the alternative
        --   notional values would apply.
      deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityTrigger
data CommodityTrigger_choice
    = CommodityTrigger_choice_Items CommodityTrigger_items
    | CommodityTrigger_choice_LevelPercentage Decimal
      -- ^ A barrier expressed as a percentage of notional
      --   quantity or commodity price level.
    | CommodityTrigger_choice_LevelPrice FixedPrice
      -- ^ A barrier expressed as a price level.
    deriving (Eq, Ord, Show)

-- | A record type used inside CommodityTrigger
data CommodityTrigger_items = CommodityTrigger_items with
    levelQuantity : Decimal
        -- ^ The amount used the specify the barrier in terms of
        --   an quantity of commodity or a change in the quantity
        --   of commodity. In confirmations this is often
        --   described as the "Strike Volume" or "Strike
        --   Quantity".
    levelUnit : QuantityUnit
        -- ^ The units (e.g. BCF) used to specify the barrier in
        --   terms of an quantity of commodity or change in the
        --   quantity of commodity.
      deriving (Eq, Ord, Show)

-- | The dates on which prices are observed for the
--   underlyer.
data CommodityValuationDates = CommodityValuationDates with
    id_ : Optional Text
    choice_1 : CommodityValuationDates_choice
    choice_2 : CommodityValuationDates_choice_4
      deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityValuationDates
data CommodityValuationDates_choice
    = CommodityValuationDates_choice_CalculationPeriodsReference CalculationPeriodsReference
      -- ^ A pointer style reference to the Calculation Periods
      --   defined on another leg.
    | CommodityValuationDates_choice_CalculationPeriodsScheduleReference CalculationPeriodsScheduleReference
      -- ^ A pointer style reference to the Calculation Periods
      --   Schedule defined on another leg.
    | CommodityValuationDates_choice_CalculationPeriodsDatesReference CalculationPeriodsDatesReference
      -- ^ A pointer style reference to single-day-duration
      --   Calculation Periods defined on another leg.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityValuationDates
data CommodityValuationDates_choice_2
    = CommodityValuationDates_choice_2_Items1 CommodityValuationDates_items
    | CommodityValuationDates_choice_2_Items2 CommodityValuationDates_items_2
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityValuationDates
data CommodityValuationDates_choice_3
    = CommodityValuationDates_choice_3_Items CommodityValuationDates_items_3
    | CommodityValuationDates_choice_3_SettlementPeriods [SettlementPeriods]
      -- ^ Specifies a set of Settlement Periods associated with
      --   an Electricity Transaction for delivery on an
      --   Applicable Day or for a series of Applicable Days.
    | CommodityValuationDates_choice_3_SettlementPeriodsReference [SettlementPeriodsReference]
      -- ^ Allows a set of Settlement Periods to reference one
      --   already defined elsewhere in the trade structure.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityValuationDates
data CommodityValuationDates_choice_4
    = CommodityValuationDates_choice_4_Items CommodityValuationDates_items_4
    | CommodityValuationDates_choice_4_ValuationDates [AdjustableDates]
      -- ^ A list of adjustable dates on which the trade will
      --   price. Each date will price for the Calculation
      --   Period within which it falls.
    deriving (Eq, Ord, Show)

-- | A record type used inside CommodityValuationDates
data CommodityValuationDates_items = CommodityValuationDates_items with
    dayDistribution : CommodityFrequencyType
        -- ^ The method by which the pricing days are distributed
        --   across the pricing period.
    dayCount : Optional Int
        -- ^ The number of days over which pricing should take
        --   place.
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityValuationDates
data CommodityValuationDates_items_2 = CommodityValuationDates_items_2 with
    dayOfWeek_ : [DayOfWeekEnum]
        -- ^ The day(s) of the week on which pricing will take
        --   place during the pricing period.
    dayNumber : Optional Int
        -- ^ The occurrence of the dayOfWeek within the pricing
        --   period on which pricing will take place, e.g. the 3rd
        --   Friday within each Calculation Period. If omitted,
        --   every dayOfWeek will be a pricing day.
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityValuationDates
data CommodityValuationDates_items_3 = CommodityValuationDates_items_3 with
    dayType : CommodityDayTypeEnum
        -- ^ The type of day on which pricing occurs.
    choice_ : CommodityValuationDates_choice_2
    businessDayConvention : Optional BusinessDayConventionEnum
        -- ^ The convention for adjusting a date if it would
        --   otherwise fall on a day that is not a business day.
    businessCalendar : Optional CommodityBusinessCalendar
        -- ^ Identifies a commodity business day calendar from
        --   which the pricing dates will be determined.
    calendarSource : Optional CalendarSourceEnum
        -- ^ Used in conjunction with an exchange-based pricing
        --   source. Identifies a date source calendar from which
        --   the pricing dates and thus roll to the next contract
        --   will be based off (e.g. pricing is based on the NYMEX
        --   WTI First Nearby Futures Contract, if “Future” is
        --   chosen, the pricing will roll to the next futures
        --   contract on expiration, if “ListedOption” is chosen,
        --   the pricing will roll to the next futures contract on
        --   the Option expiration date which is three business
        --   days before the expiration of the NYMEX WTI futures
        --   contract.) Omitting this element will result in the
        --   default behavior expected with the pricing source
        --   described within the commodity element.
      deriving (Eq, Ord, Show)

-- | A record type used inside CommodityValuationDates
data CommodityValuationDates_items_4 = CommodityValuationDates_items_4 with
    lag : Optional Lag
        -- ^ The pricing period per calculation period if the
        --   pricing days do not wholly fall within the respective
        --   calculation period.
    choice_ : CommodityValuationDates_choice_3
      deriving (Eq, Ord, Show)

data CommodityVarianceCalculation = CommodityVarianceCalculation with
    pricingDates : Optional CommodityPricingDates
        -- ^ Describes which dates are valid dates on which to
        --   observe a price or index level.
    valuationDates : Optional CommodityValuationDates
        -- ^ Defines when a price or index level will be observed
        --   that will figure in the return calculation.
    annualizationFactor : Decimal
        -- ^ This specifies the numerator of an annualization
        --   factor. Frequently this number is equal to the number
        --   of observations of prices in a year e.g. 252.
    nAdjustment : Bool
        -- ^ Specifies whether denominator of the annualization
        --   factor is N ("false") or N - 1 ("true").
      deriving (Eq, Ord, Show)

-- | A type describing the variance leg of a commodity
--   variance swap.
data CommodityVarianceLeg = CommodityVarianceLeg with
    id_ : Optional Text
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    choice_1 : CommodityVarianceLeg_choice
    choice_2 : CommodityVarianceLeg_choice_2
    choice_3 : CommodityVarianceLeg_choice_3
    choice_4 : CommodityVarianceLeg_choice_4
    choice_5 : CommodityVarianceLeg_choice_5
    varianceCalculation : CommodityVarianceCalculation
        -- ^ Specifies, in relation to each Payment Date, the
        --   variance percentage which, when multiplied times the
        --   notional amount is the amount to which the Payment
        --   Date relates. For purposes of this representation the
        --   realized variance is: (annualizationFactor / N) *
        --   signma from i = 1 to N (ln (S sub (i+1)) / (S sub
        --   i)), where: ln is the natural logarithm, N is the
        --   number of pricing dates, S sub i is the relevant
        --   price on the observation date i. If nAdjustment is
        --   'true' then the denominator of the annualization
        --   factor is (N - 1) rather than N. If realized
        --   volatility is the performance metric in a variance
        --   swap rather than realized variance then the square
        --   root of the formula above will appear in the
        --   confirmation.
      deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityVarianceLeg
data CommodityVarianceLeg_choice
    = CommodityVarianceLeg_choice_CalculationDates AdjustableDates
      -- ^ The Calculation Period dates for this leg of the
      --   trade where the Calculation Periods are all one day
      --   long. Only dates explicitly included determine the
      --   Calculation Periods and there is a Calculation Period
      --   for each date specified. As such one-day Calculation
      --   Period are typical a physically-settled emissions or
      --   metals trades it is expected that this element will
      --   not be used in performance swaps.
    | CommodityVarianceLeg_choice_CalculationPeriods AdjustableDates
      -- ^ The Calculation Period start dates for this leg of
      --   the swap. This type is only intended to be used if
      --   the Calculation Periods differ on each leg. If
      --   Calculation Periods mirror another leg, then the
      --   calculationPeriodsReference element should be used to
      --   point to the Calculation Periods on that leg - or the
      --   calculationPeriodsScheduleReference can be used to
      --   point to the Calculation Periods Schedule for that
      --   leg.
    | CommodityVarianceLeg_choice_CalculationPeriodsSchedule CommodityCalculationPeriodsSchedule
      -- ^ The Calculation Periods for this leg of the swap.
      --   This type is only intended to be used if the
      --   Calculation Periods differ on each leg. If
      --   Calculation Periods mirror another leg, then the
      --   calculationPeriodsReference element should be used to
      --   point to the Calculation Periods on the other leg -
      --   or the calculationPeriodsScheduleReference can be
      --   used to point to the Calculation Periods Schedule for
      --   that leg.
    | CommodityVarianceLeg_choice_CalculationPeriodsReference CalculationPeriodsReference
      -- ^ A pointer style reference to the Calculation Periods
      --   defined on another leg.
    | CommodityVarianceLeg_choice_CalculationPeriodsScheduleReference CalculationPeriodsScheduleReference
      -- ^ A pointer style reference to the Calculation Periods
      --   Schedule defined on another leg.
    | CommodityVarianceLeg_choice_CalculationPeriodsDatesReference CalculationPeriodsDatesReference
      -- ^ A pointer style reference to single-day-duration
      --   Calculation Periods defined on another leg.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityVarianceLeg
data CommodityVarianceLeg_choice_2
    = CommodityVarianceLeg_choice_2_RelativePaymentDates CommodityRelativePaymentDates
      -- ^ The Payment Dates of the trade relative to the
      --   Calculation Periods.
    | CommodityVarianceLeg_choice_2_PaymentDates AdjustableDatesOrRelativeDateOffset
      -- ^ Dates on which payments will be made.
    | CommodityVarianceLeg_choice_2_MasterAgreementPaymentDates Bool
      -- ^ If present and true indicates that the Payment
      --   Date(s) are specified in the relevant master
      --   agreement.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityVarianceLeg
data CommodityVarianceLeg_choice_3
    = CommodityVarianceLeg_choice_3_Commodity Commodity
      -- ^ Describes the swap's underlyer when it has only one
      --   asset component.
    | CommodityVarianceLeg_choice_3_CommodityBasket CommodityBasket
      -- ^ Describes the swap's underlyer when it has multiple
      --   asset components.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityVarianceLeg
data CommodityVarianceLeg_choice_4
    = CommodityVarianceLeg_choice_4_NotionalAmount CommodityNotionalAmount
      -- ^ Specifies the notional amount of a commodity
      --   performance type swap. It is a currency-denominated
      --   value (i.e. price-times-quantity). In confirmations
      --   is also referred to as the Notional Quantity (sic,
      --   expressed in currency units), Notional Amount, Equity
      --   Notional Amount and, in the case of reinvesting
      --   swaps, Initial Notional Amount.
    | CommodityVarianceLeg_choice_4_NotionalAmountReference CommodityNotionalAmountReference
      -- ^ A reference to the Return swap notional amount
      --   defined in another leg of the return swap.
    deriving (Eq, Ord, Show)

-- | A variant type used inside CommodityVarianceLeg
data CommodityVarianceLeg_choice_5
    = CommodityVarianceLeg_choice_5_VarianceStrikePrice Decimal
      -- ^ Specifies the variance strike price when this strike
      --   is expressed in variance units. Payments on the
      --   variance leg are equal to the national amount
      --   multiplied by the realized variance minus this
      --   variance strike price: notional amount * (realized
      --   variance - variance strike price).
    | CommodityVarianceLeg_choice_5_VolatilityStrikePrice Decimal
      -- ^ Specifies the volatility strike price when this
      --   strike is expressed in standard deviation units.
      --   Payments on the variance leg are equal to the
      --   national amount multiplied by the realized volatility
      --   squared minus the volatility strike price squared.
      --   Notional amount * (realized volatility^2 - volatility
      --   strike^2). Squaring the volatility strike price
      --   converts the volatility strike price into a variance
      --   strike price. Squaring the realized volatility
      --   converts realized volatility to realized variance.
    deriving (Eq, Ord, Show)

-- | A record type used inside Commodity
data Commodity_CommodityReferencePriceFramework_model = Commodity_CommodityReferencePriceFramework_model with
    commodityBase : CommodityBase
        -- ^ A coding scheme value to identify the base type of
        --   the commodity being traded. Where possible, this
        --   should follow the naming convention used in the 2005
        --   ISDA Commodity Definitions. For example, 'Oil'.
    commodityDetails : CommodityDetails
        -- ^ A coding scheme value to identify the commodity being
        --   traded more specifically. Where possible, this should
        --   follow the naming convention used in the 2005 ISDA
        --   Commodity Definitions. For example, 'Brent'.
    unit : QuantityUnit
        -- ^ A coding scheme value to identify the unit of measure
        --   (e.g. Therms) in which the undelryer is denominated.
        --   Where possible, this should follow the naming
        --   convention used in the 2005 ISDA Commodity
        --   Definitions.
    currency : Currency
        -- ^ The currency in which the Commodity Reference Price
        --   is published (e.g. GBP).
    choice_ : Commodity_choice
      deriving (Eq, Ord, Show)

-- | A variant type used inside Commodity
data Commodity_choice
    = Commodity_choice_ExchangeId ExchangeId
      -- ^ For those commodities being traded with reference to
      --   the price of a listed instrument, the exchange where
      --   that instrument is listed should be specified in the
      --   'exchange' element.
    | Commodity_choice_Publication CommodityInformationSource
      -- ^ For those commodities being traded with reference to
      --   a price distributed by a publication, that
      --   publication should be specified in the 'publication'
      --   element.
    deriving (Eq, Ord, Show)

-- | A variant type used inside Commodity
data Commodity_choice_2
    = Commodity_choice_2_DeliveryDates DeliveryDatesEnum
      -- ^ Deprecated: The 'deliveryDates' element is applicable
      --   for a Commodity Reference Price that references a
      --   listed future contract (e.g. The Delivery Date is a
      --   NearbyMonth).
    | Commodity_choice_2_DeliveryNearby DeliveryNearby
      -- ^ A container for the parametric representation of
      --   nearby contracts.
    | Commodity_choice_2_DeliveryDate AdjustableDate
      -- ^ The Delivery Date is a fixed, single day.
    | Commodity_choice_2_DeliveryDateYearMonth Text
      -- ^ The Delivery Date is a fixed, single month.
    deriving (Eq, Ord, Show)

-- | A record type used inside Commodity
data Commodity_sequence = Commodity_sequence with
    choice_ : Commodity_choice_2
    deliveryDateRollConvention : Optional Offset
        -- ^ The 'deliveryDateRollConvention' specifies, for a
        --   Commodity Transaction that references a listed future
        --   via the 'deliveryDates' element, the day on which the
        --   specified future will roll to the next nearby month
        --   prior to the expiration of the referenced future. If
        --   the future will not roll at all - i.e. the price will
        --   be taken from the expiring contract, 0 should be
        --   specified here. If the future will roll to the next
        --   nearby on the last trading day - i.e. the price will
        --   be taken from the next nearby on the last trading
        --   day, then 1 should be specified and so on.
    deliveryDateExpirationConvention : Optional Offset
        -- ^ The 'deliveryDateExpirationConvention' specifies, for
        --   a Commodity Transaction that references a listed
        --   future via the 'deliveryDates' element, the day on
        --   which the specified future will expire ahead of the
        --   actual expiration of the referenced future. For
        --   example: Z21 Contract expires on 19Nov21, with an
        --   adjust of 2D the "expire" will be 16Nov21.
        --   DeliveryDateRollConvention takes precedence. Example:
        --   Pricing on the Z21 Contract with NearbyContractDay
        --   and a deliveryDateRoll of 10D, Sampling of the F22
        --   Contract will occur on 8Nov21 through the last Date
        --   of the Z21 Contract. With an ExpConvention of 5D, the
        --   last sampling date on the F22 contract will be
        --   12Nov21.
      deriving (Eq, Ord, Show)

-- | Specifies the conditions to be applied for converting
--   into a reference currency when the actual currency
--   rate is not determined upfront.
data Composite = Composite with
    determinationMethod : Optional DeterminationMethod
        -- ^ Specifies the method according to which an amount or
        --   a date is determined.
    relativeDate : Optional RelativeDateOffset
        -- ^ A date specified as some offset to another date (the
        --   anchor date).
    fxSpotRateSource : Optional FxSpotRateSource
        -- ^ Specifies the methodology (reference source and,
        --   optionally, fixing time) to be used for determining a
        --   currency conversion rate.
      deriving (Eq, Ord, Show)

-- | The compounding calculation method
data CompoundingMethodEnum
    = CompoundingMethodEnum_Flat ()
      -- ^ Flat compounding. Compounding excludes the spread.
      --   Note that the first compounding period has it's
      --   interest calculated including any spread then
      --   subsequent periods compound this at a rate excluding
      --   the spread.
    | CompoundingMethodEnum_None ()
      -- ^ No compounding is to be applied.
    | CompoundingMethodEnum_Straight ()
      -- ^ Straight compounding. Compounding includes the
      --   spread.
    | CompoundingMethodEnum_SpreadExclusive ()
      -- ^ Spread Exclusive compounding.
    deriving (Eq, Ord, Show)

-- | A type that shows how multiple trades have been
--   combined into a result.
data CompressionActivity = CompressionActivity with
    compressionType : Optional CompressionType
    choice_ : CompressionActivity_choice
      deriving (Eq, Ord, Show)

-- | A variant type used inside CompressionActivity
data CompressionActivity_choice
    = CompressionActivity_choice_Items1 CompressionActivity_items
    | CompressionActivity_choice_Items2 CompressionActivity_items_2
    deriving (Eq, Ord, Show)

-- | A record type used inside CompressionActivity
data CompressionActivity_items = CompressionActivity_items with
    replacementTradeIdentifier : Optional TradeIdentifier
    originatingTradeIdentifier : [TradeIdentifier]
      deriving (Eq, Ord, Show)

-- | A record type used inside CompressionActivity
data CompressionActivity_items_2 = CompressionActivity_items_2 with
    replacementTradeId : Optional TradeId
    originatingTradeId : [TradeId]
      deriving (Eq, Ord, Show)

-- | A type that identifies the type of trade
--   amalgamation, for example netting or portfolio
--   compression.
data CompressionType = CompressionType with
    compressionTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | Defines a condition when an event applies.
data ConditionEnum
    = ConditionEnum_AtOrAbove ()
      -- ^ The event rate must be greater than or equal to the
      --   specified trigger rate.
    | ConditionEnum_AtOrBelow ()
      -- ^ The event rate must be less than or equal to the
      --   specified trigger rate.
    | ConditionEnum_Above ()
      -- ^ The event rate must be greater than the specified
      --   trigger rate.
    | ConditionEnum_Below ()
      -- ^ The event rate must be less than the specified
      --   trigger rate.
    deriving (Eq, Ord, Show)

-- | Defines whether conditions precedent have been met in
--   a given syndicated loan deal.
data ConditionsPrecedentMetEnum
    = ConditionsPrecedentMetEnum_No ()
      -- ^ Conditions precedent have not been met.
    | ConditionsPrecedentMetEnum_Waived ()
      -- ^ The requirement for conditions precedent were waived.
    | ConditionsPrecedentMetEnum_Yes ()
      -- ^ Conditions precedent have been met.
    deriving (Eq, Ord, Show)

-- | A message indicating that a confirmation has been
--   agreed by a counterparty.
data ConfirmationAgreed = ConfirmationAgreed with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : ResponseMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequence_model : Optional ConfirmationAgreed_Sequence_model
    onBehalfOf_model : Optional ConfirmationAgreed_OnBehalfOf_model
    choice_ : Optional ConfirmationAgreed_choice
    partiesAndAccounts_model : Optional ConfirmationAgreed_PartiesAndAccounts_model
      deriving (Eq, Ord, Show)

-- | A record type used inside ConfirmationAgreed
data ConfirmationAgreed_OnBehalfOf_model = ConfirmationAgreed_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside ConfirmationAgreed
data ConfirmationAgreed_PartiesAndAccounts_model = ConfirmationAgreed_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A record type used inside ConfirmationAgreed
data ConfirmationAgreed_Sequence_model = ConfirmationAgreed_Sequence_model with
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A variant type used inside ConfirmationAgreed
data ConfirmationAgreed_choice
    = ConfirmationAgreed_choice_TradePackage TradePackage
    | ConfirmationAgreed_choice_Items1 ConfirmationAgreed_items
    | ConfirmationAgreed_choice_Amendment TradeAmendmentContent
    | ConfirmationAgreed_choice_Increase TradeNotionalChange
    | ConfirmationAgreed_choice_Items2 ConfirmationAgreed_items_2
    | ConfirmationAgreed_choice_Novation TradeNovationContent
    | ConfirmationAgreed_choice_Withdrawal Withdrawal
    | ConfirmationAgreed_choice_Change TradeChangeContent
    | ConfirmationAgreed_choice_OptionExercise OptionExercise
      -- ^ A structure describing an option exercise event. The
      --   optionExercise event supports partial exercise
      --   (specify the number of options or amount to
      --   exercise), full exercise (use fullExercise flag), as
      --   well as the option to request options not to be
      --   exercised.
    | ConfirmationAgreed_choice_OptionExpiry [OptionExpiry]
      -- ^ A structure describing an option expiring event (i.e.
      --   passing its last exercise time and becoming
      --   worthless.)
    | ConfirmationAgreed_choice_OptionEvent OptionEvent
      -- ^ A structure describing knock in, knock out, touch and
      --   no touch events.
    | ConfirmationAgreed_choice_AdditionalEvent AdditionalEvent
      -- ^ The additionalEvent element is an
      --   extension/substitution point to customize FpML and
      --   add additional events.
    deriving (Eq, Ord, Show)

-- | A record type used inside ConfirmationAgreed
data ConfirmationAgreed_items = ConfirmationAgreed_items with
    originatingEvent : Optional OriginatingEvent
    trade : Trade
      deriving (Eq, Ord, Show)

-- | A record type used inside ConfirmationAgreed
data ConfirmationAgreed_items_2 = ConfirmationAgreed_items_2 with
    terminatingEvent : Optional TerminatingEvent
        -- ^ This may be used to describe why a trade was
        --   terminated.
    termination : TradeNotionalChange
      deriving (Eq, Ord, Show)

-- | A message indicating that a confirmation has not been
--   agreed by a counterparty.
data ConfirmationDisputed = ConfirmationDisputed with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : ResponseMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequence_model : Optional ConfirmationDisputed_Sequence_model
    onBehalfOf_model : Optional ConfirmationDisputed_OnBehalfOf_model
    choice_ : Optional ConfirmationDisputed_choice
    partiesAndAccounts_model : Optional ConfirmationDisputed_PartiesAndAccounts_model
    reason : [Reason]
      deriving (Eq, Ord, Show)

-- | A record type used inside ConfirmationDisputed
data ConfirmationDisputed_OnBehalfOf_model = ConfirmationDisputed_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside ConfirmationDisputed
data ConfirmationDisputed_PartiesAndAccounts_model = ConfirmationDisputed_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A record type used inside ConfirmationDisputed
data ConfirmationDisputed_Sequence_model = ConfirmationDisputed_Sequence_model with
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A variant type used inside ConfirmationDisputed
data ConfirmationDisputed_choice
    = ConfirmationDisputed_choice_TradePackage TradePackage
    | ConfirmationDisputed_choice_Items1 ConfirmationDisputed_items
    | ConfirmationDisputed_choice_Amendment TradeAmendmentContent
    | ConfirmationDisputed_choice_Increase TradeNotionalChange
    | ConfirmationDisputed_choice_Items2 ConfirmationDisputed_items_2
    | ConfirmationDisputed_choice_Novation TradeNovationContent
    | ConfirmationDisputed_choice_Withdrawal Withdrawal
    | ConfirmationDisputed_choice_Change TradeChangeContent
    | ConfirmationDisputed_choice_OptionExercise OptionExercise
      -- ^ A structure describing an option exercise event. The
      --   optionExercise event supports partial exercise
      --   (specify the number of options or amount to
      --   exercise), full exercise (use fullExercise flag), as
      --   well as the option to request options not to be
      --   exercised.
    | ConfirmationDisputed_choice_OptionExpiry [OptionExpiry]
      -- ^ A structure describing an option expiring event (i.e.
      --   passing its last exercise time and becoming
      --   worthless.)
    | ConfirmationDisputed_choice_OptionEvent OptionEvent
      -- ^ A structure describing knock in, knock out, touch and
      --   no touch events.
    | ConfirmationDisputed_choice_AdditionalEvent AdditionalEvent
      -- ^ The additionalEvent element is an
      --   extension/substitution point to customize FpML and
      --   add additional events.
    deriving (Eq, Ord, Show)

-- | A record type used inside ConfirmationDisputed
data ConfirmationDisputed_items = ConfirmationDisputed_items with
    originatingEvent : Optional OriginatingEvent
    trade : Trade
      deriving (Eq, Ord, Show)

-- | A record type used inside ConfirmationDisputed
data ConfirmationDisputed_items_2 = ConfirmationDisputed_items_2 with
    terminatingEvent : Optional TerminatingEvent
        -- ^ This may be used to describe why a trade was
        --   terminated.
    termination : TradeNotionalChange
      deriving (Eq, Ord, Show)

-- | A type used to represent the type of mechanism that
--   can be used to confirm a trade.
data ConfirmationMethod = ConfirmationMethod with
    confirmationMethodScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A message indicating that a confirmation request has
--   been withdrawn by the submitter.
data ConfirmationRetracted = ConfirmationRetracted with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    correlationAndSequence_model : Optional ConfirmationRetracted_CorrelationAndSequence_model
    onBehalfOf_model : Optional ConfirmationRetracted_OnBehalfOf_model
    choice_ : Optional ConfirmationRetracted_choice
    partiesAndAccounts_model : Optional ConfirmationRetracted_PartiesAndAccounts_model
      deriving (Eq, Ord, Show)

-- | A record type used inside ConfirmationRetracted
data ConfirmationRetracted_CorrelationAndSequence_model = ConfirmationRetracted_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside ConfirmationRetracted
data ConfirmationRetracted_OnBehalfOf_model = ConfirmationRetracted_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside ConfirmationRetracted
data ConfirmationRetracted_PartiesAndAccounts_model = ConfirmationRetracted_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A variant type used inside ConfirmationRetracted
data ConfirmationRetracted_choice
    = ConfirmationRetracted_choice_TradePackage TradePackage
    | ConfirmationRetracted_choice_Items1 ConfirmationRetracted_items
    | ConfirmationRetracted_choice_Amendment TradeAmendmentContent
    | ConfirmationRetracted_choice_Increase TradeNotionalChange
    | ConfirmationRetracted_choice_Items2 ConfirmationRetracted_items_2
    | ConfirmationRetracted_choice_Novation TradeNovationContent
    | ConfirmationRetracted_choice_Withdrawal Withdrawal
    | ConfirmationRetracted_choice_AdditionalEvent AdditionalEvent
      -- ^ The additionalEvent element is an
      --   extension/substitution point to customize FpML and
      --   add additional events.
    | ConfirmationRetracted_choice_OptionExercise OptionExercise
      -- ^ A structure describing an option exercise event. The
      --   optionExercise event supports partial exercise
      --   (specify the number of options or amount to
      --   exercise), full exercise (use fullExercise flag), as
      --   well as the option to request options not to be
      --   exercised.
    deriving (Eq, Ord, Show)

-- | A record type used inside ConfirmationRetracted
data ConfirmationRetracted_items = ConfirmationRetracted_items with
    originatingEvent : Optional OriginatingEvent
    trade : Trade
      deriving (Eq, Ord, Show)

-- | A record type used inside ConfirmationRetracted
data ConfirmationRetracted_items_2 = ConfirmationRetracted_items_2 with
    terminatingEvent : Optional TerminatingEvent
        -- ^ This may be used to describe why a trade was
        --   terminated.
    termination : TradeNotionalChange
      deriving (Eq, Ord, Show)

-- | Message for sending matching results. Response
--   message that returns the status of an event that have
--   been submitted for matching.
data ConfirmationStatus = ConfirmationStatus with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : ResponseMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequence_model : Optional ConfirmationStatus_Sequence_model
    onBehalfOf_model : Optional ConfirmationStatus_OnBehalfOf_model
    status : EventStatus
        -- ^ Defines the confirmation status of a trade or
        --   post-trade event (e.g. Matched, Mismatched,
        --   Unmatched, Alleged).
    choice_ : ConfirmationStatus_choice
    partiesAndAccounts_model : Optional ConfirmationStatus_PartiesAndAccounts_model
      deriving (Eq, Ord, Show)

-- | A record type used inside ConfirmationStatus
data ConfirmationStatus_OnBehalfOf_model = ConfirmationStatus_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside ConfirmationStatus
data ConfirmationStatus_PartiesAndAccounts_model = ConfirmationStatus_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A record type used inside ConfirmationStatus
data ConfirmationStatus_Sequence_model = ConfirmationStatus_Sequence_model with
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A variant type used inside ConfirmationStatus
data ConfirmationStatus_choice
    = ConfirmationStatus_choice_Items ConfirmationStatus_items
    | ConfirmationStatus_choice_AllegedEvent EventsChoice
      -- ^ Event (trade post-trade event) asserted by the "other
      --   side's" party.
    deriving (Eq, Ord, Show)

-- | A record type used inside ConfirmationStatus
data ConfirmationStatus_items = ConfirmationStatus_items with
    assertedEvent : EventsChoice
        -- ^ Event (trade or post-trade event) asserted by one of
        --   the parties.
    proposedMatch : [EventProposedMatch]
        -- ^ "Other side's" event (trade or post-trade event) that
        --   meets the minimimum matching criteria and is proposed
        --   as match to the event that is being asserted.
      deriving (Eq, Ord, Show)

-- | A message indicating that the sender grants consent
--   for the recipient to perform the requested action.
data ConsentGranted = ConsentGranted with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : ResponseMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequence_model : Optional ConsentGranted_Sequence_model
    onBehalfOf_model : Optional ConsentGranted_OnBehalfOf_model
    type_ : Optional ApprovalType
        -- ^ The type of approval (e.g. "pre-clearing credit").
    approver : Optional PersonId
        -- ^ The full name or identifiying ID of the relevant
        --   approver.
    approvingPartyReference : Optional PartyReference
        -- ^ A pointer style reference to a party defined
        --   elsewhere in the document. The party referenced needs
        --   to approve the specified item (e.g. trade or
        --   allocation).
    approvalId : Optional ApprovalId
        -- ^ An identifer for a specific appoval, to allow the
        --   approval to be identified and tracked.
    portfolioReferenceBase_model : Optional ConsentGranted_PortfolioReferenceBase_model
    eventsOrInfo_model : Optional ConsentGranted_EventsOrInfo_model
    creditLimitInformation : [CreditLimitInformation]
    partiesAndAccounts_model : Optional ConsentGranted_PartiesAndAccounts_model
      deriving (Eq, Ord, Show)

-- | A variant type used inside ConsentGranted
data ConsentGranted_EventsOrInfo_model
    = ConsentGranted_EventsOrInfo_model_TradePackage TradePackage
    | ConsentGranted_EventsOrInfo_model_Items1 ConsentGranted_items
    | ConsentGranted_EventsOrInfo_model_Amendment TradeAmendmentContent
    | ConsentGranted_EventsOrInfo_model_Increase TradeNotionalChange
    | ConsentGranted_EventsOrInfo_model_Items2 ConsentGranted_items_2
    | ConsentGranted_EventsOrInfo_model_Novation TradeNovationContent
    | ConsentGranted_EventsOrInfo_model_Withdrawal Withdrawal
    | ConsentGranted_EventsOrInfo_model_AdditionalEvent AdditionalEvent
      -- ^ The additionalEvent element is an
      --   extension/substitution point to customize FpML and
      --   add additional events.
    | ConsentGranted_EventsOrInfo_model_TradeReferenceInformation TradeReferenceInformation
      -- ^ Information about a trade.
    deriving (Eq, Ord, Show)

-- | A record type used inside ConsentGranted
data ConsentGranted_OnBehalfOf_model = ConsentGranted_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside ConsentGranted
data ConsentGranted_PartiesAndAccounts_model = ConsentGranted_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A record type used inside ConsentGranted
data ConsentGranted_PortfolioReferenceBase_model = ConsentGranted_PortfolioReferenceBase_model with
    portfolioReference : PortfolioReferenceBase
      deriving (Eq, Ord, Show)

-- | A record type used inside ConsentGranted
data ConsentGranted_Sequence_model = ConsentGranted_Sequence_model with
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside ConsentGranted
data ConsentGranted_items = ConsentGranted_items with
    originatingEvent : Optional OriginatingEvent
    trade : Trade
      deriving (Eq, Ord, Show)

-- | A record type used inside ConsentGranted
data ConsentGranted_items_2 = ConsentGranted_items_2 with
    terminatingEvent : Optional TerminatingEvent
        -- ^ This may be used to describe why a trade was
        --   terminated.
    termination : TradeNotionalChange
      deriving (Eq, Ord, Show)

-- | A message indicating that the sender does not grant
--   consent for the recipient to perform the requested
--   action.
data ConsentRefused = ConsentRefused with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : ResponseMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequence_model : Optional ConsentRefused_Sequence_model
    onBehalfOf_model : Optional ConsentRefused_OnBehalfOf_model
    type_ : Optional ApprovalType
        -- ^ The type of approval (e.g. "pre-clearing credit").
    approver : Optional PersonId
        -- ^ The full name or identifiying ID of the relevant
        --   approver.
    approvingPartyReference : Optional PartyReference
        -- ^ A pointer style reference to a party defined
        --   elsewhere in the document. The party referenced needs
        --   to approve the specified item (e.g. trade or
        --   allocation).
    portfolioReferenceBase_model : Optional ConsentRefused_PortfolioReferenceBase_model
    eventsOrInfo_model : Optional ConsentRefused_EventsOrInfo_model
    creditLimitInformation : [CreditLimitInformation]
    partiesAndAccounts_model : Optional ConsentRefused_PartiesAndAccounts_model
    reason : [Reason]
      deriving (Eq, Ord, Show)

-- | A variant type used inside ConsentRefused
data ConsentRefused_EventsOrInfo_model
    = ConsentRefused_EventsOrInfo_model_TradePackage TradePackage
    | ConsentRefused_EventsOrInfo_model_Items1 ConsentRefused_items
    | ConsentRefused_EventsOrInfo_model_Amendment TradeAmendmentContent
    | ConsentRefused_EventsOrInfo_model_Increase TradeNotionalChange
    | ConsentRefused_EventsOrInfo_model_Items2 ConsentRefused_items_2
    | ConsentRefused_EventsOrInfo_model_Novation TradeNovationContent
    | ConsentRefused_EventsOrInfo_model_Withdrawal Withdrawal
    | ConsentRefused_EventsOrInfo_model_AdditionalEvent AdditionalEvent
      -- ^ The additionalEvent element is an
      --   extension/substitution point to customize FpML and
      --   add additional events.
    | ConsentRefused_EventsOrInfo_model_TradeReferenceInformation TradeReferenceInformation
      -- ^ Information about a trade.
    deriving (Eq, Ord, Show)

-- | A record type used inside ConsentRefused
data ConsentRefused_OnBehalfOf_model = ConsentRefused_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside ConsentRefused
data ConsentRefused_PartiesAndAccounts_model = ConsentRefused_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A record type used inside ConsentRefused
data ConsentRefused_PortfolioReferenceBase_model = ConsentRefused_PortfolioReferenceBase_model with
    portfolioReference : PortfolioReferenceBase
      deriving (Eq, Ord, Show)

-- | A record type used inside ConsentRefused
data ConsentRefused_Sequence_model = ConsentRefused_Sequence_model with
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside ConsentRefused
data ConsentRefused_items = ConsentRefused_items with
    originatingEvent : Optional OriginatingEvent
    trade : Trade
      deriving (Eq, Ord, Show)

-- | A record type used inside ConsentRefused
data ConsentRefused_items_2 = ConsentRefused_items_2 with
    terminatingEvent : Optional TerminatingEvent
        -- ^ This may be used to describe why a trade was
        --   terminated.
    termination : TradeNotionalChange
      deriving (Eq, Ord, Show)

-- | A type describing the weight of each of the underlyer
--   constituent within the basket, either in absolute or
--   relative terms.
data ConstituentWeight = ConstituentWeight with
    openUnits : Optional Decimal
        -- ^ The number of units (index or securities) that
        --   constitute the underlyer of the swap. In the case of
        --   a basket swap, this element is used to reference both
        --   the number of basket units, and the number of each
        --   asset components of the basket when these are
        --   expressed in absolute terms.
    basketPercentage : Optional RestrictedPercentage
        -- ^ The relative weight of each respective basket
        --   constituent, expressed in percentage. A basket
        --   percentage of 5% would be represented as 0.05.
    basketAmount : Optional Money
        -- ^ DEPRECATED. The relative weight of each respective
        --   basket constituent, expressed as a monetary amount.
      deriving (Eq, Ord, Show)

-- | A type that represents how to contact an individual
--   or organization.
data ContactInformation = ContactInformation with
    telephone : [TelephoneNumber]
        -- ^ A telephonic contact.
    email : [NormalizedString]
        -- ^ An address on an electronic mail or messaging sysem .
    address : Optional Address
        -- ^ A postal or street address.
      deriving (Eq, Ord, Show)

-- | A type defining a contract identifier issued by the
--   indicated party.
data ContractIdentifier = ContractIdentifier with
    id_ : Optional Text
    partyReference : PartyReference
        -- ^ A pointer style reference to a party identifier
        --   defined elsewhere in the document. The party
        --   referenced has allocated the contract identifier.
    choice_ : ContractIdentifier_choice
        -- ^ Where the legal activity is to agree a contract of
        --   variation then the business process should be to
        --   modify a contract. This is a contract in its own
        --   right and not a version of a previous contract. Where
        --   the business process is to replace and supersede a
        --   contract then you have a new contract and a contract
        --   version should not be used.
      deriving (Eq, Ord, Show)

-- | A variant type used inside ContractIdentifier
data ContractIdentifier_choice
    = ContractIdentifier_choice_ContractId [FpmlContractId]
      -- ^ A contract id which is not version aware.
    | ContractIdentifier_choice_VersionedContractId [VersionedContractId]
      -- ^ A contract id which is version aware.
    deriving (Eq, Ord, Show)

-- | The definitions, such as those published by ISDA,
--   that will define the terms of the trade.
data ContractualDefinitions = ContractualDefinitions with
    contractualDefinitionsScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data ContractualMatrix = ContractualMatrix with
    matrixType : MatrixType
        -- ^ Identifies the form of applicable matrix.
    publicationDate : Optional Date
        -- ^ Specifies the publication date of the applicable
        --   version of the matrix. When this element is omitted,
        --   the ISDA supplemental language for incorporation of
        --   the relevant matrix will generally define rules for
        --   which version of the matrix is applicable.
    matrixTerm : Optional MatrixTerm
        -- ^ Defines any applicable key into the relevant matrix.
        --   For example, the Transaction Type would be the single
        --   term required for the Credit Derivatives Physical
        --   Settlement Matrix. This element should be omitted in
        --   the case of the 2000 ISDA Definitions Settlement
        --   Matrix for Early Termination and Swaptions.
      deriving (Eq, Ord, Show)

-- | A contractual supplement (such as those published by
--   ISDA) that will apply to the trade.
data ContractualSupplement = ContractualSupplement with
    contractualSupplementScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A contractual supplement (such as those published by
--   ISDA) and its publication date that will apply to the
--   trade.
data ContractualTermsSupplement = ContractualTermsSupplement with
    type_ : ContractualSupplement
        -- ^ Identifies the form of applicable contractual
        --   supplement.
    publicationDate : Optional Date
        -- ^ Specifies the publication date of the applicable
        --   version of the contractual supplement.
      deriving (Eq, Ord, Show)

data ConvertibleBond = ConvertibleBond with
    id_ : Optional Text
    instrumentId : [InstrumentId]
        -- ^ Identification of the underlying asset, using public
        --   and/or private identifiers.
    description : Optional String
        -- ^ Long name of the underlying asset.
    currency : Optional IdentifiedCurrency
        -- ^ Trading currency of the underlyer when transacted as
        --   a cash instrument.
    exchangeId : Optional ExchangeId
        -- ^ Identification of the exchange on which this asset is
        --   transacted for the purposes of calculating a
        --   contractural payoff. The term "Exchange" is assumed
        --   to have the meaning as defined in the ISDA 2002
        --   Equity Derivatives Definitions.
    clearanceSystem : Optional ClearanceSystem
        -- ^ Identification of the clearance system associated
        --   with the transaction exchange.
    definition : Optional ProductReference
        -- ^ An optional reference to a full FpML product that
        --   defines the simple product in greater detail. In case
        --   of inconsistency between the terms of the simple
        --   product and those of the detailed definition, the
        --   values in the simple product override those in the
        --   detailed definition.
    choice_ : Optional ConvertibleBond_choice
        -- ^ Specifies the issuer name of a fixed income security
        --   or convertible bond. This name can either be
        --   explicitly stated, or specified as an href into
        --   another element of the document, such as the obligor.
    seniority : Optional CreditSeniority
        -- ^ The repayment precedence of a debt instrument.
    couponType : Optional CouponType
        -- ^ Specifies if the bond has a variable coupon,
        --   step-up/down coupon or a zero-coupon.
    couponRate : Optional Decimal
        -- ^ Specifies the coupon rate (expressed in percentage)
        --   of a fixed income security or convertible bond.
    maturity : Optional Date
        -- ^ The date when the principal amount of a security
        --   becomes due and payable.
    parValue : Optional Decimal
        -- ^ Specifies the nominal amount of a fixed income
        --   security or convertible bond.
    faceAmount : Optional Decimal
        -- ^ Specifies the total amount of the issue. Corresponds
        --   to the par value multiplied by the number of issued
        --   security.
    paymentFrequency : Optional Period
        -- ^ Specifies the frequency at which the bond pays, e.g.
        --   6M.
    dayCountFraction : Optional DayCountFraction
        -- ^ The day count basis for the bond.
    underlyingEquity : Optional EquityAsset
        -- ^ Specifies the equity in which the convertible bond
        --   can be converted.
    redemptionDate : Optional Date
        -- ^ Earlier date between the convertible bond put dates
        --   and its maturity date.
      deriving (Eq, Ord, Show)

-- | A variant type used inside ConvertibleBond
data ConvertibleBond_choice
    = ConvertibleBond_choice_IssuerName String
    | ConvertibleBond_choice_IssuerPartyReference PartyReference
    deriving (Eq, Ord, Show)

-- | A structure indicating that a trade has changed due
--   to a corporate action
data CorporateActionEvent = CorporateActionEvent with
    eventIdentifier : [BusinessEventIdentifier]
    type_ : Optional CorporateActionType
      deriving (Eq, Ord, Show)

-- | A type that describes what type of corporate action
--   occurred.
data CorporateActionType = CorporateActionType with
    corporateActionScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type defining the content model for a request
--   message that can be subsequently corrected or
--   retracted.
data CorrectableRequestMessage = CorrectableRequestMessage with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    isCorrection : Bool
        -- ^ Indicates if this message corrects an earlier
        --   request.
    correlationAndSequence_model : Optional CorrectableRequestMessage_CorrelationAndSequence_model
    onBehalfOf_model : Optional CorrectableRequestMessage_OnBehalfOf_model
      deriving (Eq, Ord, Show)

-- | A record type used inside CorrectableRequestMessage
data CorrectableRequestMessage_CorrelationAndSequence_model = CorrectableRequestMessage_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside CorrectableRequestMessage
data CorrectableRequestMessage_OnBehalfOf_model = CorrectableRequestMessage_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A type defining a correlation identifier and
--   qualifying scheme
data CorrelationId = CorrelationId with
    correlationIdScheme : NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

-- | A type defining a number specified as a decimal
--   between -1 and 1 inclusive.
type CorrelationValue = Decimal

-- | A type that describes the information to identify a
--   correspondent bank that will make delivery of the
--   funds on the paying bank's behalf in the country
--   where the payment is to be made.
data CorrespondentInformation = CorrespondentInformation with
    choice_ : CorrespondentInformation_choice
    correspondentPartyReference : Optional PartyReference
        -- ^ Link to the party acting as correspondent. This
        --   element can only appear within the
        --   correspondentInformation container element.
      deriving (Eq, Ord, Show)

-- | A variant type used inside CorrespondentInformation
data CorrespondentInformation_choice
    = CorrespondentInformation_choice_RoutingIds RoutingIds
      -- ^ A set of unique identifiers for a party, eachone
      --   identifying the party within a payment system. The
      --   assumption is that each party will not have more than
      --   one identifier within the same payment system.
    | CorrespondentInformation_choice_RoutingExplicitDetails RoutingExplicitDetails
      -- ^ A set of details that is used to identify a party
      --   involved in the routing of a payment when the party
      --   does not have a code that identifies it within one of
      --   the recognized payment systems.
    | CorrespondentInformation_choice_RoutingIdsAndExplicitDetails RoutingIdsAndExplicitDetails
      -- ^ A combination of coded payment system identifiers and
      --   details for physical addressing for a party involved
      --   in the routing of a payment.
    deriving (Eq, Ord, Show)

-- | The code representation of a country or an area of
--   special sovereignty. By default it is a valid 2
--   character country code as defined by the ISO standard
--   3166-1 alpha-2 - Codes for representation of
--   countries
--   http://www.niso.org/standards/resources/3166.html.
data CountryCode = CountryCode with
    countryScheme : Optional NonEmptyURI
    content : Token
      deriving (Eq, Ord, Show)

-- | Defines a scheme of values for specifiying if the
--   bond has a variable coupon, step-up/down coupon or a
--   zero-coupon.
data CouponType = CouponType with
    couponTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data CreditDerivativesNotices = CreditDerivativesNotices with
    creditEvent : Bool
        -- ^ This element corresponds to the Credit Event Notice
        --   Delivered Under Old Transaction and Deemed Delivered
        --   Under New Transaction under the EXHIBIT C to 2004
        --   ISDA Novation Definitions.
    publiclyAvailableInformation : Bool
        -- ^ This element corresponds to the Notice of Publicly
        --   Available Information Delivered Under Old Transaction
        --   and Deemed Delivered Under New Transaction under the
        --   EXHIBIT C to 2004 ISDA Novation Definitions.
    physicalSettlement : Bool
        -- ^ This element corresponds to the Notice of Intended
        --   Physical Settlement Delivered Under Old Transaction
        --   under the EXHIBIT C to 2004 ISDA Novation
        --   Definitions.
      deriving (Eq, Ord, Show)

-- | A credit arrangement used in support of swaps
--   trading.
data CreditDocument = CreditDocument with
    creditDocumentScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data CreditEventNotice = CreditEventNotice with
    notifyingParty : NotifyingParty
        -- ^ Pointer style references to a party identifier
        --   defined elsewhere in the document. The notifying
        --   party is the party that notifies the other party when
        --   a credit event has occurred by means of a credit
        --   event notice. If more than one party is referenced as
        --   being the notifying party then either party may
        --   notify the other of a credit event occurring. ISDA
        --   2003 Term: Notifying Party.
    businessCenter : Optional BusinessCenter
        -- ^ Inclusion of this business center element implies
        --   that Greenwich Mean Time in Section 3.3 of the 2003
        --   ISDA Credit Derivatives Definitions is replaced by
        --   the local time of the city indicated by the
        --   businessCenter element value.
    publiclyAvailableInformation : Optional PubliclyAvailableInformation
        -- ^ A specified condition to settlement. Publicly
        --   available information means information that
        --   reasonably confirms any of the facts relevant to
        --   determining that a credit event or potential
        --   repudiation/moratorium, as applicable, has occurred.
        --   The ISDA defined list (2003) is the market standard
        --   and is considered comprehensive, and a minimum of two
        --   differing public sources must have published the
        --   relevant information, to declare a Credit Event. ISDA
        --   2003 Term: Notice of Publicly Available Information
        --   Applicable.
      deriving (Eq, Ord, Show)

data CreditEvents = CreditEvents with
    id_ : Optional Text
    bankruptcy : Optional Bool
        -- ^ A credit event. The reference entity has been
        --   dissolved or has become insolvent. It also covers
        --   events that may be a precursor to insolvency such as
        --   instigation of bankruptcy or insolvency proceedings.
        --   Sovereign trades are not subject to Bankruptcy as
        --   "technically" a Sovereign cannot become bankrupt.
        --   ISDA 2003 Term: Bankruptcy.
    failureToPay : Optional FailureToPay
        -- ^ A credit event. This credit event triggers, after the
        --   expiration of any applicable grace period, if the
        --   reference entity fails to make due payments in an
        --   aggregrate amount of not less than the payment
        --   requirement on one or more obligations (e.g. a missed
        --   coupon payment). ISDA 2003 Term: Failure to Pay.
    failureToPayPrincipal : Optional Bool
        -- ^ A credit event. Corresponds to the failure by the
        --   Reference Entity to pay an expected principal amount
        --   or the payment of an actual principal amount that is
        --   less than the expected principal amount. ISDA 2003
        --   Term: Failure to Pay Principal.
    failureToPayInterest : Optional Bool
        -- ^ A credit event. Corresponds to the failure by the
        --   Reference Entity to pay an expected interest amount
        --   or the payment of an actual interest amount that is
        --   less than the expected interest amount. ISDA 2003
        --   Term: Failure to Pay Interest.
    obligationDefault : Optional Bool
        -- ^ A credit event. One or more of the obligations have
        --   become capable of being declared due and payable
        --   before they would otherwise have been due and payable
        --   as a result of, or on the basis of, the occurrence of
        --   a default, event of default or other similar
        --   condition or event other than failure to pay. ISDA
        --   2003 Term: Obligation Default.
    obligationAcceleration : Optional Bool
        -- ^ A credit event. One or more of the obligations have
        --   been declared due and payable before they would
        --   otherwise have been due and payable as a result of,
        --   or on the basis of, the occurrence of a default,
        --   event of default or other similar condition or event
        --   other than failure to pay (preferred by the market
        --   over Obligation Default, because more definitive and
        --   encompasses the definition of Obligation Default -
        --   this is more favorable to the Seller). Subject to the
        --   default requirement amount. ISDA 2003 Term:
        --   Obligation Acceleration.
    repudiationMoratorium : Optional Bool
        -- ^ A credit event. The reference entity, or a
        --   governmental authority, either refuses to recognise
        --   or challenges the validity of one or more obligations
        --   of the reference entity, or imposes a moratorium
        --   thereby postponing payments on one or more of the
        --   obligations of the reference entity. Subject to the
        --   default requirement amount. ISDA 2003 Term:
        --   Repudiation/Moratorium.
    restructuring : Optional Restructuring
        -- ^ A credit event. A restructuring is an event that
        --   materially impacts the reference entity's
        --   obligations, such as an interest rate reduction,
        --   principal reduction, deferral of interest or
        --   principal, change in priority ranking, or change in
        --   currency or composition of payment. ISDA 2003 Term:
        --   Restructuring.
    governmentalIntervention : Optional Bool
        -- ^ A credit event. A governmental intervention is an
        --   event resulting from an action by a governmental
        --   authority that materially impacts the reference
        --   entity's obligations, such as an interest rate
        --   reduction, principal reduction, deferral of interest
        --   or principal, change in priority ranking, or change
        --   in currency or composition of payment. ISDA 2014
        --   Term: Governmental Intervention.
    distressedRatingsDowngrade : Optional Bool
        -- ^ A credit event. Results from the fact that the rating
        --   of the reference obligation is downgraded to a
        --   distressed rating level. From a usage standpoint,
        --   this credit event is typically not applicable in case
        --   of RMBS trades.
    maturityExtension : Optional Bool
        -- ^ A credit event. Results from the fact that the
        --   underlier fails to make principal payments as
        --   expected.
    writedown : Optional Bool
        -- ^ A credit event. Results from the fact that the
        --   underlier writes down its outstanding principal
        --   amount.
    impliedWritedown : Optional Bool
        -- ^ A credit event. Results from the fact that losses
        --   occur to the underlying instruments that do not
        --   result in reductions of the outstanding principal of
        --   the reference obligation.
    defaultRequirement : Optional Money
        -- ^ In relation to certain credit events, serves as a
        --   threshold for Obligation Acceleration, Obligation
        --   Default, Repudiation/Moratorium and Restructuring.
        --   Market standard is USD 10,000,000 (JPY 1,000,000,000
        --   for all Japanese Yen trades). This is applied on an
        --   aggregate or total basis across all Obligations of
        --   the Reference Entity. Used to prevent
        --   technical/operational errors from triggering credit
        --   events. ISDA 2003 Term: Default Requirement.
    creditEventNotice : Optional CreditEventNotice
        -- ^ A specified condition to settlement. An irrevocable
        --   written or verbal notice that describes a credit
        --   event that has occurred. The notice is sent from the
        --   notifying party (either the buyer or the seller) to
        --   the counterparty. It provides information relevant to
        --   determining that a credit event has occurred. This is
        --   typically accompanied by Publicly Available
        --   Information. ISDA 2003 Term: Credit Event Notice.
      deriving (Eq, Ord, Show)

-- | Reference to credit events.
data CreditEventsReference = CreditEventsReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | A structure describing a credit limit with
--   applicability constraints.
data CreditLimit = CreditLimit with
    limitId : LimitId
    primaryAssetClass : Optional AssetClass
        -- ^ A classification of the most important risk class of
        --   the trade. FpML defines a simple asset class
        --   categorization using a coding scheme.
    secondaryAssetClass : [AssetClass]
        -- ^ A classification of additional risk classes of the
        --   trade, if any. FpML defines a simple asset class
        --   categorization using a coding scheme.
    productType : [ProductType]
        -- ^ A classification of the type of product. FpML defines
        --   a simple product categorization using a coding
        --   scheme.
    productId : [ProductId]
        -- ^ A product reference identifier. The product ID is an
        --   identifier that describes the key economic
        --   characteristics of the trade type, with the exception
        --   of concepts such as size (notional, quantity, number
        --   of units) and price (fixed rate, strike, etc.) that
        --   are negotiated for each transaction. It can be used
        --   to hold identifiers such as the "UPI" (universal
        --   product identifier) required by certain regulatory
        --   reporting rules. It can also be used to hold
        --   identifiers of benchmark products or product
        --   temnplates used by certain trading systems or
        --   facilities. FpML does not define the domain values
        --   associated with this element. Note that the domain
        --   values for this element are not strictly an
        --   enumerated list.
    assetClass : [AssetClass]
        -- ^ A classification of the risk class of the trade. FpML
        --   defines a simple asset class categorization using a
        --   coding scheme.
    currency : Currency
    tenor : Period
        -- ^ The maximum allowed tenor for a trade under this
        --   limit. When this structure is used as part of a
        --   suspendCredit message, this tenor imposes a temporary
        --   tenor limit on allowed trade types.
    limitApplicable : [LimitApplicable]
    expirationDate : Optional Time
      deriving (Eq, Ord, Show)

-- | A structure describing a basic credit limit.
data CreditLimitBase = CreditLimitBase with
    limitId : LimitId
    primaryAssetClass : Optional AssetClass
        -- ^ A classification of the most important risk class of
        --   the trade. FpML defines a simple asset class
        --   categorization using a coding scheme.
    secondaryAssetClass : [AssetClass]
        -- ^ A classification of additional risk classes of the
        --   trade, if any. FpML defines a simple asset class
        --   categorization using a coding scheme.
    productType : [ProductType]
        -- ^ A classification of the type of product. FpML defines
        --   a simple product categorization using a coding
        --   scheme.
    productId : [ProductId]
        -- ^ A product reference identifier. The product ID is an
        --   identifier that describes the key economic
        --   characteristics of the trade type, with the exception
        --   of concepts such as size (notional, quantity, number
        --   of units) and price (fixed rate, strike, etc.) that
        --   are negotiated for each transaction. It can be used
        --   to hold identifiers such as the "UPI" (universal
        --   product identifier) required by certain regulatory
        --   reporting rules. It can also be used to hold
        --   identifiers of benchmark products or product
        --   temnplates used by certain trading systems or
        --   facilities. FpML does not define the domain values
        --   associated with this element. Note that the domain
        --   values for this element are not strictly an
        --   enumerated list.
    assetClass : [AssetClass]
        -- ^ A classification of the risk class of the trade. FpML
        --   defines a simple asset class categorization using a
        --   coding scheme.
    currency : Currency
    tenor : Period
        -- ^ The maximum allowed tenor for a trade under this
        --   limit. When this structure is used as part of a
        --   suspendCredit message, this tenor imposes a temporary
        --   tenor limit on allowed trade types.
      deriving (Eq, Ord, Show)

data CreditLimitInformation = CreditLimitInformation with
    partyInformation : PartyTradeInformation
    limitModel : LimitModelEnum
    creditLimit : [CreditLimit]
      deriving (Eq, Ord, Show)

data CreditLimitUtilization = CreditLimitUtilization with
    executed : CreditLimitUtilizationPosition
        -- ^ Credit limit utilization attributable to executed
        --   trades.
    pending : CreditLimitUtilizationPosition
        -- ^ Credit limit utilization attributable to pending
        --   unexecuted orders.
      deriving (Eq, Ord, Show)

data CreditLimitUtilizationPosition
    = CreditLimitUtilizationPosition_Items CreditLimitUtilizationPosition_items
    | CreditLimitUtilizationPosition_Global NonNegativeDecimal
      -- ^ Global credit limit utilization amount, agnostic of
      --   long/short position direction.
    deriving (Eq, Ord, Show)

-- | A record type used inside
--   CreditLimitUtilizationPosition
data CreditLimitUtilizationPosition_items = CreditLimitUtilizationPosition_items with
    short : NonNegativeDecimal
        -- ^ Credit limit utilization attributable to short
        --   positions.
    long : NonNegativeDecimal
        -- ^ Credit limit utilization attributable to long
        --   positions.
    global : Optional NonNegativeDecimal
        -- ^ Global credit limit utilization amount, agnostic of
        --   long/short position direction.
      deriving (Eq, Ord, Show)

-- | A party's credit rating.
data CreditRating = CreditRating with
    creditRatingScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The repayment precedence of a debt instrument.
data CreditSeniority = CreditSeniority with
    creditSeniorityScheme : Optional NonEmptyURI
        -- ^ creditSeniorityTradingScheme overrides
        --   creditSeniorityScheme when the underlyer defines the
        --   reference obligation used in a single name credit
        --   default swap trade.
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The agreement executed between the parties and
--   intended to govern collateral arrangement for all OTC
--   derivatives transactions between those parties.
data CreditSupportAgreement = CreditSupportAgreement with
    type_ : CreditSupportAgreementType
        -- ^ The type of ISDA Credit Support Agreement
    date_ : Date
        -- ^ The date of the agreement executed between the
        --   parties and intended to govern collateral
        --   arrangements for all OTC derivatives transactions
        --   between those parties.
    identifier : Optional CreditSupportAgreementIdentifier
        -- ^ An identifier used to uniquely identify the CSA
      deriving (Eq, Ord, Show)

data CreditSupportAgreementIdentifier = CreditSupportAgreementIdentifier with
    creditSupportAgreementIdScheme : Optional NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

data CreditSupportAgreementType = CreditSupportAgreementType with
    creditSupportAgreementTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type that is used for including the currency
--   exchange rates used to cross between the traded
--   currencies for non-base currency FX contracts.
data CrossRate = CrossRate with
    currency1 : Currency
        -- ^ The first currency specified when a pair of
        --   currencies is to be evaluated.
    currency2 : Currency
        -- ^ The second currency specified when a pair of
        --   currencies is to be evaluated.
    quoteBasis : QuoteBasisEnum
        -- ^ The method by which the exchange rate is quoted.
    rate : PositiveDecimal
        -- ^ The exchange rate used to cross between the traded
        --   currencies.
    sequence_ : Optional CrossRate_sequence
      deriving (Eq, Ord, Show)

-- | A record type used inside CrossRate
data CrossRate_sequence = CrossRate_sequence with
    spotRate : PositiveDecimal
        -- ^ An optional element used for FX forwards and certain
        --   types of FX OTC options. For deals consumated in the
        --   FX Forwards Market, this represents the current
        --   market rate for a particular currency pair.
    forwardPoints : Optional Decimal
        -- ^ An optional element used for deals consumated in the
        --   FX Forwards market. Forward points represent the
        --   interest rate differential between the two currencies
        --   traded and are quoted as a preminum or a discount.
        --   Forward points are added to, or subtracted from, the
        --   spot rate to create the rate of the forward trade.
      deriving (Eq, Ord, Show)

-- | The code representation of a currency or fund. By
--   default it is a valid currency code as defined by the
--   ISO standard 4217 - Codes for representation of
--   currencies and funds
--   http://www.iso.org/iso/en/prods-services/popstds/currencycodeslist.html.
data Currency = Currency with
    currencyScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type containing a code representing the risk
--   classification of a currency pair, as specified by a
--   regulator.
data CurrencyPairClassification = CurrencyPairClassification with
    currencyPairClassificationScheme : Optional NonEmptyURI
    id_ : Optional Text
    content : Scheme
      deriving (Eq, Ord, Show)

-- | Allows for an option expiry cut time to be described
--   by name, as per established market convention. Note:
--   the FX Working Group has resolved not to extend the
--   cutNameScheme coding scheme. The expiryTime element
--   should be used in preference to cutName as the formal
--   definition of FX option expiry time.
data CutName = CutName with
    cutNameScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type defining a content model that is backwards
--   compatible with older FpML releases and which can be
--   used to contain sets of data without expressing any
--   processing intention.
data DataDocument = DataDocument with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    onBehalfOf : Optional OnBehalfOf
        -- ^ Indicates which party (and accounts) a trade is being
        --   processed for.
    originatingEvent : Optional OriginatingEvent
    trade : [Trade]
        -- ^ The root element in an FpML trade document.
    portfolio : [Portfolio]
        -- ^ An arbitary grouping of trade references (and
        --   possibly other portfolios).
    partiesAndAccounts_model : Optional DataDocument_PartiesAndAccounts_model
      deriving (Eq, Ord, Show)

-- | A record type used inside DataDocument
data DataDocument_PartiesAndAccounts_model = DataDocument_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | Specify as applicable. Parties may wish to refer to
--   the state meteorological authority in a particular
--   location or to an exchange or other third party data
--   provider. Parties may find the definitions in the
--   Commodity Definitions useful as a means of
--   identifying potential Data Providers.
data DataProvider = DataProvider with
    weatherDataProviderScheme : Optional NonEmptyURI
    id_ : Optional Text
    content : Scheme
      deriving (Eq, Ord, Show)

-- | List of Dates
data DateList = DateList with
    date_ : [Date]
      deriving (Eq, Ord, Show)

-- | A type defining an offset used in calculating a date
--   when this date is defined in reference to another
--   date through a date offset. The type includes the
--   convention for adjusting the date and an optional
--   sequence element to indicate the order in a sequence
--   of multiple date offsets.
data DateOffset = DateOffset with
    id_ : Optional Text
    periodMultiplier : Int
        -- ^ A time period multiplier, e.g. 1, 2 or 3 etc. A
        --   negative value can be used when specifying an offset
        --   relative to another date, e.g. -2 days.
    period : PeriodEnum
        -- ^ A time period, e.g. a day, week, month or year of the
        --   stream. If the periodMultiplier value is 0 (zero)
        --   then period must contain the value D (day).
    dayType : Optional DayTypeEnum
        -- ^ In the case of an offset specified as a number of
        --   days, this element defines whether consideration is
        --   given as to whether a day is a good business day or
        --   not. If a day type of business days is specified then
        --   non-business days are ignored when calculating the
        --   offset. The financial business centers to use for
        --   determination of business days are implied by the
        --   context in which this element is used. This element
        --   must only be included when the offset is specified as
        --   a number of days. If the offset is zero days then the
        --   dayType element should not be included.
    businessDayConvention : BusinessDayConventionEnum
        -- ^ The convention for adjusting a date if it would
        --   otherwise fall on a day that is not a business day.
      deriving (Eq, Ord, Show)

-- | A type defining a contiguous series of calendar
--   dates. The date range is defined as all the dates
--   between and including the first and the last date.
--   The first date must fall before the last date.
data DateRange = DateRange with
    unadjustedFirstDate : Date
        -- ^ The first date of a date range.
    unadjustedLastDate : Date
        -- ^ The last date of a date range.
      deriving (Eq, Ord, Show)

-- | Reference to an identified date or a complex date
--   structure.
data DateReference = DateReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | List of DateTimes
data DateTimeList = DateTimeList with
    dateTime : [Time]
      deriving (Eq, Ord, Show)

-- | The specification for how the number of days between
--   two dates is calculated for purposes of calculation
--   of a fixed or floating payment amount and the basis
--   for how many days are assumed to be in a year. Day
--   Count Fraction is an ISDA term. The equivalent AFB
--   (Association Francaise de Banques) term is
--   Calculation Basis.
data DayCountFraction = DayCountFraction with
    dayCountFractionScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A day of the seven-day week.
data DayOfWeekEnum
    = DayOfWeekEnum_MON ()
      -- ^ Monday
    | DayOfWeekEnum_TUE ()
      -- ^ Tuesday
    | DayOfWeekEnum_WED ()
      -- ^ Wednesday
    | DayOfWeekEnum_THU ()
      -- ^ Thursday
    | DayOfWeekEnum_FRI ()
      -- ^ Friday
    | DayOfWeekEnum_SAT ()
      -- ^ Saturday
    | DayOfWeekEnum_SUN ()
      -- ^ Sunday
    deriving (Eq, Ord, Show)

-- | A day of the seven-day week, plus codes for weekends
--   and weekdays.
data DayOfWeekExtEnum
    = DayOfWeekExtEnum_MON ()
      -- ^ Monday
    | DayOfWeekExtEnum_TUE ()
      -- ^ Tuesday
    | DayOfWeekExtEnum_WED ()
      -- ^ Wednesday
    | DayOfWeekExtEnum_THU ()
      -- ^ Thursday
    | DayOfWeekExtEnum_FRI ()
      -- ^ Friday
    | DayOfWeekExtEnum_SAT ()
      -- ^ Saturday
    | DayOfWeekExtEnum_SUN ()
      -- ^ Sunday
    | DayOfWeekExtEnum_WD ()
      -- ^ Weekdays
    | DayOfWeekExtEnum_WN ()
      -- ^ Weekends
    deriving (Eq, Ord, Show)

-- | A day type classification used in counting the number
--   of days between two dates.
data DayTypeEnum
    = DayTypeEnum_Business ()
      -- ^ When calculating the number of days between two dates
      --   the count includes only business days.
    | DayTypeEnum_Calendar ()
      -- ^ When calculating the number of days between two dates
      --   the count includes all calendar days.
    | DayTypeEnum_CommodityBusiness ()
      -- ^ When calculating the number of days between two dates
      --   the count includes only commodity business days.
    | DayTypeEnum_CurrencyBusiness ()
      -- ^ When calculating the number of days between two dates
      --   the count includes only currency business days.
    | DayTypeEnum_ExchangeBusiness ()
      -- ^ When calculating the number of days between two dates
      --   the count includes only stock exchange business days.
    | DayTypeEnum_ScheduledTradingDay ()
      -- ^ When calculating the number of days between two dates
      --   the count includes only scheduled trading days.
    deriving (Eq, Ord, Show)

-- | A structure describing a declear event. The deClear
--   event allows a firm to request that a trade be
--   removed from clearing, or a clearing service to
--   request consent for this, or to report that is has
--   been done.
data DeClear = DeClear with
    tradeIdentifier : [PartyTradeIdentifier]
    effectiveDate : Date
    reason : Optional DeclearReason
      deriving (Eq, Ord, Show)

data DealtCurrencyEnum
    = DealtCurrencyEnum_ExchangedCurrency1 ()
    | DealtCurrencyEnum_ExchangedCurrency2 ()
    deriving (Eq, Ord, Show)

-- | A type that describes why a trade was removed from
--   clearing.
data DeclearReason = DeclearReason with
    declearReasonScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | Deprecated: In respect of a Transaction and a
--   Commodity Reference Price, the relevant date or month
--   for delivery of the underlying Commodity.
data DeliveryDatesEnum
    = DeliveryDatesEnum_CalculationPeriod ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the futures contract
      --   that corresponds to the month and year of the
      --   Calculation Period. e.g. The JAN 09 contract when
      --   pricing in January '09 (In the case of contracts like
      --   Brent crude, this will mean that the contract expired
      --   in DEC 08.)
    | DeliveryDatesEnum_FirstNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the First Nearby Month
      --   futures contract.
    | DeliveryDatesEnum_SecondNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the Second Nearby Month
      --   futures contract.
    | DeliveryDatesEnum_ThirdNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the Third Nearby Month
      --   futures contract.
    | DeliveryDatesEnum_FourthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the Fourth Nearby Month
      --   futures contract.
    | DeliveryDatesEnum_FifthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the Fifth Nearby Month
      --   futures contract.
    | DeliveryDatesEnum_SixthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the Sixth Nearby Month
      --   futures contract.
    | DeliveryDatesEnum_SeventhNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the Seventh Nearby
      --   Month futures contract.
    | DeliveryDatesEnum_EighthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the Eighth Nearby Month
      --   futures contract.
    | DeliveryDatesEnum_NinthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the Ninth Nearby Month
      --   futures contract.
    | DeliveryDatesEnum_TenthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the Tenth Nearby Month
      --   futures contract.
    | DeliveryDatesEnum_EleventhNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the Eleventh Nearby
      --   Month futures contract.
    | DeliveryDatesEnum_TwelfthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the Twelfth Nearby
      --   Month futures contract.
    | DeliveryDatesEnum_ThirteenthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the Thirteenth Nearby
      --   Month futures contract.
    | DeliveryDatesEnum_FourteenthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the Fourteenth Nearby
      --   Month futures contract.
    | DeliveryDatesEnum_FifteenthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the FifteenthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_SixteenthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the SixteenthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_SeventeenthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the SeventeenthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_EighteenthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the EighteenthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_NineteenthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the NineteenthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_TwentiethNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the TwentiethNearby
      --   Month futures contract.
    | DeliveryDatesEnum_TwentyFirstNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the TwentyFirstNearby
      --   Month futures contract.
    | DeliveryDatesEnum_TwentySecondNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the TwentySecondNearby
      --   Month futures contract.
    | DeliveryDatesEnum_TwentyThirdNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the TwentyThirdNearby
      --   Month futures contract.
    | DeliveryDatesEnum_TwentyFourthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the TwentyFourthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_TwentyFifthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the TwentyFifthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_TwentySixthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the TwentySixthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_TwentySeventhNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the TwentySeventhNearby
      --   Month futures contract.
    | DeliveryDatesEnum_TwentyEighthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the TwentyEighthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_TwentyNinthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the TwentyNinthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_ThirtiethNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the ThirtiethNearby
      --   Month futures contract.
    | DeliveryDatesEnum_ThirtyFirstNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the ThirtyFirstNearby
      --   Month futures contract.
    | DeliveryDatesEnum_ThirtySecondNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the ThirtySecondNearby
      --   Month futures contract.
    | DeliveryDatesEnum_ThirtyThirdNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the ThirtyThirdNearby
      --   Month futures contract.
    | DeliveryDatesEnum_ThirtyFourthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the ThirtyFourthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_ThirtyFifthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the ThirtyFifthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_ThirtySixthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the ThirtySixthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_ThirtySeventhNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the ThirtySeventhNearby
      --   Month futures contract.
    | DeliveryDatesEnum_ThirtyEighthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the ThirtyEighthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_ThirtyNinthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the ThirtyNinthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_FortiethNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the FortiethNearby
      --   Month futures contract.
    | DeliveryDatesEnum_FortyFirstNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the FortyFirstNearby
      --   Month futures contract.
    | DeliveryDatesEnum_FortySecondNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the FortySecondNearby
      --   Month futures contract.
    | DeliveryDatesEnum_FortyThirdNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the FortyThirdNearby
      --   Month futures contract.
    | DeliveryDatesEnum_FortyFourthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the FortyFourthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_FortyFifthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the FortyFifthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_FortySixthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the FortySixthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_FortySeventhNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the FortySeventhNearby
      --   Month futures contract.
    | DeliveryDatesEnum_FortyEighthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the FortyEighthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_FortyNinthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the FortyNinthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_FiftiethNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the FiftiethNearby
      --   Month futures contract.
    | DeliveryDatesEnum_FiftyFirstNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the FiftyFirstNearby
      --   Month futures contract.
    | DeliveryDatesEnum_FiftySecondNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the FiftySecondNearby
      --   Month futures contract.
    | DeliveryDatesEnum_FiftyThirdNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the FiftyThirdNearby
      --   Month futures contract.
    | DeliveryDatesEnum_FiftyFourthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the FiftyFourthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_FiftyFifthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the FiftyFifthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_FiftySixthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the FiftySixthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_FiftySeventhNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the FiftySeventhNearby
      --   Month futures contract.
    | DeliveryDatesEnum_FiftyEighthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the FiftyEighthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_FiftyNinthNearby ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the FiftyNinthNearby
      --   Month futures contract.
    | DeliveryDatesEnum_Spot ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the Spot date.
    | DeliveryDatesEnum_FirstNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the First Nearby Week.
    | DeliveryDatesEnum_SecondNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Second Nearby Week.
    | DeliveryDatesEnum_ThirdNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Third Nearby Week.
    | DeliveryDatesEnum_FourthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Fourth Nearby Week.
    | DeliveryDatesEnum_FifthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Fifth Nearby Week.
    | DeliveryDatesEnum_SixthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Sixth Nearby Week.
    | DeliveryDatesEnum_SeventhNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Seventh Nearby Week.
    | DeliveryDatesEnum_EighthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Eighth Nearby Week.
    | DeliveryDatesEnum_NinthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Ninth Nearby Week.
    | DeliveryDatesEnum_TenthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Tenth Nearby Week.
    | DeliveryDatesEnum_EleventhNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Eleventh Nearby Week.
    | DeliveryDatesEnum_TwelfthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Twelfth Nearby Week.
    | DeliveryDatesEnum_ThirteenthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Thirteenth Nearby Week.
    | DeliveryDatesEnum_FourteenthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Fourteenth Nearby Week.
    | DeliveryDatesEnum_FifteenthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Fifteenth Nearby Week.
    | DeliveryDatesEnum_SixteenthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Sixteenth Nearby Week.
    | DeliveryDatesEnum_SeventeenthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Seventeenth Nearby Week.
    | DeliveryDatesEnum_EighteenthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Eighteenth Nearby Week.
    | DeliveryDatesEnum_NineteenthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Nineteenth Nearby Week.
    | DeliveryDatesEnum_TwentiethNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Twentieth Nearby Week.
    | DeliveryDatesEnum_TwentyFirstNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Twenty First Nearby Week.
    | DeliveryDatesEnum_TwentySecondNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Twenty Second Nearby Week.
    | DeliveryDatesEnum_TwentyThirdNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Twenty Third Nearby Week.
    | DeliveryDatesEnum_TwentyFourthearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Twenty Fourth Nearby Week.
    | DeliveryDatesEnum_TwentyFifthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Twenty Fifth Nearby Week.
    | DeliveryDatesEnum_TwentySixthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Twenty Sixth Nearby Week.
    | DeliveryDatesEnum_TwentySeventhNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Twenty Seventh Nearby Week.
    | DeliveryDatesEnum_TwentyEighthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Twenty Eighth Nearby Week.
    | DeliveryDatesEnum_TwentyNinthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Twenty Ninth Nearby Week.
    | DeliveryDatesEnum_ThirtiethNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Thirtieth Nearby Week.
    | DeliveryDatesEnum_ThirtyFirstNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Thirty First Nearby Week.
    | DeliveryDatesEnum_ThirtySecondNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Thirty Second Nearby Week.
    | DeliveryDatesEnum_ThirtyThirdNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Thirty Third Nearby Week.
    | DeliveryDatesEnum_ThirtyFourthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Thirty Fourth Nearby Week.
    | DeliveryDatesEnum_ThirtyFifthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Thirty Fifth Nearby Week.
    | DeliveryDatesEnum_ThirtySixthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Thirty Sixth Nearby Week.
    | DeliveryDatesEnum_ThirtySeventhNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Thirty Seventh Nearby Week.
    | DeliveryDatesEnum_ThirtyEighthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Thirty Eighth Nearby Week.
    | DeliveryDatesEnum_ThirtyNinthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Thirty Ninth Nearby Week.
    | DeliveryDatesEnum_FortiethNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Fortieth Nearby Week.
    | DeliveryDatesEnum_FortyFirstNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Forty First Nearby Week.
    | DeliveryDatesEnum_FortySecondNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Forty Second Nearby Week.
    | DeliveryDatesEnum_FortyThirdNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Forty Third Nearby Week.
    | DeliveryDatesEnum_FortyFourthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Forty Fourth Nearby Week.
    | DeliveryDatesEnum_FortyFifthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Forty Fifth Nearby Week.
    | DeliveryDatesEnum_FortySixthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Forty Sixth Nearby Week.
    | DeliveryDatesEnum_FortySeventhNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Forty Seventh Nearby Week.
    | DeliveryDatesEnum_FortyEighthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Forty Eighth Nearby Week.
    | DeliveryDatesEnum_FortyNinthNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Forty Ninth Nearby Week.
    | DeliveryDatesEnum_FiftiethNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Fiftieth Nearby Week.
    | DeliveryDatesEnum_FiftyFirstNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Fifty First Nearby Week.
    | DeliveryDatesEnum_FiftySecondNearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be during the Fifty Second Nearby Week.
    deriving (Eq, Ord, Show)

-- | A type defines nearest Delivery Date of the
--   underlying Commodity of expiration of the futures
--   contract.
data DeliveryNearby = DeliveryNearby with
    id_ : Optional Text
    deliveryNearbyMultiplier : Int
        -- ^ A time multiplier, e.g. 1, 2 or 3 etc. used in
        --   defining Delivery Nearby date.
    deliveryNearbyType : DeliveryNearbyTypeEnum
        -- ^ Defines a type of the delivery nearby qualifier,
        --   expect to be used in conjunction with a delivery
        --   nearby multiplier, e.g. 1NearByMonth, 1NearbyWeek,
        --   etc. If 'CalculationPeriod' is used, the delivery
        --   nearby multiplier is expected to be '0'. To represent
        --   'Spot', the value of the delivery nearby type should
        --   be 'NearbyMonth' and the delivery period multiplier
        --   should be set to '0' (zero).
      deriving (Eq, Ord, Show)

-- | The type of nearby qualifier, expect to be used in
--   conjunction with a nearby count.
data DeliveryNearbyTypeEnum
    = DeliveryNearbyTypeEnum_CalculationPeriod ()
      -- ^ Describes the contract to be the contract that
      --   pertains to the month-year of the calculation period.
      --   If used, the nearby count is expected to be 0.
    | DeliveryNearbyTypeEnum_NearbyMonth ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the month of expiration of the futures contract.
    | DeliveryNearbyTypeEnum_NearbyWeek ()
      -- ^ The Delivery Date of the underlying Commodity shall
      --   be the Week of expiration of the futures contract.
    deriving (Eq, Ord, Show)

data DeliveryTypeEnum
    = DeliveryTypeEnum_Firm ()
    | DeliveryTypeEnum_Interruptible ()
    deriving (Eq, Ord, Show)

data Deposit = Deposit with
    id_ : Optional Text
    instrumentId : [InstrumentId]
        -- ^ Identification of the underlying asset, using public
        --   and/or private identifiers.
    description : Optional String
        -- ^ Long name of the underlying asset.
    currency : Optional IdentifiedCurrency
        -- ^ Trading currency of the underlyer when transacted as
        --   a cash instrument.
    exchangeId : Optional ExchangeId
        -- ^ Identification of the exchange on which this asset is
        --   transacted for the purposes of calculating a
        --   contractural payoff. The term "Exchange" is assumed
        --   to have the meaning as defined in the ISDA 2002
        --   Equity Derivatives Definitions.
    clearanceSystem : Optional ClearanceSystem
        -- ^ Identification of the clearance system associated
        --   with the transaction exchange.
    definition : Optional ProductReference
        -- ^ An optional reference to a full FpML product that
        --   defines the simple product in greater detail. In case
        --   of inconsistency between the terms of the simple
        --   product and those of the detailed definition, the
        --   values in the simple product override those in the
        --   detailed definition.
    term : Period
        -- ^ Specifies the term of the deposit, e.g. 5Y.
    paymentFrequency : Optional Period
        -- ^ Specifies the frequency at which the deposit pays,
        --   e.g. 6M.
    dayCountFraction : Optional DayCountFraction
        -- ^ The day count basis for the deposit.
      deriving (Eq, Ord, Show)

-- | Coding scheme that specifies the method according to
--   which an amount or a date is determined.
data DeterminationMethod = DeterminationMethod with
    determinationMethodScheme : Optional NonEmptyURI
    id_ : Optional Text
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A reference to the return swap notional determination
--   method.
data DeterminationMethodReference = DeterminationMethodReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | The ISDA defined value indicating the severity of a
--   difference.
data DifferenceSeverityEnum
    = DifferenceSeverityEnum_Warning ()
    | DifferenceSeverityEnum_Error ()
    deriving (Eq, Ord, Show)

-- | The ISDA defined value indicating the nature of a
--   difference.
data DifferenceTypeEnum
    = DifferenceTypeEnum_Value ()
    | DifferenceTypeEnum_Reference ()
    | DifferenceTypeEnum_Structure ()
    | DifferenceTypeEnum_Scheme ()
    deriving (Eq, Ord, Show)

-- | An abstract base class for all directional leg types
--   with effective date, termination date, where a payer
--   makes a stream of payments of greater than zero value
--   to a receiver.
data DirectionalLeg
    = DirectionalLeg_UnderlyerInterestLeg UnderlyerInterestLeg
    deriving (Eq, Ord, Show)

-- | The method of calculating discounted payment amounts.
data DiscountingTypeEnum
    = DiscountingTypeEnum_Standard ()
      -- ^ Per ISDA 2000 Definitions, Section 8.4. Discounting,
      --   paragraph (a)
    | DiscountingTypeEnum_FRA ()
      -- ^ Per ISDA 2000 Definitions, Section 8.4. Discounting,
      --   paragraph (b)
    | DiscountingTypeEnum_FRAYield ()
      -- ^ Per ISDA 2000 Definitions, Section 8.4. Discounting,
      --   paragraph (e)
    deriving (Eq, Ord, Show)

-- | A Disruption Fallback.
data DisruptionFallback = DisruptionFallback with
    commodityMarketDisruptionFallbackScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The specification of how disruption fallbacks will be
--   represented.
data DisruptionFallbacksEnum
    = DisruptionFallbacksEnum_AsSpecifiedInMasterAgreement ()
      -- ^ The Disruption Fallback(s) are determined by
      --   reference to the relevant Master Agreement.
    | DisruptionFallbacksEnum_AsSpecifiedInConfirmation ()
      -- ^ The Disruption Fallback(s) are determined by
      --   reference to the relevant Confirmation.
    deriving (Eq, Ord, Show)

-- | Refers to one on the 3 Amounts
data DividendAmountTypeEnum
    = DividendAmountTypeEnum_RecordAmount ()
      -- ^ 100% of the gross cash dividend per Share paid over
      --   record date during relevant Dividend Period
    | DividendAmountTypeEnum_ExAmount ()
      -- ^ 100% of gross cash dividend per Share paid after the
      --   Ex Div date during relevant Dividend Period.
    | DividendAmountTypeEnum_PaidAmount ()
      -- ^ 100% of gross cash dividend per Share paid during
      --   relevant Dividend Period.
    | DividendAmountTypeEnum_AsSpecifiedInMasterConfirmation ()
      -- ^ The Amount is determined as provided in the relevant
      --   Master Confirmation.
    deriving (Eq, Ord, Show)

-- | Defines how the composition of dividends is to be
--   determined.
data DividendCompositionEnum
    = DividendCompositionEnum_EquityAmountReceiverElection ()
      -- ^ The Equity Amount Receiver determines the composition
      --   of dividends (subject to conditions).
    | DividendCompositionEnum_CalculationAgentElection ()
      -- ^ The Calculation Agent determines the composition of
      --   dividends (subject to conditions).
    deriving (Eq, Ord, Show)

-- | The reference to a dividend date.
data DividendDateReferenceEnum
    = DividendDateReferenceEnum_ExDate ()
      -- ^ Date on which a holder of the security is entitled to
      --   the dividend.
    | DividendDateReferenceEnum_DividendPaymentDate ()
      -- ^ Date on which the dividend will be paid by the
      --   issuer.
    | DividendDateReferenceEnum_DividendValuationDate ()
      -- ^ In respect of each Dividend Period, number of days
      --   offset from the relevant Dividend Valuation Date.
    | DividendDateReferenceEnum_RecordDate ()
      -- ^ Date on which the dividend will be recorded in the
      --   books of the paying agent.
    | DividendDateReferenceEnum_TerminationDate ()
      -- ^ Termination date of the swap.
    | DividendDateReferenceEnum_EquityPaymentDate ()
      -- ^ Equity payment date of the swap.
    | DividendDateReferenceEnum_FollowingPaymentDate ()
      -- ^ The next payment date of the swap.
    | DividendDateReferenceEnum_AdHocDate ()
      -- ^ The dividend date will be specified ad hoc by the
      --   parties, typically on the dividend ex-date
    | DividendDateReferenceEnum_CumulativeEquityPaid ()
      -- ^ Total of paid dividends, paid on next following Cash
      --   Settlement Payment Date, which is immediately
      --   following the Dividend Period during which the
      --   dividend is paid by the Issuer to the holders of
      --   record of a Share.
    | DividendDateReferenceEnum_CumulativeLiborPaid ()
      -- ^ Total of paid dividends, paid on next following
      --   Payment Date, which is immediately following the
      --   Dividend Period during which the dividend is paid by
      --   the Issuer to the holders of record of a Share.
    | DividendDateReferenceEnum_CumulativeEquityExDiv ()
      -- ^ Total of dividends which go ex, paid on next
      --   following Cash Settlement Payment Date, which is
      --   immediately following the Dividend Period during
      --   which the Shares commence trading ex-dividend on the
      --   Exchange
    | DividendDateReferenceEnum_CumulativeLiborExDiv ()
      -- ^ Total of dividends which go ex, paid on next
      --   following Payment Date, which is immediately
      --   following the Dividend Period during which the Shares
      --   commence trading ex-dividend on the Exchange, or
      --   where the date on which the Shares commence trading
      --   ex-dividend is a Payment Date, such Payment Date.
    | DividendDateReferenceEnum_SharePayment ()
      -- ^ If "Dividend Payment Date(s)" is specified in the
      --   Transaction Supplement as "Share Payment", then the
      --   Dividend Payment Date in respect of a Dividend Amount
      --   shall fall on a date on or before the date that is
      --   two (or any other number that is specified in the
      --   Transaction Supplement) Currency Business Days
      --   following the day on which the Issuer of the Shares
      --   pays the relevant dividend to holders of record of
      --   the Shares
    | DividendDateReferenceEnum_CashSettlementPaymentDate ()
      -- ^ If "Dividend Payment Date(s)" is specified in the
      --   Transaction Supplement as "Cash Settlement Payment
      --   Date", then the Dividend Payment Date in respect of a
      --   Dividend Amount shall be the Cash Settlement Payment
      --   Date relating to the end of the Dividend Period
      --   during which the Shares commenced trading "ex" the
      --   relevant dividend on the Exchange
    | DividendDateReferenceEnum_FloatingAmountPaymentDate ()
      -- ^ If "Dividend Payment Date(s)" is specified in the
      --   Transaction Supplement as "Floating Amount Payment
      --   Date", then the Dividend Payment Date in respect of a
      --   Dividend Amount shall be the first Payment Date
      --   falling at least one Settlement Cycle after the date
      --   that the Shares have commenced trading "ex" the
      --   relevant dividend on the Exchange.
    | DividendDateReferenceEnum_CashSettlePaymentDateExDiv ()
      -- ^ If "Dividend Payment Date(s)" is specified in the
      --   Transaction Supplement as "Cash Settlement Payment
      --   Date – Ex Dividend", then the Dividend Payment Date
      --   in respect of a Dividend Amount shall be the Cash
      --   Settlement Payment Date relating to the end of the
      --   Dividend Period during which the Shares commenced
      --   trading “ex” the relevant dividend on the Exchange.
    | DividendDateReferenceEnum_CashSettlePaymentDateIssuerPayment ()
      -- ^ If "Dividend Payment Date(s)" is specified in the
      --   Transaction Supplement as "Cash Settlement Payment
      --   Date – Issuer Payment", then the Dividend Payment
      --   Date in respect of a Dividend Amount shall be the
      --   Cash Settlement Payment Date relating to the end of
      --   the Dividend Period during which the issuer pays the
      --   relevant dividend to a holder of record provided that
      --   in the case where the Equity Amount Payer is the
      --   party specified to be the sole Hedging Party and the
      --   Hedging Party has not received the Dividend Amount by
      --   such date, then the date falling a number of Currency
      --   Business Days as specified in the Cash Settlement
      --   Payment Date after actual receipt by the Hedging
      --   Party of the Received Ex Amount or Paid Ex Amount (as
      --   applicable).
    | DividendDateReferenceEnum_ExDividendPaymentDate ()
      -- ^ If "Dividend Payment Date(s)" is specified in the
      --   Transaction Supplement as "Ex-dividend Payment Date",
      --   then the Dividend Payment Date in respect of a
      --   Dividend Amount shall be the number of Currency
      --   Business Days as provided in the Transaction
      --   Supplement following the day on which the Shares
      --   commence trading ‘ex’ on the Exchange.
    deriving (Eq, Ord, Show)

-- | The date on which the receiver of the equity return
--   is entitled to the dividend.
data DividendEntitlementEnum
    = DividendEntitlementEnum_ExDate ()
      -- ^ Dividend entitlement is on the dividend ex-date.
    | DividendEntitlementEnum_RecordDate ()
      -- ^ Dividend entitlement is on the dividend record date.
    deriving (Eq, Ord, Show)

-- | A type describing the dividend payout ratio
--   associated with an equity underlyer. In certain cases
--   the actual ratio is not known on trade inception, and
--   only general conditions are then specified.
data DividendPayout = DividendPayout with
    choice_ : DividendPayout_choice
    dividendPayment : [PendingPayment]
        -- ^ The next upcoming dividend payment or payments.
      deriving (Eq, Ord, Show)

-- | A variant type used inside DividendPayout
data DividendPayout_choice
    = DividendPayout_choice_Items DividendPayout_items
    | DividendPayout_choice_DividendPayoutConditions String
      -- ^ Specifies the dividend payout conditions that will be
      --   applied in the case where the actual ratio is not
      --   known, typically because of regulatory or legal
      --   uncertainties.
    deriving (Eq, Ord, Show)

-- | A record type used inside DividendPayout
data DividendPayout_items = DividendPayout_items with
    dividendPayoutRatio : Decimal
        -- ^ Specifies the total actual dividend payout ratio
        --   associated with the equity underlyer.
    dividendPayoutRatioCash : Optional Decimal
        -- ^ Specifies the cash actual dividend payout ratio
        --   associated with the equity underlyer.
    dividendPayoutRatioNonCash : Optional Decimal
        -- ^ Specifies the non cash actual dividend payout ratio
        --   associated with the equity underlyer.
      deriving (Eq, Ord, Show)

-- | Defines the First Period or the Second Period, as
--   specified in the 2002 ISDA Equity Derivatives
--   Definitions.
data DividendPeriodEnum
    = DividendPeriodEnum_FirstPeriod ()
      -- ^ "First Period" per the 2002 ISDA Equity Derivatives
      --   Definitions will apply.
    | DividendPeriodEnum_SecondPeriod ()
      -- ^ "Second Period" per the 2002 ISDA Equity Derivatives
      --   Definitions will apply.
    deriving (Eq, Ord, Show)

-- | The abstract base type from which all FpML compliant
--   messages and documents must be derived.
data Document
    = Document_DataDocument DataDocument
    | Document_CollateralAllocationAccepted CollateralAllocationAccepted
    | Document_EventRequestAcknowledgement EventRequestAcknowledgement
    | Document_ConsentRefused ConsentRefused
    | Document_ConsentGranted ConsentGranted
    | Document_ConfirmationStatus ConfirmationStatus
    | Document_ConfirmationDisputed ConfirmationDisputed
    | Document_ConfirmationAgreed ConfirmationAgreed
    | Document_AllocationRefused AllocationRefused
    | Document_AllocationApproved AllocationApproved
    | Document_EventStatusResponse EventStatusResponse
    | Document_Acknowledgement Acknowledgement
    | Document_NonCorrectableRequestMessage NonCorrectableRequestMessage
    | Document_TradeChangeAdviceRetracted TradeChangeAdviceRetracted
    | Document_RequestTradeReferenceInformationUpdateRetracted RequestTradeReferenceInformationUpdateRetracted
    | Document_RequestExecutionRetracted RequestExecutionRetracted
    | Document_RequestConsentRetracted RequestConsentRetracted
    | Document_RequestClearingRetracted RequestClearingRetracted
    | Document_RequestAllocationRetracted RequestAllocationRetracted
    | Document_ExecutionRetracted ExecutionRetracted
    | Document_ExecutionAdviceRetracted ExecutionAdviceRetracted
    | Document_ConfirmationRetracted ConfirmationRetracted
    | Document_VerificationStatusNotification VerificationStatusNotification
    | Document_RequestRetransmission RequestRetransmission
    | Document_RequestEventStatus RequestEventStatus
    | Document_CorrectableRequestMessage CorrectableRequestMessage
    | Document_RequestCollateralAllocation RequestCollateralAllocation
    | Document_TradeChangeAdvice TradeChangeAdvice
    | Document_RequestTradeReferenceInformationUpdate RequestTradeReferenceInformationUpdate
    | Document_RequestExecution RequestExecution
    | Document_RequestConsent RequestConsent
    | Document_RequestConfirmation RequestConfirmation
    | Document_RequestClearing RequestClearing
    | Document_RequestAllocation RequestAllocation
    | Document_MaturityNotification MaturityNotification
    | Document_ExecutionNotification ExecutionNotification
    | Document_ExecutionAdvice ExecutionAdvice
    | Document_ClearingStatus ClearingStatus
    | Document_ClearingRefused ClearingRefused
    | Document_ClearingConfirmed ClearingConfirmed
    | Document_ApprovalStatusNotification ApprovalStatusNotification
    | Document_ServiceNotification ServiceNotification
    | Document_Exception Exception
    deriving (Eq, Ord, Show)

-- | An entity for defining the definitions that govern
--   the document and should include the year and type of
--   definitions referenced, along with any relevant
--   documentation (such as master agreement) and the date
--   it was signed.
data Documentation = Documentation with
    masterAgreement : Optional MasterAgreement
        -- ^ The agreement executed between the parties and
        --   intended to govern all OTC derivatives transactions
        --   between those parties.
    choice_ : Optional Documentation_choice
    contractualDefinitions : [ContractualDefinitions]
        -- ^ The definitions such as those published by ISDA that
        --   will define the terms of the trade.
    contractualTermsSupplement : [ContractualTermsSupplement]
        -- ^ A contractual supplement (such as those published by
        --   ISDA) that will apply to the trade.
    contractualMatrix : [ContractualMatrix]
        -- ^ A reference to a contractual matrix of elected
        --   terms/values (such as those published by ISDA) that
        --   shall be deemed to apply to the trade. The applicable
        --   matrix is identified by reference to a name and
        --   optionally a publication date. Depending on the
        --   structure of the matrix, an additional term
        --   (specified in the matrixTerm element) may be required
        --   to further identify a subset of applicable
        --   terms/values within the matrix.
    creditSupportAgreement : Optional CreditSupportAgreement
        -- ^ The agreement executed between the parties and
        --   intended to govern collateral arrangement for all OTC
        --   derivatives transactions between those parties.
    otherAgreement : [OtherAgreement]
        -- ^ Any other agreement executed between the parties.
    attachment : [Resource]
        -- ^ A human readable document related to this
        --   transaction, for example a confirmation.
      deriving (Eq, Ord, Show)

-- | A variant type used inside Documentation
data Documentation_choice
    = Documentation_choice_MasterConfirmation MasterConfirmation
      -- ^ The agreement executed between the parties and
      --   intended to govern all OTC derivatives transactions
      --   between those parties.
    | Documentation_choice_BrokerConfirmation BrokerConfirmation
      -- ^ Specifies the deails for a broker confirm.
    deriving (Eq, Ord, Show)

-- | Describes the parameters for a dual currency option
--   transaction.
data DualCurrencyFeature = DualCurrencyFeature with
    currency : Currency
        -- ^ The Alternate currency i.e. the currency in which the
        --   deposit will be redeemed in the event that the spot
        --   rate fixes below the strike rate at the specified
        --   fixing date and time.
    fixingDate : Date
        -- ^ The date on which the fx spot rate is compared
        --   against the strike rate, in order to determine the
        --   delivery currency. This is the expiry date of a put
        --   option on the Deposit/Alternate currency couple. Also
        --   known as "valuation date" or "reference date".
    fixingTime : Optional BusinessCenterTime
        -- ^ The time at which the fx spot rate observation is
        --   made i.e. the option cut off time on the expiry date.
        --   Also known as "valuation time".
    strike : DualCurrencyStrikePrice
        -- ^ The rate at which the deposit will be converted to
        --   the Alternate currency, in the event that the spot
        --   rate is strictly lower than the strike rate at the
        --   specified fixing date and time.
    spotRate : Optional Decimal
        -- ^ The spot rate at the time the trade was agreed.
    interestAtRisk : Bool
        -- ^ Specifies whether the interest component of the
        --   redemption amount is subject to conversion to the
        --   Alternate currency, in the event that the spot rate
        --   is strictly lower than the strike rate at the
        --   specified fixing date and time.
      deriving (Eq, Ord, Show)

-- | A type that describes the rate of exchange at which
--   the embedded option in a Dual Currency Deposit has
--   been struck.
data DualCurrencyStrikePrice = DualCurrencyStrikePrice with
    rate : PositiveDecimal
        -- ^ The rate of exchange between the two currencies of
        --   the leg of a deal.
    strikeQuoteBasis : DualCurrencyStrikeQuoteBasisEnum
        -- ^ The method by which the strike rate is quoted, in
        --   terms of the deposit (principal) and alternate
        --   currencies.
      deriving (Eq, Ord, Show)

-- | A type which permits the Dual Currency strike quote
--   basis to be expressed in terms of the deposit and
--   alternate currencies.
data DualCurrencyStrikeQuoteBasisEnum
    = DualCurrencyStrikeQuoteBasisEnum_DepositCurrencyPerAlternateCurrency ()
    | DualCurrencyStrikeQuoteBasisEnum_AlternateCurrencyPerDepositCurrency ()
    deriving (Eq, Ord, Show)

-- | Excess Emission Penalty related parameters.
data EEPParameters = EEPParameters with
    eEPApplicable : Bool
        -- ^ If Excess Emission Penalty is specified to be
        --   applicable in the Confirmation then the Excess
        --   Emission Penalty will be determined in the manner
        --   specified in the Confirmation (see other EEP
        --   parameters)
    riskPeriod : EEPRiskPeriod
        -- ^ Used to determine how provisions in Part [7] Page 7
        --   (B) Failure to Deliver Not Remedied are to be
        --   applied.
    equivalentApplicable : Bool
        -- ^ When "true" the EEP Equivalent is applicable. See
        --   Part [7] definition of EEP Equivalent.
    penaltyApplicable : Bool
        -- ^ When "true" the Excess Emissions Penalty is
        --   applicable. See Part [7] definition of Excess
        --   Emissions Penalty.
      deriving (Eq, Ord, Show)

-- | TBD.
data EEPRiskPeriod = EEPRiskPeriod with
    startDate : Date
    endDate : Date
      deriving (Eq, Ord, Show)

-- | Symbolic specification of early termination date.
data EarlyTerminationDateEnum
    = EarlyTerminationDateEnum_AnyDay ()
    | EarlyTerminationDateEnum_ValuationDate ()
    | EarlyTerminationDateEnum_ResetDate ()
    | EarlyTerminationDateEnum_AfterFirstResetDate ()
    | EarlyTerminationDateEnum_AsSpecifiedInMCA ()
    deriving (Eq, Ord, Show)

-- | The physical delivery conditions for electricity.
data ElectricityDelivery
    = ElectricityDelivery_Items1 ElectricityDelivery_items
    | ElectricityDelivery_Items2 ElectricityDelivery_items_2
    deriving (Eq, Ord, Show)

-- | The physical delivery obligation options specific to
--   a firm transaction.
data ElectricityDeliveryFirm = ElectricityDeliveryFirm with
    forceMajeure : Bool
        -- ^ If true, indicates that the buyer and seller should
        --   be excused of their delivery obligations when such
        --   performance is prevented by Force Majeure. For EEI
        --   transactions, this would indicate "Firm (LD)" If
        --   false, indicates that the buyer and seller should not
        --   be excused of their delivery obligations when such
        --   performance is prevented by Force Majeure. For EEI
        --   transactions, this would indicate "Firm (No Force
        --   Majeure)"
      deriving (Eq, Ord, Show)

-- | A scheme identifying the types of the Delivery Point
--   for a physically settled electricity trade.
data ElectricityDeliveryPoint = ElectricityDeliveryPoint with
    deliveryPointScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The physical delivery obligation options specific to
--   a system firm transaction.
data ElectricityDeliverySystemFirm = ElectricityDeliverySystemFirm with
    applicable : Bool
        -- ^ Indicates that the trade is for a System Firm
        --   product. Should always be set to "true".
    system : Optional CommodityDeliveryPoint
      deriving (Eq, Ord, Show)

data ElectricityDeliveryType
    = ElectricityDeliveryType_Firm ElectricityDeliveryFirm
      -- ^ Indicates under what condtitions the Parties'
      --   delivery obligations apply.
    | ElectricityDeliveryType_NonFirm Bool
      -- ^ If present and set to true, indicates that delivery
      --   or receipt of the electricity may be interrupted for
      --   any reason or for no reason, without liability on the
      --   part of either Party. This element should never have
      --   a value of false.
    | ElectricityDeliveryType_SystemFirm ElectricityDeliverySystemFirm
      -- ^ Indicates that the electricity is intended to be
      --   supplied from the owned or controlled generation or
      --   pre-existing purchased power assets of the system
      --   specified.
    | ElectricityDeliveryType_UnitFirm ElectricityDeliveryUnitFirm
      -- ^ Indicates that the electricity is intended to be
      --   supplied from a generation asset which can optionally
      --   be specified.
    deriving (Eq, Ord, Show)

-- | The physical delivery obligation options specific to
--   a unit firm transaction.
data ElectricityDeliveryUnitFirm = ElectricityDeliveryUnitFirm with
    applicable : Bool
        -- ^ Indicates that the trade is for a Unit Firm product.
        --   Should always be set to "true".
    generationAsset : Optional CommodityDeliveryPoint
      deriving (Eq, Ord, Show)

-- | A record type used inside ElectricityDelivery
data ElectricityDelivery_items = ElectricityDelivery_items with
    deliveryPoint : ElectricityDeliveryPoint
        -- ^ The point at which delivery of the electricity will
        --   occur.
    deliveryType : Optional ElectricityDeliveryType
        -- ^ Indicates the under what conditions the Parties'
        --   delivery obligations apply.
    transmissionContingency : Optional ElectricityTransmissionContingency
        -- ^ Indicates that the performance of the buyer or seller
        --   shall be excused (under the conditions specified) if
        --   transmission of the elctricity is unavailable or
        --   interrupted.
    interconnectionPoint : Optional InterconnectionPoint
        -- ^ Identification of the border(s) or border point(s) of
        --   a transportation contract.
      deriving (Eq, Ord, Show)

-- | A record type used inside ElectricityDelivery
data ElectricityDelivery_items_2 = ElectricityDelivery_items_2 with
    deliveryZone : CommodityDeliveryPoint
        -- ^ The zone covering potential delivery points for the
        --   electricity.
    electingPartyReference : Optional PartyReference
        -- ^ Indicates the party able to decide which delivery
        --   point within the deliveryPoint is used for delivery.
        --   For EEI transactions, this should reference the
        --   seller of the electricity.
      deriving (Eq, Ord, Show)

-- | A type defining the physical quantity of the
--   electricity to be delivered.
data ElectricityPhysicalDeliveryQuantity = ElectricityPhysicalDeliveryQuantity with
    id_ : Optional Text
    quantityUnit : QuantityUnit
        -- ^ Quantity Unit is the unit of measure applicable for
        --   the quantity on the Transaction.
    quantityFrequency : CommodityQuantityFrequency
        -- ^ The frequency at which the Notional Quantity is
        --   deemed to apply for purposes of calculating the Total
        --   Notional Quantity.
    quantity : Decimal
        -- ^ Amount of commodity per quantity frequency.
    settlementPeriodsReference : [SettlementPeriodsReference]
        -- ^ A pointer style reference to the range(s) of
        --   Settlement Periods to which this quantity applies.
      deriving (Eq, Ord, Show)

-- | Allows the documentation of a shaped quantity trade
--   where the quantity changes over the life of the
--   transaction.
data ElectricityPhysicalDeliveryQuantitySchedule = ElectricityPhysicalDeliveryQuantitySchedule with
    id_ : Optional Text
    quantityStep : [CommodityNotionalQuantity]
        -- ^ The quantity per Calculation Period. There must be a
        --   quantity specified for each Calculation Period,
        --   regardless of whether the quantity changes or remains
        --   the same between periods.
    choice_ : ElectricityPhysicalDeliveryQuantitySchedule_choice
    settlementPeriodsReference : [SettlementPeriodsReference]
        -- ^ A pointer style reference to the range(s) of
        --   Settlement Periods to which this quantity applies.
      deriving (Eq, Ord, Show)

-- | A variant type used inside
--   ElectricityPhysicalDeliveryQuantitySchedule
data ElectricityPhysicalDeliveryQuantitySchedule_choice
    = ElectricityPhysicalDeliveryQuantitySchedule_choice_DeliveryPeriodsReference CalculationPeriodsReference
      -- ^ A pointer style reference to the Delivery Periods
      --   defined elsewhere.
    | ElectricityPhysicalDeliveryQuantitySchedule_choice_DeliveryPeriodsScheduleReference CalculationPeriodsScheduleReference
      -- ^ A pointer style reference to the Calculation Periods
      --   Schedule defined elsewhere.
    deriving (Eq, Ord, Show)

-- | Physically settled leg of a physically settled
--   electricity transaction.
data ElectricityPhysicalLeg = ElectricityPhysicalLeg with
    id_ : Optional Text
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    deliveryPeriods : CommodityDeliveryPeriods
        -- ^ The different options for specifying the Delivery or
        --   Supply Periods. Unless the quantity or price is to
        --   vary periodically during the trade or physical
        --   delivery occurs on a periodic basis, periodsSchedule
        --   should be used and set to 1T.
    settlementPeriods : [SettlementPeriods]
        -- ^ The specification of the Settlement Periods in which
        --   the electricity will be delivered. The Settlement
        --   Periods will apply from and including the Effective
        --   Date up to and including the Termination Date. If
        --   more than one settlementPeriods element is present
        --   this indicates multiple ranges of Settlement Periods
        --   apply to the entire trade - for example off-peak
        --   weekdays and all day weekends. Settlement Period
        --   ranges should not overlap.
    settlementPeriodsSchedule : Optional SettlementPeriodsSchedule
        -- ^ The specification of the Settlement Periods in which
        --   the electricity will be delivered for a "shaped"
        --   trade i.e. where different Settlement Period ranges
        --   will apply to different periods of the trade.
    loadType : Optional LoadTypeEnum
        -- ^ LoadType is a summary of the full description of the
        --   settlement periods with respect to the region. Used
        --   for describing Electricity delivery schedules (e.g.
        --   Base, Peak, Off-Peak, Custom).
    electricity : ElectricityProduct
        -- ^ The specification of the electricity to be delivered.
    deliveryConditions : ElectricityDelivery
        -- ^ The physical delivery conditions for the transaction.
    deliveryQuantity : ElectricityPhysicalQuantity
        -- ^ The different options for specifying the quantity.
      deriving (Eq, Ord, Show)

-- | The quantity of gas to be delivered.
data ElectricityPhysicalQuantity = ElectricityPhysicalQuantity with
    id_ : Optional Text
    choice_ : ElectricityPhysicalQuantity_choice
    totalPhysicalQuantity : Optional UnitQuantity
        -- ^ The Total Quantity of the commodity to be delivered.
      deriving (Eq, Ord, Show)

-- | A variant type used inside
--   ElectricityPhysicalQuantity
data ElectricityPhysicalQuantity_choice
    = ElectricityPhysicalQuantity_choice_PhysicalQuantity [ElectricityPhysicalDeliveryQuantity]
      -- ^ The Quantity per Delivery Period.
    | ElectricityPhysicalQuantity_choice_PhysicalQuantitySchedule [ElectricityPhysicalDeliveryQuantitySchedule]
      -- ^ Allows the documentation of a shaped quantity trade
      --   where the quantity changes over the life of the
      --   transaction. Note that if the range of Settlement
      --   Periods also varies over the life of the transaction
      --   this element should not be used. Instead,
      --   physicalQuantity should be repeated for each range of
      --   Settlement Periods that apply at any point during the
      --   trade.
    deriving (Eq, Ord, Show)

-- | The specification of the electricity to be delivered.
data ElectricityProduct = ElectricityProduct with
    type_ : ElectricityProductTypeEnum
        -- ^ The type of electricity product to be delivered.
    voltage : Optional PositiveDecimal
        -- ^ The voltage, expressed as a number of volts, of the
        --   electricity to be delivered.
      deriving (Eq, Ord, Show)

-- | The type of electricity product.
data ElectricityProductTypeEnum
    = ElectricityProductTypeEnum_Electricity ()
    deriving (Eq, Ord, Show)

-- | A structure to specify the tranmission contingency
--   and the party that bears the obligation.
data ElectricityTransmissionContingency = ElectricityTransmissionContingency with
    contingency : ElectricityTransmissionContingencyType
        -- ^ The conditions under which the party specified in
        --   contingentParty will be excused from damages if
        --   transmission is interrupted or curtailed.
    contingentParty : [PartyReference]
        -- ^ The party to which the contingency applies.
      deriving (Eq, Ord, Show)

-- | The type of transmission contingency, i.e. what
--   portion of the transmission the delivery obligations
--   are applicable.
data ElectricityTransmissionContingencyType = ElectricityTransmissionContingencyType with
    electricityTransmissionContingencyScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A special type meant to be used for elements with no
--   content and no attributes.
data Empty = Empty with
      deriving (Eq, Ord, Show)

-- | Records supporting information justifying an end user
--   exception under 17 CFR part 39.
data EndUserExceptionDeclaration = EndUserExceptionDeclaration with
    creditDocument : [CreditDocument]
        -- ^ What arrangements will be made to provide credit?
        --   (e.g. CSA, collateral pledge, guaranty, available
        --   resources, financing).
    organizationCharacteristic : [OrganizationCharacteristic]
        -- ^ Allows the organization to specify which categories
        --   or characteristics apply to it for end-user exception
        --   determination. Examples include "FinancialEntity",
        --   "CaptiveFinanceUnit", "BoardOfDirectorsApproval".
    transactionCharacteristic : [TransactionCharacteristic]
        -- ^ Allows the relevant transaction level categories or
        --   characteristics to be recorded for end-user exception
        --   determination. Examples include
        --   "BoardOfDirectorsApproval", "HedgesCommercialRisk".
    supervisorRegistration : [SupervisorRegistration]
        -- ^ Allows the organization to specify which if any
        --   relevant regulators it is registered with, and if so
        --   their identification number. For example, it could
        --   specify that it is SEC registered and provide its
        --   Central Index Key.
      deriving (Eq, Ord, Show)

-- | A type describing the entity of a party, for example
--   Financial, NonFinancial etc.
data EntityClassification = EntityClassification with
    entityClassificationScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A legal entity identifier (e.g. RED entity code).
data EntityId = EntityId with
    entityIdScheme : Optional NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

-- | The name of the reference entity. A free format
--   string. FpML does not define usage rules for this
--   element.
data EntityName = EntityName with
    entityNameScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | Upon the occurrence of an Abandonment of Scheme, as
--   defined in clause (h)(iv) of the Emissions Annex, one
--   of the following elections, the specific terms of
--   which are set forth in clause (b)(iii) of the
--   Emissions Annex, will govern the parties’ rights and
--   obligations with respect to this Emissions
--   Transaction. If none of the above options is
--   selected, Option A(1) will apply.
data EnvironmentalAbandonmentOfSchemeEnum
    = EnvironmentalAbandonmentOfSchemeEnum_OptionA_1_ ()
      -- ^ Abandonment of Scheme constitutes an Additional
      --   Termination Event.
    | EnvironmentalAbandonmentOfSchemeEnum_OptionA_2_ ()
      -- ^ Abandonment of Scheme entails no further obligations.
    | EnvironmentalAbandonmentOfSchemeEnum_OptionB ()
      -- ^ The applicability of Abandonment of Scheme to
      --   Emissions Transactions is set forth in the applicable
      --   Confirmation.
    | EnvironmentalAbandonmentOfSchemeEnum_OptionC ()
      -- ^ The applicability of Abandonment of Scheme does not
      --   apply.
    deriving (Eq, Ord, Show)

data EnvironmentalPhysicalLeg = EnvironmentalPhysicalLeg with
    id_ : Optional Text
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    numberOfAllowances : UnitQuantity
        -- ^ The number of allowances, certificates or credit to
        --   be transaction in the transaction.
    environmental : EnvironmentalProduct
        -- ^ The specification of the type of allowance or credit.
    abandonmentOfScheme : Optional EnvironmentalAbandonmentOfSchemeEnum
        -- ^ Applies to U.S. Emissions Allowance Transactions.
        --   Specifies terms which apply in the event of an
        --   Abandonment of Scheme event.
    deliveryDate : AdjustableOrRelativeDate
        -- ^ The date on which allowances are to be delivered as
        --   specified in the related Confirmation.
    paymentDate : DateOffset
    businessCentersOrReference_model : Optional EnvironmentalPhysicalLeg_BusinessCentersOrReference_model
    failureToDeliverApplicable : Optional Bool
        -- ^ Applies to EU Emissions Allowance Transactions. Holds
        --   the Failure to Deliver (Alternative Method) election.
        --   Used to determine how provisions in Part [7] Page 7
        --   (B) Failure to Deliver Not Remedied are to be
        --   applied.
    eEPParameters : Optional EEPParameters
        -- ^ Applies to EU Emissions Allowance Transactions.
        --   Contains a series of parameters controlling Excess
        --   Emissions Penalty payments.
      deriving (Eq, Ord, Show)

-- | A variant type used inside EnvironmentalPhysicalLeg
data EnvironmentalPhysicalLeg_BusinessCentersOrReference_model
    = EnvironmentalPhysicalLeg_BusinessCentersOrReference_model_BusinessCentersReference BusinessCentersReference
      -- ^ A pointer style reference to a set of financial
      --   business centers defined elsewhere in the document.
      --   This set of business centers is used to determine
      --   whether a particular day is a business day or not.
    | EnvironmentalPhysicalLeg_BusinessCentersOrReference_model_BusinessCenters BusinessCenters
    deriving (Eq, Ord, Show)

-- | A type defining the characteristics of the
--   environmental allowance or credit being traded.
--   Settlement of environmental transactions is
--   classified as physical because settlement is
--   accomplished through the exchange of one or more
--   certificates (despite the fact that this exchange is
--   almost always executed through electronic book entry
--   transfer between the parties allowance accounts).
data EnvironmentalProduct = EnvironmentalProduct with
    productType : EnvironmentalProductTypeEnum
        -- ^ Specifies the type of environmental allowance or
        --   credit. Examples include allowances or credit issued
        --   by the European Union (E.U.) or by the State of
        --   California in the Unites States.
    compliancePeriod : Optional EnvironmentalProductComplaincePeriod
        -- ^ Applies to E.U. Emissions Allowance Transactions.
        --   Describes Specified Compliance Period for which the
        --   Allowances are issued.
    vintage : [Text]
        -- ^ Applies to U.S. Emissions Allowance Transactions. The
        --   year(s) of the applicable Emissions Product(s) as
        --   specified in an Emissions Transaction.
    applicableLaw : Optional EnvironmentalProductApplicableLaw
        -- ^ Applies to U.S. Emissions Allowance Transactions.
        --   Used to specify the Applicable Emissions Law when
        --   this is not defined in Emissions Product Definitions
        --   Exhibit.
    trackingSystem : Optional EnvironmentalTrackingSystem
        -- ^ Applies to U.S. Emissions Allowance Transactions.
        --   Used to specify the Tracking System when this is not
        --   defined in Emissions Product Definitions Exhibit.
      deriving (Eq, Ord, Show)

-- | TBD.
data EnvironmentalProductApplicableLaw = EnvironmentalProductApplicableLaw with
    environmentalProductApplicableLawScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data EnvironmentalProductComplaincePeriod = EnvironmentalProductComplaincePeriod with
    startYear : Text
        -- ^ The first year of the Compliance Period.
    endYear : Text
        -- ^ The last year of the Commpliance Period.
      deriving (Eq, Ord, Show)

-- | Environmental Product (e.g. allowance, certificate or
--   unit).
data EnvironmentalProductTypeEnum
    = EnvironmentalProductTypeEnum_EUAllowance ()
      -- ^ For EU Emissions Allowance Transactions: An EU
      --   Emissions Allowance.
    | EnvironmentalProductTypeEnum_EUCredit ()
      -- ^ For EU Emissions Allowance Transactions: An EU
      --   Emissions Credit.
    | EnvironmentalProductTypeEnum_AlternativeAllowance ()
      -- ^ For EU Emissions Allowance Transactions: An EU
      --   Alternative Allowance.
    | EnvironmentalProductTypeEnum_NOXEmissionsProduct ()
      -- ^ For US Emissions Allowance Transactions: A limited
      --   authorization issued by the state permitting
      --   authority or the US Environmental Protection Agency
      --   (EPA) to emit certain amounts of nitrogen oxides
      --   (Nox).
    | EnvironmentalProductTypeEnum_RegionalEmissionsProduct ()
      -- ^ For US Emissions Allowance Transactions: A emissions
      --   allowance or emissions reduction credit issued under
      --   a mult-state or provincial or other cap-and-trade
      --   Scheme.
    | EnvironmentalProductTypeEnum_RGGIEmissionsProduct ()
      -- ^ For US Emissions Allowance Transactions: A limited
      --   authorization issued by the RGGI scheme permitting
      --   the emission of certain amounts of carbon dioxide.
    | EnvironmentalProductTypeEnum_SO2EmissionsProduct ()
      -- ^ For US Emissions Allowance Transactions: A limited
      --   authorization issued by the U.S. Environmental
      --   Protection Agency (EPA) to emit a certain amount of
      --   sulfur dioxide.
    | EnvironmentalProductTypeEnum_StateEmissionProduct ()
      -- ^ For US Emissions Allowance Transactions: Any
      --   emissions allowance or emission reduction credit
      --   created and promulgated under a U.S. state Scheme.
    | EnvironmentalProductTypeEnum_VoluntaryEmissionProduct ()
      -- ^ For US Emissions Allowance Transactions: Any
      --   emissions allowance, emission credit, emissions
      --   offset or emissions reduction credit created or
      --   issued under a voluntary Scheme.
    | EnvironmentalProductTypeEnum_RenewableEnergyCertificate ()
      -- ^ For US Renewable Energy Certificate Transactions: A
      --   Renewable Energy Certificate (“REC”) represents the
      --   environmental, social and other non-power qualities
      --   of generation of 1 megawatt-hour (MWh) of electricity
      --   from an eligible renewable energy resource.
    | EnvironmentalProductTypeEnum_AUSCarbonCreditUnit ()
      -- ^ Australia Green Energy: Australian Carbon Credit
      --   Unit.
    | EnvironmentalProductTypeEnum_AUSCarbonUnit ()
      -- ^ Australia Green Energy: Australian Carbon Unit.
    | EnvironmentalProductTypeEnum_AUSEnergySavingCertificate ()
      -- ^ Australia Green Energy: Energy Savings Certificate.
    | EnvironmentalProductTypeEnum_AUSLargeScaleGenerationCertificate ()
      -- ^ Australia Green Energy: Large-scale Generation
      --   Certificate.
    | EnvironmentalProductTypeEnum_AUSSmallScaleTechnologyCertificate ()
      -- ^ Australia Green Energy: Small-scale Technology
      --   Certificate.
    | EnvironmentalProductTypeEnum_AUSVictorianEnergyEfficiencyCertificate ()
      -- ^ Australia Green Energy: Victorian Energy Efficiency
      --   Certificate.
    | EnvironmentalProductTypeEnum_MXCCFECRTINTLODS ()
      -- ^ Mexico CCFE CRT INTLODS Physical Certificates.
    | EnvironmentalProductTypeEnum_NZEmissionsUnits ()
      -- ^ New Zealand Emissions Units.
    | EnvironmentalProductTypeEnum_UKRenewableObligationCertificate ()
      -- ^ United Kingdom Ofgem Renewable Obligation
      --   Certificate.
    deriving (Eq, Ord, Show)

-- | For US Emissions Allowance Transactions. A system
--   where all electronic certificates are stored and
--   emissions are tracked.
data EnvironmentalTrackingSystem = EnvironmentalTrackingSystem with
    commodityEnvironmentalTrackingSystemScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | An exchange traded equity asset.
data EquityAsset = EquityAsset with
    id_ : Optional Text
    instrumentId : [InstrumentId]
        -- ^ Identification of the underlying asset, using public
        --   and/or private identifiers.
    description : Optional String
        -- ^ Long name of the underlying asset.
    currency : Optional IdentifiedCurrency
        -- ^ Trading currency of the underlyer when transacted as
        --   a cash instrument.
    exchangeId : Optional ExchangeId
        -- ^ Identification of the exchange on which this asset is
        --   transacted for the purposes of calculating a
        --   contractural payoff. The term "Exchange" is assumed
        --   to have the meaning as defined in the ISDA 2002
        --   Equity Derivatives Definitions.
    clearanceSystem : Optional ClearanceSystem
        -- ^ Identification of the clearance system associated
        --   with the transaction exchange.
    definition : Optional ProductReference
        -- ^ An optional reference to a full FpML product that
        --   defines the simple product in greater detail. In case
        --   of inconsistency between the terms of the simple
        --   product and those of the detailed definition, the
        --   values in the simple product override those in the
        --   detailed definition.
    relatedExchangeId : [ExchangeId]
        -- ^ A short form unique identifier for a related
        --   exchange. If the element is not present then the
        --   exchange shall be the primary exchange on which
        --   listed futures and options on the underlying are
        --   listed. The term "Exchange" is assumed to have the
        --   meaning as defined in the ISDA 2002 Equity
        --   Derivatives Definitions.
    optionsExchangeId : [ExchangeId]
        -- ^ A short form unique identifier for an exchange on
        --   which the reference option contract is listed. This
        --   is to address the case where the reference exchange
        --   for the future is different than the one for the
        --   option. The options Exchange is referenced on share
        --   options when Merger Elections are selected as Options
        --   Exchange Adjustment.
    specifiedExchangeId : [ExchangeId]
        -- ^ A short form unique identifier for a specified
        --   exchange. If the element is not present then the
        --   exchange shall be default terms as defined in the
        --   MCA; unless otherwise specified in the Transaction
        --   Supplement.
      deriving (Eq, Ord, Show)

-- | Specifies an additional Forward type.
data EquityOptionTypeEnum
    = EquityOptionTypeEnum_Put ()
      -- ^ A put option gives the holder the right to sell the
      --   underlying asset by a certain date for a certain
      --   price.
    | EquityOptionTypeEnum_Call ()
      -- ^ A call option gives the holder the right to buy the
      --   underlying asset by a certain date for a certain
      --   price.
    | EquityOptionTypeEnum_Forward ()
      -- ^ DEPRECATED value which will be removed in FpML-5-0
      --   onwards A forward contract is an agreement to buy or
      --   sell the underlying asset at a certain future time
      --   for a certain price.
    deriving (Eq, Ord, Show)

-- | A type defining the exercise period for a European
--   style option together with any rules governing the
--   notional amount of the underlying which can be
--   exercised on any given exercise date and any
--   associated exercise fees.
data EuropeanExercise = EuropeanExercise with
    id_ : Optional Text
    expirationDate : AdjustableOrRelativeDate
        -- ^ The last day within an exercise period for an
        --   American style option. For a European style option it
        --   is the only day within the exercise period.
    relevantUnderlyingDate : Optional AdjustableOrRelativeDates
        -- ^ The date on the underlying set by the exercise of an
        --   option. What this date is depends on the option (e.g.
        --   in a swaption it is the swap effective date, in an
        --   extendible/cancelable provision it is the swap
        --   termination date).
    earliestExerciseTime : BusinessCenterTime
        -- ^ The earliest time at which notice of exercise can be
        --   given by the buyer to the seller (or seller's agent)
        --   i) on the expriation date, in the case of a European
        --   style option, (ii) on each bermuda option exercise
        --   date and the expiration date, in the case of a
        --   Bermuda style option the commencement date to, and
        --   including, the expiration date , in the case of an
        --   American option.
    expirationTime : BusinessCenterTime
        -- ^ The latest time for exercise on expirationDate.
    partialExercise : Optional PartialExercise
        -- ^ As defined in the 2000 ISDA Definitions, Section
        --   12.3. Partial Exercise, the buyer of the option has
        --   the right to exercise all or less than all the
        --   notional amount of the underlying swap on the
        --   expiration date, but may not exercise less than the
        --   minimum notional amount, and if an integral multiple
        --   amount is specified, the notional amount exercised
        --   must be equal to, or be an integral multiple of, the
        --   integral multiple amount.
    exerciseFee : Optional ExerciseFee
        -- ^ A fee to be paid on exercise. This could be
        --   represented as an amount or a rate and notional
        --   reference on which to apply the rate.
      deriving (Eq, Ord, Show)

-- | A post-trade event reference identifier allocated by
--   a party. FpML does not define the domain values
--   associated with this element. Note that the domain
--   values for this element are not strictly an
--   enumerated list.
data EventId = EventId with
    eventIdScheme : Optional NonEmptyURI
    id_ : Optional Text
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

-- | Identification of a business event, for example
--   through its correlation id or a business identifier.
data EventIdentifier
    = EventIdentifier_Items EventIdentifier_items
    | EventIdentifier_TradeIdentifier TradeIdentifier
    deriving (Eq, Ord, Show)

-- | A record type used inside EventIdentifier
data EventIdentifier_Sequence_model = EventIdentifier_Sequence_model with
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside EventIdentifier
data EventIdentifier_items = EventIdentifier_items with
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequence_model : Optional EventIdentifier_Sequence_model
      deriving (Eq, Ord, Show)

-- | A structure that describes a proposed match between
--   trades or post-trade event reports.
data EventProposedMatch = EventProposedMatch with
    choice_ : EventProposedMatch_choice
    matchId : Optional MatchId
        -- ^ A unique identifier assigned by the matching service
        --   to each set of matched positions.
    difference : [TradeDifference]
        -- ^ A type used to record the details of a difference
        --   between two sides of a business event.
    matchScore : Optional Decimal
        -- ^ Numeric score to represent the quality of the match.
      deriving (Eq, Ord, Show)

-- | A variant type used inside EventProposedMatch
data EventProposedMatch_choice
    = EventProposedMatch_choice_TradePackage TradePackage
    | EventProposedMatch_choice_Items1 EventProposedMatch_items
    | EventProposedMatch_choice_Amendment TradeAmendmentContent
    | EventProposedMatch_choice_Increase TradeNotionalChange
    | EventProposedMatch_choice_Items2 EventProposedMatch_items_2
    | EventProposedMatch_choice_Novation TradeNovationContent
    | EventProposedMatch_choice_Withdrawal Withdrawal
    | EventProposedMatch_choice_Change TradeChangeContent
    | EventProposedMatch_choice_OptionExercise OptionExercise
      -- ^ A structure describing an option exercise event. The
      --   optionExercise event supports partial exercise
      --   (specify the number of options or amount to
      --   exercise), full exercise (use fullExercise flag), as
      --   well as the option to request options not to be
      --   exercised.
    | EventProposedMatch_choice_OptionExpiry [OptionExpiry]
      -- ^ A structure describing an option expiring event (i.e.
      --   passing its last exercise time and becoming
      --   worthless.)
    | EventProposedMatch_choice_OptionEvent OptionEvent
      -- ^ A structure describing knock in, knock out, touch and
      --   no touch events.
    | EventProposedMatch_choice_AdditionalEvent AdditionalEvent
      -- ^ The additionalEvent element is an
      --   extension/substitution point to customize FpML and
      --   add additional events.
    deriving (Eq, Ord, Show)

-- | A record type used inside EventProposedMatch
data EventProposedMatch_items = EventProposedMatch_items with
    originatingEvent : Optional OriginatingEvent
    trade : Trade
      deriving (Eq, Ord, Show)

-- | A record type used inside EventProposedMatch
data EventProposedMatch_items_2 = EventProposedMatch_items_2 with
    terminatingEvent : Optional TerminatingEvent
        -- ^ This may be used to describe why a trade was
        --   terminated.
    termination : TradeNotionalChange
      deriving (Eq, Ord, Show)

-- | Defines the structure for a message acknowledging an
--   event request.
data EventRequestAcknowledgement = EventRequestAcknowledgement with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : ResponseMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequence_model : Optional EventRequestAcknowledgement_Sequence_model
    onBehalfOf_model : Optional EventRequestAcknowledgement_OnBehalfOf_model
    originalMessage : Optional UnprocessedElementWrapper
    tradeReferenceInformation_model : Optional EventRequestAcknowledgement_TradeReferenceInformation_model
    partiesAndAccounts_model : Optional EventRequestAcknowledgement_PartiesAndAccounts_model
      deriving (Eq, Ord, Show)

-- | A record type used inside EventRequestAcknowledgement
data EventRequestAcknowledgement_OnBehalfOf_model = EventRequestAcknowledgement_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside EventRequestAcknowledgement
data EventRequestAcknowledgement_PartiesAndAccounts_model = EventRequestAcknowledgement_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A record type used inside EventRequestAcknowledgement
data EventRequestAcknowledgement_Sequence_model = EventRequestAcknowledgement_Sequence_model with
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside EventRequestAcknowledgement
data EventRequestAcknowledgement_TradeReferenceInformation_model = EventRequestAcknowledgement_TradeReferenceInformation_model with
    tradeReferenceInformation : TradeReferenceInformation
        -- ^ Information about a trade.
      deriving (Eq, Ord, Show)

-- | A coding scheme used to describe the
--   matching/confirmation status of a trade, post-trade
--   event, position, or cash flows.
data EventStatus = EventStatus with
    eventStatusScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type used in event status enquiry messages which
--   relates an event identifier to its current status
--   value.
data EventStatusItem = EventStatusItem with
    eventIdentifier : EventIdentifier
        -- ^ An instance of a unique event identifier.
    status : EventStatus
        -- ^ An event status value.
      deriving (Eq, Ord, Show)

-- | A type defining the content model for a message
--   normally generated in response to a
--   requestEventStatus request.
data EventStatusResponse = EventStatusResponse with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : ResponseMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequence_model : Optional EventStatusResponse_Sequence_model
    onBehalfOf_model : Optional EventStatusResponse_OnBehalfOf_model
    statusItem : [EventStatusItem]
    partiesAndAccounts_model : Optional EventStatusResponse_PartiesAndAccounts_model
      deriving (Eq, Ord, Show)

-- | A record type used inside EventStatusResponse
data EventStatusResponse_OnBehalfOf_model = EventStatusResponse_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside EventStatusResponse
data EventStatusResponse_PartiesAndAccounts_model = EventStatusResponse_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A record type used inside EventStatusResponse
data EventStatusResponse_Sequence_model = EventStatusResponse_Sequence_model with
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

data EventsChoice
    = EventsChoice_Choice_1 EventsChoice_choice
    | EventsChoice_Choice_2 EventsChoice_choice_2
    | EventsChoice_Change TradeChangeContent
    | EventsChoice_Choice_3 EventsChoice_choice_3
    | EventsChoice_AdditionalEvent AdditionalEvent
      -- ^ The additionalEvent element is an
      --   extension/substitution point to customize FpML and
      --   add additional events.
    deriving (Eq, Ord, Show)

-- | A variant type used inside EventsChoice
data EventsChoice_choice
    = EventsChoice_choice_TradePackage TradePackage
    | EventsChoice_choice_Items EventsChoice_items
    deriving (Eq, Ord, Show)

-- | A variant type used inside EventsChoice
data EventsChoice_choice_2
    = EventsChoice_choice_2_Amendment TradeAmendmentContent
    | EventsChoice_choice_2_Increase TradeNotionalChange
    | EventsChoice_choice_2_Items EventsChoice_items_2
    | EventsChoice_choice_2_Novation TradeNovationContent
    | EventsChoice_choice_2_Withdrawal Withdrawal
    deriving (Eq, Ord, Show)

-- | A variant type used inside EventsChoice
data EventsChoice_choice_3
    = EventsChoice_choice_3_OptionExercise OptionExercise
      -- ^ A structure describing an option exercise event. The
      --   optionExercise event supports partial exercise
      --   (specify the number of options or amount to
      --   exercise), full exercise (use fullExercise flag), as
      --   well as the option to request options not to be
      --   exercised.
    | EventsChoice_choice_3_OptionExpiry [OptionExpiry]
      -- ^ A structure describing an option expiring event (i.e.
      --   passing its last exercise time and becoming
      --   worthless.)
    | EventsChoice_choice_3_OptionEvent OptionEvent
      -- ^ A structure describing knock in, knock out, touch and
      --   no touch events.
    deriving (Eq, Ord, Show)

-- | A record type used inside EventsChoice
data EventsChoice_items = EventsChoice_items with
    originatingEvent : Optional OriginatingEvent
    trade : Trade
      deriving (Eq, Ord, Show)

-- | A record type used inside EventsChoice
data EventsChoice_items_2 = EventsChoice_items_2 with
    terminatingEvent : Optional TerminatingEvent
        -- ^ This may be used to describe why a trade was
        --   terminated.
    termination : TradeNotionalChange
      deriving (Eq, Ord, Show)

-- | A type defining the basic content for a message sent
--   to inform another system that some exception has been
--   detected.
data Exception = Exception with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : ExceptionMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    correlationAndOptionalSequence_model : Optional Exception_CorrelationAndOptionalSequence_model
    reason : [Reason]
        -- ^ An instance of the Reason type used to record the
        --   nature of any errors associated with a message.
    additionalData : Optional AdditionalData
        -- ^ Any string of additional data that may help the
        --   message processor, for example in a rejection message
        --   this might contain a code value or the text of the
        --   original request (within a CDATA section).
      deriving (Eq, Ord, Show)

-- | A type defining the content model for an exception
--   message header.
data ExceptionMessageHeader = ExceptionMessageHeader with
    messageId : MessageId
        -- ^ A unique identifier (within its coding scheme)
        --   assigned to the message by its creating party.
    inReplyTo : Optional MessageId
        -- ^ A copy of the unique message identifier (within it
        --   own coding scheme) to which this message is
        --   responding.
    sentBy : MessageAddress
        -- ^ The unique identifier (within its coding scheme) for
        --   the originator of a message instance.
    sendTo : [MessageAddress]
        -- ^ A unique identifier (within its coding scheme)
        --   indicating an intended recipent of a message.
    copyTo : [MessageAddress]
        -- ^ A unique identifier (within the specified coding
        --   scheme) giving the details of some party to whom a
        --   copy of this message will be sent for reference.
    creationTimestamp : Time
        -- ^ The date and time (on the source system) when this
        --   message instance was created.
    expiryTimestamp : Optional Time
        -- ^ The date and time (on the source system) when this
        --   message instance will be considered expired.
    implementationSpecification : Optional ImplementationSpecification
        -- ^ The version(s) of specifications that the sender
        --   asserts the message was developed for.
    partyMessageInformation : [PartyMessageInformation]
        -- ^ Additional message information that may be provided
        --   by each involved party.
      deriving (Eq, Ord, Show)

-- | A record type used inside Exception
data Exception_CorrelationAndOptionalSequence_model = Exception_CorrelationAndOptionalSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequence_model : Optional Exception_Sequence_model
      deriving (Eq, Ord, Show)

-- | A record type used inside Exception
data Exception_Sequence_model = Exception_Sequence_model with
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A short form unique identifier for an exchange. If
--   the element is not present then the exchange shall be
--   the primary exchange on which the underlying is
--   listed. The term "Exchange" is assumed to have the
--   meaning as defined in the ISDA 2002 Equity
--   Derivatives Definitions.
data ExchangeId = ExchangeId with
    exchangeIdScheme : Optional NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

-- | A type that is used for describing the exchange rate
--   for a particular transaction.
data ExchangeRate = ExchangeRate with
    quotedCurrencyPair : QuotedCurrencyPair
        -- ^ Defines the two currencies for an FX trade and the
        --   quotation relationship between the two currencies.
    rate : PositiveDecimal
        -- ^ The rate of exchange between the two currencies of
        --   the leg of a deal. Must be specified with a quote
        --   basis.
    sequence_ : Optional ExchangeRate_sequence_2
    crossRate : [CrossRate]
        -- ^ An optional element that allow for definition of the
        --   currency exchange rates used to cross between the
        --   traded currencies for non-base currency FX contracts.
      deriving (Eq, Ord, Show)

-- | A record type used inside ExchangeRate
data ExchangeRate_sequence = ExchangeRate_sequence with
    forwardPoints : Decimal
        -- ^ An optional element used for deals consumated in the
        --   FX Forwards market. Forward points represent the
        --   interest rate differential between the two currencies
        --   traded and are quoted as a preminum or a discount.
        --   Forward points are added to, or subtracted from, the
        --   spot rate to create the rate of the forward trade.
    pointValue : Optional PointValue
        -- ^ An optional element that documents the size of point
        --   (pip) in which a rate was quoted (or in this case,
        --   forwardPoints are calculated). Point (pip) size
        --   varies by currency pair: major currencies are all
        --   traded in points of 0.0001, with the exception of JPY
        --   which has a point size of 0.01.
      deriving (Eq, Ord, Show)

-- | A record type used inside ExchangeRate
data ExchangeRate_sequence_2 = ExchangeRate_sequence_2 with
    spotRate : PositiveDecimal
        -- ^ An element used for FX forwards and certain types of
        --   FX OTC options. For deals consumated in the FX
        --   Forwards Market, this represents the current market
        --   rate for a particular currency pair. For barrier and
        --   digital/binary options, it can be useful to include
        --   the spot rate at the time the option was executed to
        --   make it easier to know whether the option needs to
        --   move "up" or "down" to be triggered.
    sequence_ : Optional ExchangeRate_sequence
      deriving (Eq, Ord, Show)

-- | An abstract base class for all exchange traded
--   financial products.
data ExchangeTraded
    = ExchangeTraded_Future Future
    | ExchangeTraded_ExchangeTradedContract ExchangeTradedContract
    | ExchangeTraded_ExchangeTradedOption ExchangeTradedOption
    | ExchangeTraded_Index Index
    | ExchangeTraded_ExchangeTradedFund ExchangeTradedFund
    | ExchangeTraded_EquityAsset EquityAsset
    deriving (Eq, Ord, Show)

-- | Abstract base class for all exchange traded financial
--   products with a price which is calculated from
--   exchange traded constituents.
data ExchangeTradedCalculatedPrice
    = ExchangeTradedCalculatedPrice_Index Index
    | ExchangeTradedCalculatedPrice_ExchangeTradedFund ExchangeTradedFund
    deriving (Eq, Ord, Show)

-- | An exchange traded derivative contract.
data ExchangeTradedContract = ExchangeTradedContract with
    id_ : Optional Text
    instrumentId : [InstrumentId]
        -- ^ Identification of the underlying asset, using public
        --   and/or private identifiers.
    description : Optional String
        -- ^ Long name of the underlying asset.
    currency : Optional IdentifiedCurrency
        -- ^ Trading currency of the underlyer when transacted as
        --   a cash instrument.
    exchangeId : Optional ExchangeId
        -- ^ Identification of the exchange on which this asset is
        --   transacted for the purposes of calculating a
        --   contractural payoff. The term "Exchange" is assumed
        --   to have the meaning as defined in the ISDA 2002
        --   Equity Derivatives Definitions.
    clearanceSystem : Optional ClearanceSystem
        -- ^ Identification of the clearance system associated
        --   with the transaction exchange.
    definition : Optional ProductReference
        -- ^ An optional reference to a full FpML product that
        --   defines the simple product in greater detail. In case
        --   of inconsistency between the terms of the simple
        --   product and those of the detailed definition, the
        --   values in the simple product override those in the
        --   detailed definition.
    relatedExchangeId : [ExchangeId]
        -- ^ A short form unique identifier for a related
        --   exchange. If the element is not present then the
        --   exchange shall be the primary exchange on which
        --   listed futures and options on the underlying are
        --   listed. The term "Exchange" is assumed to have the
        --   meaning as defined in the ISDA 2002 Equity
        --   Derivatives Definitions.
    optionsExchangeId : [ExchangeId]
        -- ^ A short form unique identifier for an exchange on
        --   which the reference option contract is listed. This
        --   is to address the case where the reference exchange
        --   for the future is different than the one for the
        --   option. The options Exchange is referenced on share
        --   options when Merger Elections are selected as Options
        --   Exchange Adjustment.
    specifiedExchangeId : [ExchangeId]
        -- ^ A short form unique identifier for a specified
        --   exchange. If the element is not present then the
        --   exchange shall be default terms as defined in the
        --   MCA; unless otherwise specified in the Transaction
        --   Supplement.
    multiplier : Optional PositiveDecimal
        -- ^ Specifies the contract multiplier that can be
        --   associated with the number of units.
    contractReference : Optional String
        -- ^ Specifies the contract that can be referenced,
        --   besides the undelyer type.
    expirationDate : Optional AdjustableOrRelativeDate
        -- ^ The date when the contract expires.
      deriving (Eq, Ord, Show)

-- | A type describing a single underlyer
data ExchangeTradedContractUnderlyer
    = ExchangeTradedContractUnderlyer_Items ExchangeTradedContractUnderlyer_items
    | ExchangeTradedContractUnderlyer_QuotedCurrencyPair QuotedCurrencyPair
      -- ^ Defines the two currencies for an FX trade and the
      --   quotation relationship between the two currencies.
    | ExchangeTradedContractUnderlyer_UnderlyingAsset [Asset]
      -- ^ Define the underlying asset, either a listed security
      --   or other instrument.
    deriving (Eq, Ord, Show)

-- | A record type used inside
--   ExchangeTradedContractUnderlyer
data ExchangeTradedContractUnderlyer_items = ExchangeTradedContractUnderlyer_items with
    floatingRateIndex : FloatingRateIndex
    indexTenor : Optional Period
        -- ^ The ISDA Designated Maturity, i.e. the tenor of the
        --   floating rate.
      deriving (Eq, Ord, Show)

-- | An exchange traded fund whose price depends on
--   exchange traded constituents.
data ExchangeTradedFund = ExchangeTradedFund with
    id_ : Optional Text
    instrumentId : [InstrumentId]
        -- ^ Identification of the underlying asset, using public
        --   and/or private identifiers.
    description : Optional String
        -- ^ Long name of the underlying asset.
    currency : Optional IdentifiedCurrency
        -- ^ Trading currency of the underlyer when transacted as
        --   a cash instrument.
    exchangeId : Optional ExchangeId
        -- ^ Identification of the exchange on which this asset is
        --   transacted for the purposes of calculating a
        --   contractural payoff. The term "Exchange" is assumed
        --   to have the meaning as defined in the ISDA 2002
        --   Equity Derivatives Definitions.
    clearanceSystem : Optional ClearanceSystem
        -- ^ Identification of the clearance system associated
        --   with the transaction exchange.
    definition : Optional ProductReference
        -- ^ An optional reference to a full FpML product that
        --   defines the simple product in greater detail. In case
        --   of inconsistency between the terms of the simple
        --   product and those of the detailed definition, the
        --   values in the simple product override those in the
        --   detailed definition.
    relatedExchangeId : [ExchangeId]
        -- ^ A short form unique identifier for a related
        --   exchange. If the element is not present then the
        --   exchange shall be the primary exchange on which
        --   listed futures and options on the underlying are
        --   listed. The term "Exchange" is assumed to have the
        --   meaning as defined in the ISDA 2002 Equity
        --   Derivatives Definitions.
    optionsExchangeId : [ExchangeId]
        -- ^ A short form unique identifier for an exchange on
        --   which the reference option contract is listed. This
        --   is to address the case where the reference exchange
        --   for the future is different than the one for the
        --   option. The options Exchange is referenced on share
        --   options when Merger Elections are selected as Options
        --   Exchange Adjustment.
    specifiedExchangeId : [ExchangeId]
        -- ^ A short form unique identifier for a specified
        --   exchange. If the element is not present then the
        --   exchange shall be default terms as defined in the
        --   MCA; unless otherwise specified in the Transaction
        --   Supplement.
    constituentExchangeId : [ExchangeId]
        -- ^ Identification of all the exchanges where
        --   constituents are traded. The term "Exchange" is
        --   assumed to have the meaning as defined in the ISDA
        --   2002 Equity Derivatives Definitions.
    fundManager : Optional String
        -- ^ Specifies the fund manager that is in charge of the
        --   fund.
      deriving (Eq, Ord, Show)

-- | An exchange traded option.
data ExchangeTradedOption = ExchangeTradedOption with
    id_ : Optional Text
    instrumentId : [InstrumentId]
        -- ^ Identification of the underlying asset, using public
        --   and/or private identifiers.
    description : Optional String
        -- ^ Long name of the underlying asset.
    currency : Optional IdentifiedCurrency
        -- ^ Trading currency of the underlyer when transacted as
        --   a cash instrument.
    exchangeId : Optional ExchangeId
        -- ^ Identification of the exchange on which this asset is
        --   transacted for the purposes of calculating a
        --   contractural payoff. The term "Exchange" is assumed
        --   to have the meaning as defined in the ISDA 2002
        --   Equity Derivatives Definitions.
    clearanceSystem : Optional ClearanceSystem
        -- ^ Identification of the clearance system associated
        --   with the transaction exchange.
    definition : Optional ProductReference
        -- ^ An optional reference to a full FpML product that
        --   defines the simple product in greater detail. In case
        --   of inconsistency between the terms of the simple
        --   product and those of the detailed definition, the
        --   values in the simple product override those in the
        --   detailed definition.
    relatedExchangeId : [ExchangeId]
        -- ^ A short form unique identifier for a related
        --   exchange. If the element is not present then the
        --   exchange shall be the primary exchange on which
        --   listed futures and options on the underlying are
        --   listed. The term "Exchange" is assumed to have the
        --   meaning as defined in the ISDA 2002 Equity
        --   Derivatives Definitions.
    optionsExchangeId : [ExchangeId]
        -- ^ A short form unique identifier for an exchange on
        --   which the reference option contract is listed. This
        --   is to address the case where the reference exchange
        --   for the future is different than the one for the
        --   option. The options Exchange is referenced on share
        --   options when Merger Elections are selected as Options
        --   Exchange Adjustment.
    specifiedExchangeId : [ExchangeId]
        -- ^ A short form unique identifier for a specified
        --   exchange. If the element is not present then the
        --   exchange shall be default terms as defined in the
        --   MCA; unless otherwise specified in the Transaction
        --   Supplement.
    multiplier : Optional PositiveDecimal
        -- ^ Specifies the contract multiplier that can be
        --   associated with the number of units.
    contractReference : Optional String
        -- ^ Specifies the contract that can be referenced,
        --   besides the undelyer type.
    expirationDate : Optional AdjustableOrRelativeDate
        -- ^ The date when the contract expires.
    sequence_ : Optional ExchangeTradedOption_sequence
    optionType : Optional PutCallEnum
        -- ^ Specifies whether the option allows the holder to buy
        --   or sell tne underlying asset.
    exerciseStyle : Optional ExerciseStyleEnum
        -- ^ Specifies the exercise style of the option {American,
        --   Bermuda, European}
    underlyer : Optional ExchangeTradedContractUnderlyer
        -- ^ Underlyer of the option e.g. a listed future.
    settlementType : Optional SettlementTypeEnum
        -- ^ Settlement method for the contract (Cash, Physical).
        --   This value is used to populate the "Delivery Type"
        --   field for regulatory reporting (CFTC, ESMA).
      deriving (Eq, Ord, Show)

-- | A record type used inside ExchangeTradedOption
data ExchangeTradedOption_sequence = ExchangeTradedOption_sequence with
    strike : Decimal
        -- ^ Specifies the price at which the option can be
        --   exercised.
    strikeCurrency : Optional Currency
        -- ^ The currency in which the strike of the option is
        --   expressed.
    strikeUnits : Optional PriceQuoteUnits
        -- ^ Units in which the option strike is expressed e.g.
        --   currency Amount, BasisPoints, Percentage, Rate.
        --   Reportable reference data under MiFID RTS 22
      deriving (Eq, Ord, Show)

-- | A message advising a third party that a trade
--   execution has occurred.
data ExecutionAdvice = ExecutionAdvice with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    isCorrection : Bool
        -- ^ Indicates if this message corrects an earlier
        --   request.
    correlationAndSequence_model : Optional ExecutionAdvice_CorrelationAndSequence_model
    onBehalfOf_model : Optional ExecutionAdvice_OnBehalfOf_model
    productType : Optional ProductType
    choice_ : ExecutionAdvice_choice
    eventValuation_model : Optional ExecutionAdvice_EventValuation_model
    paymentDetails : [PaymentDetails]
        -- ^ Details of the payments, like amount breakdowns,
        --   settlement information.
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A message that withdraws an advice to a third party
--   that a trade execution has occurred.
data ExecutionAdviceRetracted = ExecutionAdviceRetracted with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    correlationAndSequence_model : Optional ExecutionAdviceRetracted_CorrelationAndSequence_model
    onBehalfOf_model : Optional ExecutionAdviceRetracted_OnBehalfOf_model
    choice_ : Optional ExecutionAdviceRetracted_choice
    paymentDetails : [PaymentDetails]
        -- ^ Details of the payments, like amount breakdowns,
        --   settlement information.
    partiesAndAccounts_model : Optional ExecutionAdviceRetracted_PartiesAndAccounts_model
      deriving (Eq, Ord, Show)

-- | A record type used inside ExecutionAdviceRetracted
data ExecutionAdviceRetracted_CorrelationAndSequence_model = ExecutionAdviceRetracted_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside ExecutionAdviceRetracted
data ExecutionAdviceRetracted_OnBehalfOf_model = ExecutionAdviceRetracted_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside ExecutionAdviceRetracted
data ExecutionAdviceRetracted_PartiesAndAccounts_model = ExecutionAdviceRetracted_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A variant type used inside ExecutionAdviceRetracted
data ExecutionAdviceRetracted_choice
    = ExecutionAdviceRetracted_choice_TradePackage TradePackage
    | ExecutionAdviceRetracted_choice_Items1 ExecutionAdviceRetracted_items
    | ExecutionAdviceRetracted_choice_Amendment TradeAmendmentContent
    | ExecutionAdviceRetracted_choice_Increase TradeNotionalChange
    | ExecutionAdviceRetracted_choice_Items2 ExecutionAdviceRetracted_items_2
    | ExecutionAdviceRetracted_choice_Novation TradeNovationContent
    | ExecutionAdviceRetracted_choice_Withdrawal Withdrawal
    | ExecutionAdviceRetracted_choice_Change TradeChangeContent
    | ExecutionAdviceRetracted_choice_OptionExercise OptionExercise
      -- ^ A structure describing an option exercise event. The
      --   optionExercise event supports partial exercise
      --   (specify the number of options or amount to
      --   exercise), full exercise (use fullExercise flag), as
      --   well as the option to request options not to be
      --   exercised.
    | ExecutionAdviceRetracted_choice_OptionExpiry [OptionExpiry]
      -- ^ A structure describing an option expiring event (i.e.
      --   passing its last exercise time and becoming
      --   worthless.)
    | ExecutionAdviceRetracted_choice_OptionEvent OptionEvent
      -- ^ A structure describing knock in, knock out, touch and
      --   no touch events.
    | ExecutionAdviceRetracted_choice_AdditionalEvent AdditionalEvent
      -- ^ The additionalEvent element is an
      --   extension/substitution point to customize FpML and
      --   add additional events.
    deriving (Eq, Ord, Show)

-- | A record type used inside ExecutionAdviceRetracted
data ExecutionAdviceRetracted_items = ExecutionAdviceRetracted_items with
    originatingEvent : Optional OriginatingEvent
    trade : Trade
      deriving (Eq, Ord, Show)

-- | A record type used inside ExecutionAdviceRetracted
data ExecutionAdviceRetracted_items_2 = ExecutionAdviceRetracted_items_2 with
    terminatingEvent : Optional TerminatingEvent
        -- ^ This may be used to describe why a trade was
        --   terminated.
    termination : TradeNotionalChange
      deriving (Eq, Ord, Show)

-- | A record type used inside ExecutionAdvice
data ExecutionAdvice_CorrelationAndSequence_model = ExecutionAdvice_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside ExecutionAdvice
data ExecutionAdvice_EventValuation_model = ExecutionAdvice_EventValuation_model with
    quote : [BasicQuotation]
        -- ^ Pricing information for the trade.
      deriving (Eq, Ord, Show)

-- | A record type used inside ExecutionAdvice
data ExecutionAdvice_OnBehalfOf_model = ExecutionAdvice_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A variant type used inside ExecutionAdvice
data ExecutionAdvice_choice
    = ExecutionAdvice_choice_TradePackage TradePackage
    | ExecutionAdvice_choice_Items1 ExecutionAdvice_items
    | ExecutionAdvice_choice_Amendment TradeAmendmentContent
    | ExecutionAdvice_choice_Increase TradeNotionalChange
    | ExecutionAdvice_choice_Items2 ExecutionAdvice_items_2
    | ExecutionAdvice_choice_Novation TradeNovationContent
    | ExecutionAdvice_choice_Withdrawal Withdrawal
    | ExecutionAdvice_choice_Change TradeChangeContent
    | ExecutionAdvice_choice_OptionExercise OptionExercise
      -- ^ A structure describing an option exercise event. The
      --   optionExercise event supports partial exercise
      --   (specify the number of options or amount to
      --   exercise), full exercise (use fullExercise flag), as
      --   well as the option to request options not to be
      --   exercised.
    | ExecutionAdvice_choice_OptionExpiry [OptionExpiry]
      -- ^ A structure describing an option expiring event (i.e.
      --   passing its last exercise time and becoming
      --   worthless.)
    | ExecutionAdvice_choice_OptionEvent OptionEvent
      -- ^ A structure describing knock in, knock out, touch and
      --   no touch events.
    | ExecutionAdvice_choice_AdditionalEvent AdditionalEvent
      -- ^ The additionalEvent element is an
      --   extension/substitution point to customize FpML and
      --   add additional events.
    deriving (Eq, Ord, Show)

-- | A record type used inside ExecutionAdvice
data ExecutionAdvice_items = ExecutionAdvice_items with
    originatingEvent : Optional OriginatingEvent
    trade : Trade
      deriving (Eq, Ord, Show)

-- | A record type used inside ExecutionAdvice
data ExecutionAdvice_items_2 = ExecutionAdvice_items_2 with
    terminatingEvent : Optional TerminatingEvent
        -- ^ This may be used to describe why a trade was
        --   terminated.
    termination : TradeNotionalChange
      deriving (Eq, Ord, Show)

-- | A type defining the trade execution date time and the
--   source of it. For use inside containing types which
--   already have a Reference to a Party that has assigned
--   this trade execution date time.
data ExecutionDateTime = ExecutionDateTime with
    executionDateTimeScheme : Optional NonEmptyURI
        -- ^ Identification of the source (e.g. clock id)
        --   generating the execution date time.
    content : Time
      deriving (Eq, Ord, Show)

-- | A message notifying a party that a trade execution
--   has occurred. (Typically this is sent by an execution
--   platform to a participant.)
data ExecutionNotification = ExecutionNotification with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    isCorrection : Bool
        -- ^ Indicates if this message corrects an earlier
        --   request.
    correlationAndSequence_model : Optional ExecutionNotification_CorrelationAndSequence_model
    onBehalfOf_model : Optional ExecutionNotification_OnBehalfOf_model
    choice_ : ExecutionNotification_choice
    eventValuation_model : Optional ExecutionNotification_EventValuation_model
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A record type used inside ExecutionNotification
data ExecutionNotification_CorrelationAndSequence_model = ExecutionNotification_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside ExecutionNotification
data ExecutionNotification_EventValuation_model = ExecutionNotification_EventValuation_model with
    quote : [BasicQuotation]
        -- ^ Pricing information for the trade.
      deriving (Eq, Ord, Show)

-- | A record type used inside ExecutionNotification
data ExecutionNotification_OnBehalfOf_model = ExecutionNotification_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A variant type used inside ExecutionNotification
data ExecutionNotification_choice
    = ExecutionNotification_choice_TradePackage TradePackage
    | ExecutionNotification_choice_Items ExecutionNotification_items
    | ExecutionNotification_choice_Amendment TradeAmendmentContent
    | ExecutionNotification_choice_OptionExercise OptionExercise
      -- ^ A structure describing an option exercise event. The
      --   optionExercise event supports partial exercise
      --   (specify the number of options or amount to
      --   exercise), full exercise (use fullExercise flag), as
      --   well as the option to request options not to be
      --   exercised.
    | ExecutionNotification_choice_OptionExpiry [OptionExpiry]
      -- ^ A structure describing an option expiring event (i.e.
      --   passing its last exercise time and becoming
      --   worthless.)
    | ExecutionNotification_choice_OptionEvent OptionEvent
      -- ^ A structure describing knock in, knock out, touch and
      --   no touch events.
    | ExecutionNotification_choice_AdditionalEvent AdditionalEvent
      -- ^ The additionalEvent element is an
      --   extension/substitution point to customize FpML and
      --   add additional events.
    deriving (Eq, Ord, Show)

-- | A record type used inside ExecutionNotification
data ExecutionNotification_items = ExecutionNotification_items with
    originatingEvent : Optional OriginatingEvent
    trade : Trade
      deriving (Eq, Ord, Show)

-- | A message retracting a notification to a party that a
--   trade execution has occurred. (Typically this is sent
--   by an execution platform to a participant.)
data ExecutionRetracted = ExecutionRetracted with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    correlationAndSequence_model : Optional ExecutionRetracted_CorrelationAndSequence_model
    onBehalfOf_model : Optional ExecutionRetracted_OnBehalfOf_model
    choice_ : Optional ExecutionRetracted_choice
    partiesAndAccounts_model : Optional ExecutionRetracted_PartiesAndAccounts_model
      deriving (Eq, Ord, Show)

-- | A record type used inside ExecutionRetracted
data ExecutionRetracted_CorrelationAndSequence_model = ExecutionRetracted_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside ExecutionRetracted
data ExecutionRetracted_OnBehalfOf_model = ExecutionRetracted_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside ExecutionRetracted
data ExecutionRetracted_PartiesAndAccounts_model = ExecutionRetracted_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A variant type used inside ExecutionRetracted
data ExecutionRetracted_choice
    = ExecutionRetracted_choice_TradePackage TradePackage
    | ExecutionRetracted_choice_Items ExecutionRetracted_items
    | ExecutionRetracted_choice_AdditionalEvent AdditionalEvent
      -- ^ The additionalEvent element is an
      --   extension/substitution point to customize FpML and
      --   add additional events.
    | ExecutionRetracted_choice_OptionExercise OptionExercise
      -- ^ A structure describing an option exercise event. The
      --   optionExercise event supports partial exercise
      --   (specify the number of options or amount to
      --   exercise), full exercise (use fullExercise flag), as
      --   well as the option to request options not to be
      --   exercised.
    deriving (Eq, Ord, Show)

-- | A record type used inside ExecutionRetracted
data ExecutionRetracted_items = ExecutionRetracted_items with
    originatingEvent : Optional OriginatingEvent
    trade : Trade
      deriving (Eq, Ord, Show)

-- | A type used to represent the type of market where a
--   trade can be executed.
data ExecutionType = ExecutionType with
    executionTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type used to represent the type of market where a
--   trade can be executed.
data ExecutionVenueType = ExecutionVenueType with
    executionVenueTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The abstract base class for all types which define
--   way in which options may be exercised.
data Exercise
    = Exercise_EuropeanExercise EuropeanExercise
    | Exercise_BermudaExercise BermudaExercise
    | Exercise_AmericanExercise AmericanExercise
    | Exercise_CommodityPhysicalEuropeanExercise CommodityPhysicalEuropeanExercise
    | Exercise_CommodityPhysicalAmericanExercise CommodityPhysicalAmericanExercise
    | Exercise_CommodityEuropeanExercise CommodityEuropeanExercise
    | Exercise_CommodityAmericanExercise CommodityAmericanExercise
    | Exercise_FxEuropeanExercise FxEuropeanExercise
    | Exercise_FxDigitalAmericanExercise FxDigitalAmericanExercise
    | Exercise_FxAmericanExercise FxAmericanExercise
    | Exercise_SharedAmericanExercise SharedAmericanExercise
    deriving (Eq, Ord, Show)

-- | The specification of whether an OTC option will be
--   exercised.
data ExerciseActionEnum
    = ExerciseActionEnum_FullExercise ()
      -- ^ The option was or is to be exercised fully.
    | ExerciseActionEnum_PartialExercise ()
      -- ^ The option was or is to be exercised partially. The
      --   amount of the exercise is specified elsewhere in the
      --   document than in the exercise amount; for example, in
      --   the case of a physical exercise the size of the
      --   resulting trade is the same as the amount that was
      --   exercise, so if it is specified it is not necessary
      --   to specify the amount of the partial exercise.
    | ExerciseActionEnum_Abandon ()
      -- ^ The option was or is to be allowed to expire without
      --   being exercised, i.e. it is being abandoned.
    deriving (Eq, Ord, Show)

-- | Contents for base type Exercise
data ExerciseContents = ExerciseContents with
    id_ : Optional Text
      deriving (Eq, Ord, Show)

-- | A type defining the fee payable on exercise of an
--   option. This fee may be defined as an amount or a
--   percentage of the notional exercised.
data ExerciseFee = ExerciseFee with
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    notionalReference : NotionalReference
        -- ^ A pointer style reference to the associated notional
        --   schedule defined elsewhere in the document.
    choice_ : ExerciseFee_choice
    feePaymentDate : RelativeDateOffset
        -- ^ The date on which exercise fee(s) will be paid. It is
        --   specified as a relative date.
      deriving (Eq, Ord, Show)

-- | A type to define a fee or schedule of fees to be
--   payable on the exercise of an option. This fee may be
--   defined as an amount or a percentage of the notional
--   exercised.
data ExerciseFeeSchedule = ExerciseFeeSchedule with
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    notionalReference : ScheduleReference
        -- ^ A pointer style reference to the associated notional
        --   schedule defined elsewhere in the document.
    choice_ : ExerciseFeeSchedule_choice
    feePaymentDate : RelativeDateOffset
        -- ^ The date on which exercise fee(s) will be paid. It is
        --   specified as a relative date.
      deriving (Eq, Ord, Show)

-- | A variant type used inside ExerciseFeeSchedule
data ExerciseFeeSchedule_choice
    = ExerciseFeeSchedule_choice_FeeAmountSchedule AmountSchedule
      -- ^ The exercise fee amount schedule. The fees are
      --   expressed as currency amounts. The currency of the
      --   fee is assumed to be that of the notional schedule
      --   referenced.
    | ExerciseFeeSchedule_choice_FeeRateSchedule Schedule
      -- ^ The exercise free rate schedule. The fees are
      --   expressed as percentage rates of the notional being
      --   exercised. The currency of the fee is assumed to be
      --   that of the notional schedule referenced.
    deriving (Eq, Ord, Show)

-- | A variant type used inside ExerciseFee
data ExerciseFee_choice
    = ExerciseFee_choice_FeeAmount Decimal
      -- ^ The amount of fee to be paid on exercise. The fee
      --   currency is that of the referenced notional.
    | ExerciseFee_choice_FeeRate Decimal
      -- ^ A fee represented as a percentage of some referenced
      --   notional. A percentage of 5% would be represented as
      --   0.05.
    deriving (Eq, Ord, Show)

-- | A type defining to whom and where notice of execution
--   should be given. The partyReference refers to one of
--   the principal parties of the trade. If present the
--   exerciseNoticePartyReference refers to a party, other
--   than the principal party, to whome notice should be
--   given.
data ExerciseNotice = ExerciseNotice with
    partyReference : PartyReference
        -- ^ The party referenced has allocated the trade
        --   identifier.
    exerciseNoticePartyReference : Optional PartyReference
        -- ^ The party referenced is the party to which notice of
        --   exercise should be given by the buyer.
    businessCenter : BusinessCenter
      deriving (Eq, Ord, Show)

-- | A type describing how notice of exercise should be
--   given. This can be either manual or automatic.
data ExerciseProcedure = ExerciseProcedure with
    choice_ : ExerciseProcedure_choice
    followUpConfirmation : Bool
        -- ^ A flag to indicate whether follow-up confirmation of
        --   exercise (written or electronic) is required
        --   following telephonic notice by the buyer to the
        --   seller or seller's agent.
    limitedRightToConfirm : Optional Bool
        -- ^ Has the meaning defined as part of the 1997 ISDA
        --   Government Bond Option Definitions, section 4.5
        --   Limited Right to Confirm Exercise. If present, (i)
        --   the Seller may request the Buyer to confirm its
        --   intent if not done on or before the expiration time
        --   on the Expiration date (ii) specific rules will apply
        --   in relation to the settlement mode.
    splitTicket : Optional Bool
        -- ^ Typically applicable to the physical settlement of
        --   bond and convertible bond options. If present, means
        --   that the Party required to deliver the bonds will
        --   divide those to be delivered as notifying party
        --   desires to facilitate delivery obligations.
      deriving (Eq, Ord, Show)

-- | A type describing how notice of exercise should be
--   given. This can be either manual or automatic.
data ExerciseProcedureOption
    = ExerciseProcedureOption_ManualExercise Empty
      -- ^ Specifies that the notice of exercise must be given
      --   by the buyer to the seller or seller's agent.
    | ExerciseProcedureOption_AutomaticExercise Empty
      -- ^ If automatic is specified then the notional amount of
      --   the underlying swap, not previously exercised under
      --   the swaption will be automatically exercised at the
      --   expriration time on the expiration date if at such
      --   time the buyer is in-the-money, provided that the
      --   difference between the settlement rate and the fixed
      --   rate under the relevant underlying swap is not less
      --   than the specified threshold rate. The term
      --   in-the-money is assumed to have the meaning defining
      --   in the 2000 ISDA Definitions, Section 17.4
      --   In-the-money.
    deriving (Eq, Ord, Show)

-- | A variant type used inside ExerciseProcedure
data ExerciseProcedure_choice
    = ExerciseProcedure_choice_ManualExercise ManualExercise
      -- ^ Specifies that the notice of exercise must be given
      --   by the buyer to the seller or seller's agent.
    | ExerciseProcedure_choice_AutomaticExercise AutomaticExercise
      -- ^ If automatic is specified then the notional amount of
      --   the underlying swap, not previously exercised under
      --   the swaption will be automatically exercised at the
      --   expriration time on the expiration date if at such
      --   time the buyer is in-the-money, provided that the
      --   difference between the settlement rate and the fixed
      --   rate under the relevant underlying swap is not less
      --   than the specified threshold rate. The term
      --   in-the-money is assumed to have the meaning defining
      --   in the 2000 ISDA Definitions, Section 17.4
      --   In-the-money.
    deriving (Eq, Ord, Show)

-- | The specification of which of the pay-side or the
--   receive-side should be exercised when a straddle is
--   exercised.
data ExerciseSideEnum
    = ExerciseSideEnum_Put ()
      -- ^ A put option gives the holder the right to sell the
      --   underlying asset by a certain date for a certain
      --   price.
    | ExerciseSideEnum_Call ()
      -- ^ A call option gives the holder the right to buy the
      --   underlying asset by a certain date for a certain
      --   price.
    | ExerciseSideEnum_Payer ()
      -- ^ A "payer" option: If you buy a "payer" option you
      --   have the right but not the obligation to enter into
      --   the underlying swap transaction as the "fixed"
      --   rate/price payer and receive float.
    | ExerciseSideEnum_Receiver ()
      -- ^ A receiver option: If you buy a "receiver" option you
      --   have the right but not the obligation to enter into
      --   the underlying swap transaction as the "fixed"
      --   rate/price receiver and pay float.
    deriving (Eq, Ord, Show)

data ExerciseStyleEnum
    = ExerciseStyleEnum_American ()
    | ExerciseStyleEnum_Bermuda ()
    | ExerciseStyleEnum_European ()
    deriving (Eq, Ord, Show)

-- | When a requested option exercise event is desired to
--   be performed.
data ExerciseTimingEnum
    = ExerciseTimingEnum_Immediate ()
      -- ^ Perform the requested exercise behavior immediately
      --   on receipt of the request.
    | ExerciseTimingEnum_OnExpiration ()
      -- ^ Perform the requested exercise behavior at the
      --   expiration of the option.
    deriving (Eq, Ord, Show)

-- | Specifies the fallback provisions in respect to the
--   applicable Futures Price Valuation.
data FPVFinalPriceElectionFallbackEnum
    = FPVFinalPriceElectionFallbackEnum_FPVClose ()
      -- ^ In respect of the Early Final Valuation Date, the
      --   provisions for FPV Close shall apply.
    | FPVFinalPriceElectionFallbackEnum_FPVHedgeExecution ()
      -- ^ In respect of the Early Final Valuation Date, the
      --   provisions for FPV Hedge Execution shall apply.
    deriving (Eq, Ord, Show)

-- | Provides supporting evidence when a party invoked
--   exception to not execute the trade on facility such
--   as SEF and DCM even though the particular product is
--   mandated to execute on a SEF.
data FacilityExecutionExceptionDeclaration = FacilityExecutionExceptionDeclaration with
    reason : [Token]
        -- ^ Reason for not executing the trade on SEF or other
        --   facility.
    organizationCharacteristic : [OrganizationCharacteristic]
        -- ^ Allows the organization to specify which categories
        --   or characteristics apply to it for end-user exception
        --   determination. Examples include "FinancialEntity",
        --   "CaptiveFinanceUnit", "BoardOfDirectorsApproval".
    transactionCharacteristic : [TransactionCharacteristic]
        -- ^ Allows the relevant transaction level categories or
        --   characteristics to be recorded for end-user exception
        --   determination. Examples include
        --   "BoardOfDirectorsApproval", "HedgesCommercialRisk".
    supervisorRegistration : [SupervisorRegistration]
        -- ^ Allows the organization to specify which if any
        --   relevant regulators it is registered with, and if so
        --   their identification number. For example, it could
        --   specify that it is SEC registered and provide its
        --   Central Index Key.
      deriving (Eq, Ord, Show)

-- | A type describing the type of loan facility.
data FacilityType = FacilityType with
    facilityTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data FailureToPay = FailureToPay with
    applicable : Bool
        -- ^ Indicates whether the failure to pay provision is
        --   applicable.
    gracePeriodExtension : Optional GracePeriodExtension
        -- ^ If this element is specified, indicates whether or
        --   not a grace period extension is applicable. ISDA 2003
        --   Term: Grace Period Extension Applicable.
    paymentRequirement : Optional Money
        -- ^ Specifies a threshold for the failure to pay credit
        --   event. Market standard is USD 1,000,000 (JPY
        --   100,000,000 for Japanese Yen trades) or its
        --   equivalent in the relevant obligation currency. This
        --   is applied on an aggregate basis across all
        --   Obligations of the Reference Entity. Intended to
        --   prevent technical/operational errors from triggering
        --   credit events. ISDA 2003 Term: Payment Requirement.
      deriving (Eq, Ord, Show)

-- | Payment made following trigger occurence.
data FeaturePayment = FeaturePayment with
    id_ : Optional Text
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    choice_ : FeaturePayment_choice
    time_ : Optional TimeTypeEnum
        -- ^ The feature payment time.
    currency : Optional Currency
        -- ^ The currency in which an amount is denominated.
    featurePaymentDate : Optional AdjustableOrRelativeDate
        -- ^ The feature payment date.
      deriving (Eq, Ord, Show)

-- | A variant type used inside FeaturePayment
data FeaturePayment_choice
    = FeaturePayment_choice_LevelPercentage Decimal
      -- ^ The trigger level percentage.
    | FeaturePayment_choice_Amount NonNegativeDecimal
      -- ^ The monetary quantity in currency units.
    deriving (Eq, Ord, Show)

-- | Defines the fee type.
data FeeElectionEnum
    = FeeElectionEnum_FlatFee ()
      -- ^ The product of (i) the Break Fee Rate multiplied by
      --   (ii) the Equity Notional Amount corresponding to the
      --   Early Termination Portion.
    | FeeElectionEnum_AmortizedFee ()
      -- ^ The product of (i) the Break Fee Rate multiplied by
      --   (ii) the Equity Notional Amount corresponding to the
      --   Early Termination Portion multiplied by (iii) the
      --   number of days from the Early Termination Date to the
      --   later of the Termination Date or the Cash Settlement
      --   Payment Date corresponding to the latest Valuation
      --   Date.
    | FeeElectionEnum_FundingFee ()
      -- ^ The product of (i) the Equity Notional Amount
      --   corresponding to the Early Termination Portion
      --   multiplied by (ii) the Break Funding Rate multiplied
      --   by (iii) the number of days from the Early
      --   Termination Date to the next scheduled Reset Date
      --   divided by (iv) a number equivalent to the
      --   denominator of the Day Count Fraction applicable to
      --   the Floating Rate Option.
    | FeeElectionEnum_FlatFeeAndFundingFee ()
      -- ^ Both Flat Fee and Funding Fee are applicable.
    | FeeElectionEnum_AmortizedFeeAndFundingFee ()
      -- ^ Amortized Fee and Funding Fee are applicable.
    deriving (Eq, Ord, Show)

-- | The common components of a financially settled leg of
--   a Commodity Swap. This is an abstract type and should
--   be extended by commodity-specific types.
data FinancialSwapLeg
    = FinancialSwapLeg_WeatherLeg WeatherLeg
    | FinancialSwapLeg_FloatingPriceLeg FloatingPriceLeg
    | FinancialSwapLeg_FixedPriceLeg FixedPriceLeg
    deriving (Eq, Ord, Show)

data FirstPeriodStartDate = FirstPeriodStartDate with
    href : Text
    content : Date
      deriving (Eq, Ord, Show)

-- | A type defining the Fixed Price.
data FixedPrice = FixedPrice with
    id_ : Optional Text
    price : Decimal
        -- ^ The Fixed Price.
    priceCurrency : Currency
        -- ^ The currency used to specify the digital barrier in
        --   terms of a price per unit of commodity.
    priceUnit : QuantityUnit
        -- ^ The unit of measure used to specify the digital
        --   barrier in terms of a price per unit of commodity.
      deriving (Eq, Ord, Show)

-- | Fixed Price Leg of a Commodity Swap. It defines
--   schedule of fixed payments associated with a
--   commodity swap.
data FixedPriceLeg = FixedPriceLeg with
    id_ : Optional Text
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    choice_1 : FixedPriceLeg_choice
    choice_2 : FixedPriceLeg_choice_2
    totalPrice : Optional NonNegativeMoney
        -- ^ The total amount of all fixed payments due during the
        --   term of the trade.
    choice_3 : FixedPriceLeg_choice_4
    choice_4 : FixedPriceLeg_choice_5
    commodityFreightFlatRate_model : Optional FixedPriceLeg_CommodityFreightFlatRate_model
      deriving (Eq, Ord, Show)

-- | A record type used inside FixedPriceLeg
data FixedPriceLeg_CommodityFreightFlatRate_model = FixedPriceLeg_CommodityFreightFlatRate_model with
    flatRate : FlatRateEnum
        -- ^ Whether the Flat Rate is the New Worldwide Tanker
        --   Nominal Freight Scale for the Freight Index Route
        --   taken at the Trade Date of the transaction or taken
        --   on each Pricing Date.
    flatRateAmount : Optional NonNegativeMoney
        -- ^ If flatRate is set to "Fixed", the actual value of
        --   the Flat Rate.
      deriving (Eq, Ord, Show)

-- | A variant type used inside FixedPriceLeg
data FixedPriceLeg_choice
    = FixedPriceLeg_choice_CalculationDates AdjustableDates
      -- ^ The Calculation Period dates for this leg of the
      --   trade where the Calculation Periods are all one day
      --   long. Only dates explicitly included determine the
      --   Calculation Periods and there is a Calculation Period
      --   for each date specified. As such one-day Calculation
      --   Period are typical a physically-settled emissions or
      --   metals trades it is expected that this element will
      --   not be used in performance swaps.
    | FixedPriceLeg_choice_CalculationPeriods AdjustableDates
      -- ^ The Calculation Period start dates for this leg of
      --   the swap. This type is only intended to be used if
      --   the Calculation Periods differ on each leg. If
      --   Calculation Periods mirror another leg, then the
      --   calculationPeriodsReference element should be used to
      --   point to the Calculation Periods on that leg - or the
      --   calculationPeriodsScheduleReference can be used to
      --   point to the Calculation Periods Schedule for that
      --   leg.
    | FixedPriceLeg_choice_CalculationPeriodsSchedule CommodityCalculationPeriodsSchedule
      -- ^ The Calculation Periods for this leg of the swap.
      --   This type is only intended to be used if the
      --   Calculation Periods differ on each leg. If
      --   Calculation Periods mirror another leg, then the
      --   calculationPeriodsReference element should be used to
      --   point to the Calculation Periods on the other leg -
      --   or the calculationPeriodsScheduleReference can be
      --   used to point to the Calculation Periods Schedule for
      --   that leg.
    | FixedPriceLeg_choice_CalculationPeriodsReference CalculationPeriodsReference
      -- ^ A pointer style reference to the Calculation Periods
      --   defined on another leg.
    | FixedPriceLeg_choice_CalculationPeriodsScheduleReference CalculationPeriodsScheduleReference
      -- ^ A pointer style reference to the Calculation Periods
      --   Schedule defined on another leg.
    | FixedPriceLeg_choice_CalculationPeriodsDatesReference CalculationPeriodsDatesReference
      -- ^ A pointer style reference to single-day-duration
      --   Calculation Periods defined on another leg.
    deriving (Eq, Ord, Show)

-- | A variant type used inside FixedPriceLeg
data FixedPriceLeg_choice_2
    = FixedPriceLeg_choice_2_FixedPriceSchedule CommodityFixedPriceSchedule
      -- ^ Allows the specification of a Fixed Price that varies
      --   over the life of the trade.
    | FixedPriceLeg_choice_2_FixedPrice FixedPrice
      -- ^ Fixed price on which fixed payments are based.
    | FixedPriceLeg_choice_2_WorldscaleRate Decimal
      -- ^ For a WET Voyager Charter Commodity Swap, the number
      --   of Worldscale Points for purposes of the calculation
      --   of a Fixed Amount.
    | FixedPriceLeg_choice_2_ContractRate NonNegativeMoney
      -- ^ For a DRY Voyage Charter or Time Charter Commodity
      --   Swap, the price per relevant unit for pruposes of the
      --   calculation of a Fixed Amount.
    | FixedPriceLeg_choice_2_SettlementPeriodsPrice [SettlementPeriodsFixedPrice]
      -- ^ For an electricity transaction, the fixed price for
      --   one or more groups of Settlement Periods on which
      --   fixed payments are based. If the fixed price differs
      --   for different groups of Settlement Periods, this
      --   element should be repeated.
    deriving (Eq, Ord, Show)

-- | A variant type used inside FixedPriceLeg
data FixedPriceLeg_choice_3
    = FixedPriceLeg_choice_3_NotionalQuantitySchedule CommodityNotionalQuantitySchedule
      -- ^ Allows the documentation of a shaped notional trade
      --   where the notional changes over the life of the
      --   transaction.
    | FixedPriceLeg_choice_3_NotionalQuantity CommodityNotionalQuantity
      -- ^ The Notional Quantity.
    | FixedPriceLeg_choice_3_SettlementPeriodsNotionalQuantity [CommoditySettlementPeriodsNotionalQuantity]
      -- ^ For an electricity transaction, the Notional Quantity
      --   for a one or more groups of Settlement Periods to
      --   which the Notional Quantity is based. If the schedule
      --   differs for different groups of Settlement Periods,
      --   this element should be repeated.
    deriving (Eq, Ord, Show)

-- | A variant type used inside FixedPriceLeg
data FixedPriceLeg_choice_4
    = FixedPriceLeg_choice_4_Items FixedPriceLeg_items
    | FixedPriceLeg_choice_4_QuantityReference QuantityReference
      -- ^ A pointer style reference to a quantity defined on
      --   another leg.
    deriving (Eq, Ord, Show)

-- | A variant type used inside FixedPriceLeg
data FixedPriceLeg_choice_5
    = FixedPriceLeg_choice_5_RelativePaymentDates CommodityRelativePaymentDates
      -- ^ The Payment Dates of the trade relative to the
      --   Calculation Periods.
    | FixedPriceLeg_choice_5_PaymentDates AdjustableDatesOrRelativeDateOffset
      -- ^ Dates on which payments will be made.
    | FixedPriceLeg_choice_5_MasterAgreementPaymentDates Bool
      -- ^ If present and true indicates that the Payment
      --   Date(s) are specified in the relevant master
      --   agreement.
    deriving (Eq, Ord, Show)

-- | A record type used inside FixedPriceLeg
data FixedPriceLeg_items = FixedPriceLeg_items with
    choice_ : FixedPriceLeg_choice_3
    totalNotionalQuantity : Optional Decimal
        -- ^ The Total Notional Quantity.
      deriving (Eq, Ord, Show)

-- | The method by which the Flat Rate is calculated for a
--   commodity freight transaction.
data FlatRateEnum
    = FlatRateEnum_Fixed ()
      -- ^ The Flat Rate will be the New Worldwide Tanker
      --   Nominal Freight Scale for the Freight Index Route for
      --   the Trade Date for the transaction.
    | FlatRateEnum_Floating ()
      -- ^ The Flat Rate for each Pricing Date will be the New
      --   Worldwide Tanker Nominal Freight Scale for the
      --   Freight Index Route for the Pricing Date..
    deriving (Eq, Ord, Show)

-- | A type to capture details relevant to the calculation
--   of the floating price.
data FloatingLegCalculation = FloatingLegCalculation with
    pricingDates : CommodityPricingDates
        -- ^ Commodity Pricing Dates.
    averagingMethod : Optional AveragingMethodEnum
        -- ^ The parties may specify a Method of Averaging where
        --   more than one pricing Dates is being specified as
        --   being applicable.
    conversionFactor : Optional Decimal
        -- ^ If the Notional Quantity is specified in units that
        --   do not match the units in which the Commodity
        --   Reference Price is quoted, the scaling or conversion
        --   factor used to convert the Commodity Reference Price
        --   units into the Notional Quantity units should be
        --   stated here. If there is no conversion, this element
        --   is not intended to be used.
    rounding : Optional Rounding
        -- ^ Rounding direction and precision for price values.
    choice_ : Optional FloatingLegCalculation_choice
    fx : Optional CommodityFx
        -- ^ Defines how observations of FX prices are to be used
        --   to calculate a factor with which to convert the
        --   observed Commodity Reference Price to the Settlement
        --   Currency.
      deriving (Eq, Ord, Show)

-- | A variant type used inside FloatingLegCalculation
data FloatingLegCalculation_choice
    = FloatingLegCalculation_choice_Spread CommoditySpread
      -- ^ The spread over or under the Commodity Reference
      --   Price for this leg of the trade.
    | FloatingLegCalculation_choice_SpreadSchedule [CommoditySpreadSchedule]
      -- ^ The spread over or under the Commodity Reference
      --   Price for this leg of the trade for each Calculation
      --   Period.
    | FloatingLegCalculation_choice_SpreadPercentage Decimal
      -- ^ The spread percentage over or under the Commodity
      --   Reference Price for this leg of the trade.
    deriving (Eq, Ord, Show)

-- | Floating Price Leg of a Commodity Swap. Each
--   'floatingLeg' defines a series of financial payments
--   for a commodity the value of which is derived from a
--   floating price such as an exchange or an index
--   publication.
data FloatingPriceLeg = FloatingPriceLeg with
    id_ : Optional Text
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    choice_1 : FloatingPriceLeg_choice
    commodity : Commodity
        -- ^ Specifies the underlying instrument. Only underlyers
        --   of type Commodity are supported.
    choice_2 : FloatingPriceLeg_choice_3
    calculation : FloatingLegCalculation
        -- ^ Defines details relevant to the calculation of the
        --   floating price.
    choice_3 : FloatingPriceLeg_choice_4
    commodityFreightFlatRate_model : Optional FloatingPriceLeg_CommodityFreightFlatRate_model
      deriving (Eq, Ord, Show)

-- | A record type used inside FloatingPriceLeg
data FloatingPriceLeg_CommodityFreightFlatRate_model = FloatingPriceLeg_CommodityFreightFlatRate_model with
    flatRate : FlatRateEnum
        -- ^ Whether the Flat Rate is the New Worldwide Tanker
        --   Nominal Freight Scale for the Freight Index Route
        --   taken at the Trade Date of the transaction or taken
        --   on each Pricing Date.
    flatRateAmount : Optional NonNegativeMoney
        -- ^ If flatRate is set to "Fixed", the actual value of
        --   the Flat Rate.
      deriving (Eq, Ord, Show)

-- | A variant type used inside FloatingPriceLeg
data FloatingPriceLeg_choice
    = FloatingPriceLeg_choice_CalculationDates AdjustableDates
      -- ^ The Calculation Period dates for this leg of the
      --   trade where the Calculation Periods are all one day
      --   long. Only dates explicitly included determine the
      --   Calculation Periods and there is a Calculation Period
      --   for each date specified. As such one-day Calculation
      --   Period are typical a physically-settled emissions or
      --   metals trades it is expected that this element will
      --   not be used in performance swaps.
    | FloatingPriceLeg_choice_CalculationPeriods AdjustableDates
      -- ^ The Calculation Period start dates for this leg of
      --   the swap. This type is only intended to be used if
      --   the Calculation Periods differ on each leg. If
      --   Calculation Periods mirror another leg, then the
      --   calculationPeriodsReference element should be used to
      --   point to the Calculation Periods on that leg - or the
      --   calculationPeriodsScheduleReference can be used to
      --   point to the Calculation Periods Schedule for that
      --   leg.
    | FloatingPriceLeg_choice_CalculationPeriodsSchedule CommodityCalculationPeriodsSchedule
      -- ^ The Calculation Periods for this leg of the swap.
      --   This type is only intended to be used if the
      --   Calculation Periods differ on each leg. If
      --   Calculation Periods mirror another leg, then the
      --   calculationPeriodsReference element should be used to
      --   point to the Calculation Periods on the other leg -
      --   or the calculationPeriodsScheduleReference can be
      --   used to point to the Calculation Periods Schedule for
      --   that leg.
    | FloatingPriceLeg_choice_CalculationPeriodsReference CalculationPeriodsReference
      -- ^ A pointer style reference to the Calculation Periods
      --   defined on another leg.
    | FloatingPriceLeg_choice_CalculationPeriodsScheduleReference CalculationPeriodsScheduleReference
      -- ^ A pointer style reference to the Calculation Periods
      --   Schedule defined on another leg.
    | FloatingPriceLeg_choice_CalculationPeriodsDatesReference CalculationPeriodsDatesReference
      -- ^ A pointer style reference to single-day-duration
      --   Calculation Periods defined on another leg.
    deriving (Eq, Ord, Show)

-- | A variant type used inside FloatingPriceLeg
data FloatingPriceLeg_choice_2
    = FloatingPriceLeg_choice_2_NotionalQuantitySchedule CommodityNotionalQuantitySchedule
      -- ^ Allows the documentation of a shaped notional trade
      --   where the notional changes over the life of the
      --   transaction.
    | FloatingPriceLeg_choice_2_NotionalQuantity CommodityNotionalQuantity
      -- ^ The Notional Quantity.
    | FloatingPriceLeg_choice_2_SettlementPeriodsNotionalQuantity [CommoditySettlementPeriodsNotionalQuantity]
      -- ^ For an electricity transaction, the Notional Quantity
      --   for a one or more groups of Settlement Periods to
      --   which the Notional Quantity is based. If the schedule
      --   differs for different groups of Settlement Periods,
      --   this element should be repeated.
    deriving (Eq, Ord, Show)

-- | A variant type used inside FloatingPriceLeg
data FloatingPriceLeg_choice_3
    = FloatingPriceLeg_choice_3_Items FloatingPriceLeg_items
    | FloatingPriceLeg_choice_3_QuantityReference QuantityReference
      -- ^ A pointer style reference to a quantity defined on
      --   another leg.
    deriving (Eq, Ord, Show)

-- | A variant type used inside FloatingPriceLeg
data FloatingPriceLeg_choice_4
    = FloatingPriceLeg_choice_4_RelativePaymentDates CommodityRelativePaymentDates
      -- ^ The Payment Dates of the trade relative to the
      --   Calculation Periods.
    | FloatingPriceLeg_choice_4_PaymentDates AdjustableDatesOrRelativeDateOffset
      -- ^ Dates on which payments will be made.
    | FloatingPriceLeg_choice_4_MasterAgreementPaymentDates Bool
      -- ^ If present and true indicates that the Payment
      --   Date(s) are specified in the relevant master
      --   agreement.
    deriving (Eq, Ord, Show)

-- | A record type used inside FloatingPriceLeg
data FloatingPriceLeg_items = FloatingPriceLeg_items with
    choice_ : FloatingPriceLeg_choice_2
    totalNotionalQuantity : Optional Decimal
        -- ^ The Total Notional Quantity.
      deriving (Eq, Ord, Show)

-- | A type defining a floating rate.
data FloatingRate = FloatingRate with
    id_ : Optional Text
    floatingRateIndex : FloatingRateIndex
    indexTenor : Optional Period
        -- ^ The ISDA Designated Maturity, i.e. the tenor of the
        --   floating rate.
    floatingRateMultiplierSchedule : Optional Schedule
        -- ^ A rate multiplier or multiplier schedule to apply to
        --   the floating rate. A multiplier schedule is expressed
        --   as explicit multipliers and dates. In the case of a
        --   schedule, the step dates may be subject to adjustment
        --   in accordance with any adjustments specified in the
        --   calculationPeriodDatesAdjustments. The multiplier can
        --   be a positive or negative decimal. This element
        --   should only be included if the multiplier is not
        --   equal to 1 (one) for the term of the stream.
    spreadSchedule : [SpreadSchedule]
        -- ^ The ISDA Spread or a Spread schedule expressed as
        --   explicit spreads and dates. In the case of a
        --   schedule, the step dates may be subject to adjustment
        --   in accordance with any adjustments specified in
        --   calculationPeriodDatesAdjustments. The spread is a
        --   per annum rate, expressed as a decimal. For purposes
        --   of determining a calculation period amount, if
        --   positive the spread will be added to the floating
        --   rate and if negative the spread will be subtracted
        --   from the floating rate. A positive 10 basis point
        --   (0.1%) spread would be represented as 0.001.
    rateTreatment : Optional RateTreatmentEnum
        -- ^ The specification of any rate conversion which needs
        --   to be applied to the observed rate before being used
        --   in any calculations. The two common conversions are
        --   for securities quoted on a bank discount basis which
        --   will need to be converted to either a Money Market
        --   Yield or Bond Equivalent Yield. See the Annex to the
        --   2000 ISDA Definitions, Section 7.3. Certain General
        --   Definitions Relating to Floating Rate Options,
        --   paragraphs (g) and (h) for definitions of these
        --   terms.
    capRateSchedule : [StrikeSchedule]
        -- ^ The cap rate or cap rate schedule, if any, which
        --   applies to the floating rate. The cap rate (strike)
        --   is only required where the floating rate on a swap
        --   stream is capped at a certain level. A cap rate
        --   schedule is expressed as explicit cap rates and dates
        --   and the step dates may be subject to adjustment in
        --   accordance with any adjustments specified in
        --   calculationPeriodDatesAdjustments. The cap rate is
        --   assumed to be exclusive of any spread and is a per
        --   annum rate, expressed as a decimal. A cap rate of 5%
        --   would be represented as 0.05.
    floorRateSchedule : [StrikeSchedule]
        -- ^ The floor rate or floor rate schedule, if any, which
        --   applies to the floating rate. The floor rate (strike)
        --   is only required where the floating rate on a swap
        --   stream is floored at a certain strike level. A floor
        --   rate schedule is expressed as explicit floor rates
        --   and dates and the step dates may be subject to
        --   adjustment in accordance with any adjustments
        --   specified in calculationPeriodDatesAdjustments. The
        --   floor rate is assumed to be exclusive of any spread
        --   and is a per annum rate, expressed as a decimal. A
        --   floor rate of 5% would be represented as 0.05.
      deriving (Eq, Ord, Show)

-- | A type defining the floating rate and definitions
--   relating to the calculation of floating rate amounts.
data FloatingRateCalculation = FloatingRateCalculation with
    id_ : Optional Text
    floatingRateIndex : FloatingRateIndex
    indexTenor : Optional Period
        -- ^ The ISDA Designated Maturity, i.e. the tenor of the
        --   floating rate.
    floatingRateMultiplierSchedule : Optional Schedule
        -- ^ A rate multiplier or multiplier schedule to apply to
        --   the floating rate. A multiplier schedule is expressed
        --   as explicit multipliers and dates. In the case of a
        --   schedule, the step dates may be subject to adjustment
        --   in accordance with any adjustments specified in the
        --   calculationPeriodDatesAdjustments. The multiplier can
        --   be a positive or negative decimal. This element
        --   should only be included if the multiplier is not
        --   equal to 1 (one) for the term of the stream.
    spreadSchedule : [SpreadSchedule]
        -- ^ The ISDA Spread or a Spread schedule expressed as
        --   explicit spreads and dates. In the case of a
        --   schedule, the step dates may be subject to adjustment
        --   in accordance with any adjustments specified in
        --   calculationPeriodDatesAdjustments. The spread is a
        --   per annum rate, expressed as a decimal. For purposes
        --   of determining a calculation period amount, if
        --   positive the spread will be added to the floating
        --   rate and if negative the spread will be subtracted
        --   from the floating rate. A positive 10 basis point
        --   (0.1%) spread would be represented as 0.001.
    rateTreatment : Optional RateTreatmentEnum
        -- ^ The specification of any rate conversion which needs
        --   to be applied to the observed rate before being used
        --   in any calculations. The two common conversions are
        --   for securities quoted on a bank discount basis which
        --   will need to be converted to either a Money Market
        --   Yield or Bond Equivalent Yield. See the Annex to the
        --   2000 ISDA Definitions, Section 7.3. Certain General
        --   Definitions Relating to Floating Rate Options,
        --   paragraphs (g) and (h) for definitions of these
        --   terms.
    capRateSchedule : [StrikeSchedule]
        -- ^ The cap rate or cap rate schedule, if any, which
        --   applies to the floating rate. The cap rate (strike)
        --   is only required where the floating rate on a swap
        --   stream is capped at a certain level. A cap rate
        --   schedule is expressed as explicit cap rates and dates
        --   and the step dates may be subject to adjustment in
        --   accordance with any adjustments specified in
        --   calculationPeriodDatesAdjustments. The cap rate is
        --   assumed to be exclusive of any spread and is a per
        --   annum rate, expressed as a decimal. A cap rate of 5%
        --   would be represented as 0.05.
    floorRateSchedule : [StrikeSchedule]
        -- ^ The floor rate or floor rate schedule, if any, which
        --   applies to the floating rate. The floor rate (strike)
        --   is only required where the floating rate on a swap
        --   stream is floored at a certain strike level. A floor
        --   rate schedule is expressed as explicit floor rates
        --   and dates and the step dates may be subject to
        --   adjustment in accordance with any adjustments
        --   specified in calculationPeriodDatesAdjustments. The
        --   floor rate is assumed to be exclusive of any spread
        --   and is a per annum rate, expressed as a decimal. A
        --   floor rate of 5% would be represented as 0.05.
    initialRate : Optional Decimal
        -- ^ The initial floating rate reset agreed between the
        --   principal parties involved in the trade. This is
        --   assumed to be the first required reset rate for the
        --   first regular calculation period. It should only be
        --   included when the rate is not equal to the rate
        --   published on the source implied by the floating rate
        --   index. An initial rate of 5% would be represented as
        --   0.05.
    finalRateRounding : Optional Rounding
        -- ^ The rounding convention to apply to the final rate
        --   used in determination of a calculation period amount.
    averagingMethod : Optional AveragingMethodEnum
        -- ^ If averaging is applicable, this component specifies
        --   whether a weighted or unweighted average method of
        --   calculation is to be used. The component must only be
        --   included when averaging applies.
    negativeInterestRateTreatment : Optional NegativeInterestRateTreatmentEnum
        -- ^ The specification of any provisions for calculating
        --   payment obligations when a floating rate is negative
        --   (either due to a quoted negative floating rate or by
        --   operation of a spread that is subtracted from the
        --   floating rate).
      deriving (Eq, Ord, Show)

-- | The ISDA Floating Rate Option, i.e. the floating rate
--   index.
data FloatingRateIndex = FloatingRateIndex with
    floatingRateIndexScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data FloatingStrikePrice = FloatingStrikePrice with
    pricingDates : CommodityPricingDates
        -- ^ Commodity Pricing Dates.
    averagingMethod : Optional AveragingMethodEnum
        -- ^ The parties may specify a Method of Averaging where
        --   more than one pricing Dates is being specified as
        --   being applicable.
    conversionFactor : Optional Decimal
        -- ^ If the Notional Quantity is specified in units that
        --   do not match the units in which the Commodity
        --   Reference Price is quoted, the scaling or conversion
        --   factor used to convert the Commodity Reference Price
        --   units into the Notional Quantity units should be
        --   stated here. If there is no conversion, this element
        --   is not intended to be used.
    rounding : Optional Rounding
        -- ^ Rounding direction and precision for price values.
    choice_ : Optional FloatingStrikePrice_choice
    fx : Optional CommodityFx
        -- ^ Defines how observations of FX prices are to be used
        --   to calculate a factor with which to convert the
        --   observed Commodity Reference Price to the Settlement
        --   Currency.
    commodity : Commodity
        -- ^ Identifies the underlying asset when it is a listed
        --   commodity.
      deriving (Eq, Ord, Show)

-- | A variant type used inside FloatingStrikePrice
data FloatingStrikePrice_choice
    = FloatingStrikePrice_choice_Spread CommoditySpread
      -- ^ The spread over or under the Commodity Reference
      --   Price for this leg of the trade.
    | FloatingStrikePrice_choice_SpreadSchedule [CommoditySpreadSchedule]
      -- ^ The spread over or under the Commodity Reference
      --   Price for this leg of the trade for each Calculation
      --   Period.
    | FloatingStrikePrice_choice_SpreadPercentage Decimal
      -- ^ The spread percentage over or under the Commodity
      --   Reference Price for this leg of the trade.
    deriving (Eq, Ord, Show)

-- | A type defining a rate index.
data ForecastRateIndex = ForecastRateIndex with
    floatingRateIndex : FloatingRateIndex
        -- ^ The ISDA Floating Rate Option, i.e. the floating rate
        --   index.
    indexTenor : Period
        -- ^ The ISDA Designated Maturity, i.e. the tenor of the
        --   floating rate.
      deriving (Eq, Ord, Show)

-- | A type describing a financial formula, with its
--   description and components.
data Formula = Formula with
    formulaDescription : Optional String
        -- ^ Text description of the formula
    math : Optional Math
        -- ^ An element for containing an XML representation of
        --   the formula. Defined using xsd:any currently for
        --   flexibility in choice of language (MathML, OpenMath)
    formulaComponent : [FormulaComponent]
        -- ^ Elements describing the components of the formula.
        --   The name attribute points to a value used in the math
        --   element. The href attribute points to a value
        --   elsewhere in the document
      deriving (Eq, Ord, Show)

-- | Elements describing the components of the formula.
--   The name attribute points to a value used in the math
--   element. The href attribute points to a numeric value
--   defined elsewhere in the document that is used by the
--   formula component.
data FormulaComponent = FormulaComponent with
    name : Optional NormalizedString
    componentDescription : String
        -- ^ Text description of the component
    formula : Optional Formula
        -- ^ Additional formulas required to describe this
        --   component
      deriving (Eq, Ord, Show)

-- | A contact id identifier allocated by a party. FpML
--   does not define the domain values associated with
--   this element.
data FpmlContractId = FpmlContractId with
    contractIdScheme : NonEmptyURI
    id_ : Optional Text
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

-- | A type defining a legal entity or a subdivision of a
--   legal entity.
data FpmlParty = FpmlParty with
    id_ : Text
        -- ^ The id uniquely identifying the Party within the
        --   document.
    choice_ : FpmlParty_choice
      deriving (Eq, Ord, Show)

-- | A record type used inside FpmlParty
data FpmlParty_PartyInformation_model = FpmlParty_PartyInformation_model with
    classification : [IndustryClassification]
        -- ^ The party's industry sector classification.
    creditRating : [CreditRating]
        -- ^ The party's credit rating.
    country : Optional CountryCode
        -- ^ The country where the party is domiciled.
    region : [Region]
        -- ^ A code for a grouping of countries to which this
        --   belongs.
    jurisdiction : [GoverningLaw]
        -- ^ The legal jurisdiction of the entity's registration.
    organizationType : Optional OrganizationType
        -- ^ The type of an organization's participantion in the
        --   OTC derivatives market.
      deriving (Eq, Ord, Show)

-- | A variant type used inside FpmlParty
data FpmlParty_choice
    = FpmlParty_choice_Items1 FpmlParty_items
    | FpmlParty_choice_Items2 FpmlParty_items_2
    deriving (Eq, Ord, Show)

-- | A record type used inside FpmlParty
data FpmlParty_items = FpmlParty_items with
    partyId : [PartyId]
        -- ^ A party identifier, e.g. a S.W.I.F.T. bank identifier
        --   code (BIC).
    partyName : Optional PartyName
        -- ^ The legal name of the organization. A free format
        --   string. FpML does not define usage rules for this
        --   element.
    partyInformation_model : Optional FpmlParty_PartyInformation_model
    contactInfo : Optional ContactInformation
        -- ^ Information on how to contact the party using various
        --   means.
    businessUnit : [BusinessUnit]
        -- ^ Optional organization unit information used to
        --   describe the organization units (e.g. trading desks)
        --   involved in a transaction or business process .
    person : [Person]
        -- ^ Optional information about people involved in a
        --   transaction or busines process. (These are eomployees
        --   of the party).
      deriving (Eq, Ord, Show)

-- | A record type used inside FpmlParty
data FpmlParty_items_2 = FpmlParty_items_2 with
    groupType : PartyGroupType
        -- ^ Party Group Type, e.g. JointAndSeveralLiability
    partyReference : [PartyReference]
        -- ^ Reference to a party that is a member of the group of
        --   entities that are acting together as a single party
        --   in a transaction.
      deriving (Eq, Ord, Show)

-- | A type used to record information about a unit,
--   subdivision, desk, or other similar business entity.
data FpmlUnit = FpmlUnit with
    unitScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The method of FRA discounting, if any, that will
--   apply.
data FraDiscountingEnum
    = FraDiscountingEnum_ISDA ()
      -- ^ "FRA Discounting" per the ISDA Definitions will
      --   apply.
    | FraDiscountingEnum_AFMA ()
      -- ^ FRA discounting per the Australian Financial Markets
      --   Association (AFMA) OTC Financial Product Conventions
      --   will apply. Note: Should not be used for a FRA trade
      --   documented under a legal framework where the 2006
      --   ISDA Definitions have been incorporated.
    | FraDiscountingEnum_NONE ()
      -- ^ No discounting will apply.
    | FraDiscountingEnum_ISDAYield ()
      -- ^ Per ISDA 2006 Definitions, Section 8.4. Discounting,
      --   paragraph (e)
    deriving (Eq, Ord, Show)

-- | A type defining a time frequency, e.g. one day, three
--   months. Used for specifying payment or calculation
--   frequencies at which the value T (Term) is
--   applicable.
data Frequency = Frequency with
    id_ : Optional Text
    periodMultiplier : Int
        -- ^ A time period multiplier, e.g. 1, 2 or 3 etc. If the
        --   period value is T (Term) then periodMultiplier must
        --   contain the value 1.
    period : PeriodExtendedEnum
        -- ^ A time period, e.g. a day, week, month, year or term
        --   of the stream.
      deriving (Eq, Ord, Show)

-- | An exchange traded future contract.
data Future = Future with
    id_ : Optional Text
    instrumentId : [InstrumentId]
        -- ^ Identification of the underlying asset, using public
        --   and/or private identifiers.
    description : Optional String
        -- ^ Long name of the underlying asset.
    currency : Optional IdentifiedCurrency
        -- ^ Trading currency of the underlyer when transacted as
        --   a cash instrument.
    exchangeId : Optional ExchangeId
        -- ^ Identification of the exchange on which this asset is
        --   transacted for the purposes of calculating a
        --   contractural payoff. The term "Exchange" is assumed
        --   to have the meaning as defined in the ISDA 2002
        --   Equity Derivatives Definitions.
    clearanceSystem : Optional ClearanceSystem
        -- ^ Identification of the clearance system associated
        --   with the transaction exchange.
    definition : Optional ProductReference
        -- ^ An optional reference to a full FpML product that
        --   defines the simple product in greater detail. In case
        --   of inconsistency between the terms of the simple
        --   product and those of the detailed definition, the
        --   values in the simple product override those in the
        --   detailed definition.
    relatedExchangeId : [ExchangeId]
        -- ^ A short form unique identifier for a related
        --   exchange. If the element is not present then the
        --   exchange shall be the primary exchange on which
        --   listed futures and options on the underlying are
        --   listed. The term "Exchange" is assumed to have the
        --   meaning as defined in the ISDA 2002 Equity
        --   Derivatives Definitions.
    optionsExchangeId : [ExchangeId]
        -- ^ A short form unique identifier for an exchange on
        --   which the reference option contract is listed. This
        --   is to address the case where the reference exchange
        --   for the future is different than the one for the
        --   option. The options Exchange is referenced on share
        --   options when Merger Elections are selected as Options
        --   Exchange Adjustment.
    specifiedExchangeId : [ExchangeId]
        -- ^ A short form unique identifier for a specified
        --   exchange. If the element is not present then the
        --   exchange shall be default terms as defined in the
        --   MCA; unless otherwise specified in the Transaction
        --   Supplement.
    multiplier : Optional PositiveDecimal
        -- ^ The multiplier is the minimum number of the
        --   underlying - index or stock - that a participant has
        --   to trade while taking a position in the Future
        --   contract. The purpose of the multiplier is to inflate
        --   the value of the contract to add leverage to the
        --   trade. The multiplier for the Dow is 10, for the
        --   Nasdaq it is 100 and it is 250 for the Standard and
        --   Poor's index.
    futureContractReference : Optional String
        -- ^ Native identifier for the contract on the listing
        --   exchange.
    choice_ : Optional Future_choice
    underlyer : Optional ExchangeTradedContractUnderlyer
        -- ^ Underlyer of the option e.g. a listed future.
    settlementType : Optional SettlementTypeEnum
        -- ^ Settlement method for the contract (Cash, Physical).
        --   This value is used to populate the "Delivery Type"
        --   field for regulatory reporting (CFTC, ESMA).
      deriving (Eq, Ord, Show)

-- | A type defining a short form unique identifier for a
--   future contract.
data FutureId = FutureId with
    futureIdScheme : Optional NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

-- | A type defining a currency amount as at a future
--   value date.
data FutureValueAmount = FutureValueAmount with
    id_ : Optional Text
    currency : Currency
        -- ^ The currency in which an amount is denominated.
    amount : NonNegativeDecimal
        -- ^ The non negative monetary quantity in currency units.
    calculationPeriodNumberOfDays : Int
        -- ^ The number of days from the adjusted calculation
        --   period start date to the adjusted value date,
        --   calculated in accordance with the applicable day
        --   count fraction.
    valueDate : Date
        -- ^ Adjusted value date of the future value amount.
      deriving (Eq, Ord, Show)

-- | A variant type used inside Future
data Future_choice
    = Future_choice_Maturity Date
      -- ^ The date when the future contract expires.
    | Future_choice_ContractYearMonth Text
      -- ^ The contract month of the futures contract. i.e. F13
      --   WTI NYMEX Contract is 2013-01.
    deriving (Eq, Ord, Show)

-- | The type of a knockout barrier used in an accrual
--   product (e.g. American or European)
data FxAccrualKnockoutBarrierRetentionEnum
    = FxAccrualKnockoutBarrierRetentionEnum_Keep ()
      -- ^ If the barrier is triggered, the accrual process for
      --   that period stops. The parties retain the underlying
      --   settlement rights for that period with the currently
      --   accrued notional.
    | FxAccrualKnockoutBarrierRetentionEnum_Lose ()
      -- ^ If the barrier is triggered, the accrual process for
      --   that period stops. No settlement occurs for that
      --   period.
    deriving (Eq, Ord, Show)

-- | Describes the characteristics for american exercise
--   of FX products.
data FxAmericanExercise = FxAmericanExercise with
    id_ : Optional Text
    commencementDate : AdjustableOrRelativeDate
        -- ^ The earliest date on which the option can be
        --   exercised.
    expiryDate : Date
        -- ^ The latest date on which the option can be exercised.
    expiryTime : Optional BusinessCenterTime
        -- ^ Time at which the option expires on the expiry date,
        --   at the specified business center. This component
        --   represents the formal definition of option expiry
        --   time.
    cutName : Optional CutName
        -- ^ A code by which the expiry time is known in the
        --   market. This element is available to supplement the
        --   formal definition of expiry time, and must not be
        --   used in absence of the expiryTime element.
    latestValueDate : Date
        -- ^ The latest date on which both currencies traded will
        --   settle.
    multipleExercise : Optional FxMultipleExercise
        -- ^ Characteristics for multiple exercise.
      deriving (Eq, Ord, Show)

-- | Descibes the averaging period properties for an asian
--   option.
data FxAsianFeature = FxAsianFeature with
    primaryRateSource : InformationSource
        -- ^ The primary source for where the rate observation
        --   will occur. Will typically be either a page or a
        --   reference bank published rate.
    secondaryRateSource : Optional InformationSource
        -- ^ An alternative, or secondary, source for where the
        --   rate observation will occur. Will typically be either
        --   a page or a reference bank published rate.
    fixingTime : BusinessCenterTime
        -- ^ The time at which the spot currency exchange rate
        --   will be observed. It is specified as a time in a
        --   business day calendar location, e.g. 11:00am London
        --   time.
    choice_ : FxAsianFeature_choice
    payoutFormula : Optional String
        -- ^ The description of the mathematical computation for
        --   how the payout is computed.
    precision : Optional Int
        -- ^ Specifies the rounding precision in terms of a number
        --   of decimal places. Note how a percentage rate
        --   rounding of 5 decimal places is expressed as a
        --   rounding precision of 7 in the FpML document since
        --   the percentage is expressed as a decimal, e.g.
        --   9.876543% (or 0.09876543) being rounded to the
        --   nearest 5 decimal places is 9.87654% (or 0.0987654).
      deriving (Eq, Ord, Show)

-- | A record type used inside FxAsianFeature
data FxAsianFeature_FxRateObservation_model = FxAsianFeature_FxRateObservation_model with
    rateObservation : [FxAverageRateObservation]
        -- ^ One or more specific rate observation dates.
    rateObservationQuoteBasis : Optional StrikeQuoteBasisEnum
        -- ^ The method by which observed rate values are quoted,
        --   in terms of the option put/call currencies. In the
        --   absence of this element, rate observations are
        --   assumed to be quoted as per the option
        --   strikeQuoteBasis.
      deriving (Eq, Ord, Show)

-- | A variant type used inside FxAsianFeature
data FxAsianFeature_choice
    = FxAsianFeature_choice_Items1 FxAsianFeature_items
    | FxAsianFeature_choice_Items2 FxAsianFeature_items_2
    deriving (Eq, Ord, Show)

-- | A record type used inside FxAsianFeature
data FxAsianFeature_items = FxAsianFeature_items with
    observationSchedule : FxAverageRateObservationSchedule
        -- ^ Parametric schedule of rate observations.
    fxRateObservation_model : Optional FxAsianFeature_FxRateObservation_model
      deriving (Eq, Ord, Show)

-- | A record type used inside FxAsianFeature
data FxAsianFeature_items_2 = FxAsianFeature_items_2 with
    rateObservation : [FxAverageRateObservation]
        -- ^ One or more specific rate observation dates.
    rateObservationQuoteBasis : Optional StrikeQuoteBasisEnum
        -- ^ The method by which observed rate values are quoted,
        --   in terms of the option put/call currencies. In the
        --   absence of this element, rate observations are
        --   assumed to be quoted as per the option
        --   strikeQuoteBasis.
      deriving (Eq, Ord, Show)

-- | A type that, for average rate options, is used to
--   describe each specific observation date, as opposed
--   to a parametric frequency of rate observations.
data FxAverageRateObservation = FxAverageRateObservation with
    date_ : Date
        -- ^ A specific date for which an observation against a
        --   particular rate will be made and will be used for
        --   subsequent computations.
    averageRateWeightingFactor : Decimal
        -- ^ An optional factor that can be used for weighting
        --   certain observation dates. Typically, firms will
        --   weight each date with a factor of 1 if there are
        --   standard, unweighted adjustments.
    rate : Optional NonNegativeDecimal
        -- ^ The observed rate of exchange between the two option
        --   currencies. In the absence of
        --   rateObservationQuoteBasis, the rate is assumed to be
        --   quoted as per option strike/strikeQuoteBasis.
      deriving (Eq, Ord, Show)

-- | A type that describes average rate options rate
--   observations. This is used to describe a parametric
--   frequency of rate observations against a particular
--   rate. Typical frequencies might include daily, every
--   Friday, etc.
data FxAverageRateObservationSchedule = FxAverageRateObservationSchedule with
    startDate : Date
        -- ^ The start of the period over which observations are
        --   made to determine whether a trigger has occurred.
    endDate : Date
        -- ^ The end of the period over which observations are
        --   made to determine whether a trigger event has
        --   occurred.
    calculationPeriodFrequency : CalculationPeriodFrequency
        -- ^ The frequency at which calculation period end dates
        --   occur with the regular part of the calculation period
        --   schedule and their roll date convention.
      deriving (Eq, Ord, Show)

-- | Average calculation method e.g. Arithmetic, Harmonic)
data FxAveragingMethodEnum
    = FxAveragingMethodEnum_Arithmetic ()
      -- ^ Arithmetic method of average calculation.
    | FxAveragingMethodEnum_Harmonic ()
      -- ^ Harmonic method of average calculation.
    deriving (Eq, Ord, Show)

-- | The specification of whether the direction of a
--   barrier within an FX OTC option is Down or Up.
data FxBarrierDirectionEnum
    = FxBarrierDirectionEnum_Down ()
      -- ^ The barrier is triggered if the observed rate is at
      --   or below the barrier level during the period of
      --   observation, or at the time of observation.
    | FxBarrierDirectionEnum_Up ()
      -- ^ The barrier is triggered if the observed rate is at
      --   or above the barrier level during the period of
      --   observation, or at the time of observation.
    deriving (Eq, Ord, Show)

-- | Describes the properties of an FX barrier.
data FxBarrierFeature = FxBarrierFeature with
    barrierType : FxBarrierTypeEnum
        -- ^ This specifies whether the option becomes effective
        --   ("knock-in") or is annulled ("knock-out") when the
        --   respective barrier event occurs.
    direction : Optional FxBarrierDirectionEnum
        -- ^ This specifies whether the barrier direction is "Up"
        --   or "Down"; that is, that a barrier event occurs if
        --   the spot rate is at or above the trigger rate, or at
        --   or below the trigger rate during the period of
        --   observation of an american barrier, or at the times
        --   of observation of a discrete or european barrier.
    quotedCurrencyPair : QuotedCurrencyPair
        -- ^ Defines the two currencies for an FX trade and the
        --   quotation relationship between the two currencies.
    triggerRate : PositiveDecimal
        -- ^ The market rate is observed relative to the trigger
        --   rate, and if it is found to be on the predefined side
        --   of (above or below) the trigger rate, a trigger event
        --   is deemed to have occurred.
    informationSource : [InformationSource]
        -- ^ The information source where a published or displayed
        --   market rate will be obtained, e.g. Telerate Page
        --   3750.
    choice_ : Optional FxBarrierFeature_choice
      deriving (Eq, Ord, Show)

-- | A variant type used inside FxBarrierFeature
data FxBarrierFeature_choice
    = FxBarrierFeature_choice_Items FxBarrierFeature_items
    | FxBarrierFeature_choice_ObservationPoint [FxBusinessCenterDateTime]
      -- ^ The dates and times at which rate observations are
      --   made to determine whether a barrier event has
      --   occurred for a discrete or european barrier. If the
      --   time is not present then the time is deemed to be the
      --   same as the expiration time.
    deriving (Eq, Ord, Show)

-- | A record type used inside FxBarrierFeature
data FxBarrierFeature_items = FxBarrierFeature_items with
    observationStartDate : Date
        -- ^ The date on which the observation period for an
        --   american barrier starts. If the start date is not
        --   present, then the date and time of the start of the
        --   period is deemed to be the date and time the
        --   transaction was entered into.
    observationStartTime : Optional BusinessCenterTime
        -- ^ The time on the start date at which the observation
        --   period for an american barrier starts. If the time is
        --   not present and the start date is equivalent to the
        --   transaction date, the time is deemed to be the time
        --   the transaction was entered into. If the time is not
        --   present and the start date is other than the
        --   transaction date, then the time is deemed to be the
        --   same as the expiration time.
    sequence_ : Optional FxBarrierFeature_sequence
      deriving (Eq, Ord, Show)

-- | A record type used inside FxBarrierFeature
data FxBarrierFeature_sequence = FxBarrierFeature_sequence with
    observationEndDate : Date
        -- ^ The date on which the observation period for an
        --   american barrier ends. If the end date is not
        --   present, then the date and time of the end of the
        --   period is deemed to be the date and time of
        --   expiration.
    observationEndTime : Optional BusinessCenterTime
        -- ^ The time on the end date at which the observation
        --   period for an american barrier ends. If the time is
        --   not present, then the time is deemed to be the same
        --   as the expiration time.
      deriving (Eq, Ord, Show)

-- | The specification of whether a barrier has effect for
--   the current expiry period, or globally to the whole
--   product.
data FxBarrierScopeEnum
    = FxBarrierScopeEnum_Global ()
      -- ^ The barrier has effect for the expiry period in which
      --   it is triggered, and all subsequent periods.
    | FxBarrierScopeEnum_PerExpiry ()
      -- ^ The barrier has effect only for the expiry period in
      --   which it is triggered.
    deriving (Eq, Ord, Show)

-- | Defines the barrier observation style i.e. continuous
--   (American) or discrete (Euriopean).
data FxBarrierStyleEnum
    = FxBarrierStyleEnum_American ()
      -- ^ The barrier is observed continuously through the
      --   observation period.
    | FxBarrierStyleEnum_European ()
      -- ^ The barrier is observed on a discrete expiry date, or
      --   (in the case of a multi-phase product) series of
      --   expiry dates.
    deriving (Eq, Ord, Show)

-- | The specification of whether a barrier within an FX
--   OTC option is a knockin or knockout.
data FxBarrierTypeEnum
    = FxBarrierTypeEnum_Knockin ()
      -- ^ The option exists if the spot rate is at or above, or
      --   at or below the barrier level according to the
      --   specified barrier direction.
    | FxBarrierTypeEnum_Knockout ()
      -- ^ The option ceases to exist if the spot rate is at or
      --   above, or at or below the barrier level according to
      --   the specified barrier direction.
    | FxBarrierTypeEnum_ReverseKnockin ()
      -- ^ DEPRECATE: Option exists once the barrier is hit. The
      --   trigger rate is in-the money in relation to the
      --   strike rate.
    | FxBarrierTypeEnum_ReverseKnockout ()
      -- ^ DEPRECATE: Option ceases to exist once the barrier is
      --   hit. The trigger rate is in-the money in relation to
      --   the strike rate.
    deriving (Eq, Ord, Show)

-- | Defines the outcome in the event that the barrier is
--   triggered i.e. whether the product becomes active
--   (Knockin) or is extinguished (Knockout). Omitting
--   superseded values ReverseKnock[in|out].
data FxBarrierTypeSimpleEnum
    = FxBarrierTypeSimpleEnum_Knockin ()
      -- ^ The option exists if the spot rate is at or above, or
      --   at or below the barrier level according to the
      --   specified barrier direction.
    | FxBarrierTypeSimpleEnum_Knockout ()
      -- ^ The option ceases to exist if the spot rate is at or
      --   above, or at or below the barrier level according to
      --   the specified barrier direction.
    deriving (Eq, Ord, Show)

data FxBusinessCenterDateTime = FxBusinessCenterDateTime with
    date_ : Date
    time_ : Optional BusinessCenterTime
      deriving (Eq, Ord, Show)

-- | A type that is used for describing cash settlement of
--   an option / non deliverable forward. It includes the
--   currency to settle into together with the fixings
--   required to calculate the currency amount.
data FxCashSettlement = FxCashSettlement with
    settlementCurrency : Currency
        -- ^ The currency in which cash settlement occurs for
        --   non-deliverable forwards and cash-settled options
        --   (non-deliverable or otherwise).
    referenceCurrency : Optional Currency
    notionalAmount : Optional PositiveMoney
        -- ^ The amount of money that the settlement will be
        --   derived from.
    choice_ : Optional FxCashSettlement_choice
    settlementDate : Optional AdjustableDate
        -- ^ The date on which settlement is scheduled to occur
      deriving (Eq, Ord, Show)

-- | A type that is used for describing cash settlement of
--   a variance or volatility swap option. It includes the
--   settlement currency together with the spot currency
--   exchange required to calculate the settlement
--   currency amount.
data FxCashSettlementSimple = FxCashSettlementSimple with
    settlementCurrency : Currency
        -- ^ The currency in which cash settlement occurs.
    referenceCurrency : Optional Currency
        -- ^ Reference Currency.
    choice_ : Optional FxCashSettlementSimple_choice
      deriving (Eq, Ord, Show)

-- | A variant type used inside FxCashSettlementSimple
data FxCashSettlementSimple_choice
    = FxCashSettlementSimple_choice_Fixing [FxFixing]
      -- ^ Quoted currency pair.
    | FxCashSettlementSimple_choice_RateSourceFixing [FxRateSourceFixing]
      -- ^ Settlement Rate Source and Fixing Date.
    deriving (Eq, Ord, Show)

-- | A variant type used inside FxCashSettlement
data FxCashSettlement_choice
    = FxCashSettlement_choice_Fixing [FxFixing]
      -- ^ Specifies the source for and timing of a fixing of an
      --   exchange rate. This is used in the agreement of
      --   non-deliverable forward trades as well as various
      --   types of FX OTC options that require observations
      --   against a particular rate. This element is optional,
      --   permitting it to be omitted where fixing details are
      --   unavailable at the point of message creation. It has
      --   multiple occurrence to support the case where fixing
      --   details must be specified for more than one currency
      --   pair e.g. on an option settled into a third currency
      --   (that is not one of the option currencies).
    | FxCashSettlement_choice_RateSourceFixing [FxRateSourceFixing]
      -- ^ Specifies the source for and timing of a fixing of an
      --   exchange rate. This is used in the agreement of
      --   non-deliverable forward trades as well as various
      --   types of FX OTC options that require observations
      --   against a particular rate. This element is optional,
      --   permitting it to be omitted where fixing details are
      --   unavailable at the point of message creation. It has
      --   multiple occurrence to support the case where fixing
      --   details must be specified for more than one currency
      --   pair e.g. on an option settled into a third currency
      --   (that is not one of the option currencies).
    deriving (Eq, Ord, Show)

data FxConversion
    = FxConversion_AmountRelativeTo AmountReference
    | FxConversion_FxRate [FxRate]
      -- ^ Specifies a currency conversion rate.
    deriving (Eq, Ord, Show)

-- | Descrines the characteristics for American exercise
--   in FX digital options.
data FxDigitalAmericanExercise = FxDigitalAmericanExercise with
    id_ : Optional Text
    commencementDate : AdjustableOrRelativeDate
        -- ^ The earliest date on which the option can be
        --   exercised.
    expiryDate : Date
        -- ^ The latest date on which the option can be exercised.
    expiryTime : Optional BusinessCenterTime
        -- ^ Time at which the option expires on the expiry date,
        --   at the specified business center. This component
        --   represents the formal definition of option expiry
        --   time.
    cutName : Optional CutName
        -- ^ A code by which the expiry time is known in the
        --   market. This element is available to supplement the
        --   formal definition of expiry time, and must not be
        --   used in absence of the expiryTime element.
    latestValueDate : Date
        -- ^ The latest date on which both currencies traded will
        --   settle.
      deriving (Eq, Ord, Show)

-- | Describes an option having a triggerable fixed
--   payout.
data FxDigitalOption = FxDigitalOption with
    id_ : Optional Text
    product_model : Optional FxDigitalOption_Product_model
    buyerPartyReference : PartyReference
        -- ^ A reference to the party that buys this instrument,
        --   ie. pays for this instrument and receives the rights
        --   defined by it. See 2000 ISDA definitions Article 11.1
        --   (b). In the case of FRAs this the fixed rate payer.
    buyerAccountReference : Optional AccountReference
        -- ^ A reference to the account that buys this instrument.
    sellerPartyReference : PartyReference
        -- ^ A reference to the party that sells ("writes") this
        --   instrument, i.e. that grants the rights defined by
        --   this instrument and in return receives a payment for
        --   it. See 2000 ISDA definitions Article 11.1 (a). In
        --   the case of FRAs this is the floating rate payer.
    sellerAccountReference : Optional AccountReference
        -- ^ A reference to the account that sells this
        --   instrument.
    effectiveDate : Optional AdjustableOrRelativeDate
        -- ^ Effective date for a forward starting derivative. If
        --   this element is not present, the effective date is
        --   the trade date.
    tenorPeriod : Optional Period
        -- ^ A tenor expressed as a period type and multiplier
        --   (e.g. 1D, 1Y, etc.)
    choice_ : FxDigitalOption_choice
    exerciseProcedure : Optional ExerciseProcedure
        -- ^ A set of parameters defining procedures associated
        --   with the exercise.
    payout : FxOptionPayout
        -- ^ The amount of currency which becomes payable if and
        --   when a trigger event occurs.
    premium : [FxOptionPremium]
        -- ^ Premium amount or premium installment amount for an
        --   option.
      deriving (Eq, Ord, Show)

-- | A record type used inside FxDigitalOption
data FxDigitalOption_Product_model = FxDigitalOption_Product_model with
    primaryAssetClass : Optional AssetClass
        -- ^ A classification of the most important risk class of
        --   the trade. FpML defines a simple asset class
        --   categorization using a coding scheme.
    secondaryAssetClass : [AssetClass]
        -- ^ A classification of additional risk classes of the
        --   trade, if any. FpML defines a simple asset class
        --   categorization using a coding scheme.
    productType : [ProductType]
        -- ^ A classification of the type of product. FpML defines
        --   a simple product categorization using a coding
        --   scheme.
    productId : [ProductId]
        -- ^ A product reference identifier. The product ID is an
        --   identifier that describes the key economic
        --   characteristics of the trade type, with the exception
        --   of concepts such as size (notional, quantity, number
        --   of units) and price (fixed rate, strike, etc.) that
        --   are negotiated for each transaction. It can be used
        --   to hold identifiers such as the "UPI" (universal
        --   product identifier) required by certain regulatory
        --   reporting rules. It can also be used to hold
        --   identifiers of benchmark products or product
        --   temnplates used by certain trading systems or
        --   facilities. FpML does not define the domain values
        --   associated with this element. Note that the domain
        --   values for this element are not strictly an
        --   enumerated list.
    assetClass : [AssetClass]
        -- ^ A classification of the risk class of the trade. FpML
        --   defines a simple asset class categorization using a
        --   coding scheme.
      deriving (Eq, Ord, Show)

-- | A variant type used inside FxDigitalOption
data FxDigitalOption_choice
    = FxDigitalOption_choice_Items1 FxDigitalOption_items
    | FxDigitalOption_choice_Items2 FxDigitalOption_items_2
    deriving (Eq, Ord, Show)

-- | A record type used inside FxDigitalOption
data FxDigitalOption_items = FxDigitalOption_items with
    americanExercise : FxDigitalAmericanExercise
        -- ^ The parameters for defining the exercise period for
        --   an American style option.
    touch : [FxTouch]
        -- ^ Defines one or more conditions underwhich the option
        --   will payout if exercisable.
      deriving (Eq, Ord, Show)

-- | A record type used inside FxDigitalOption
data FxDigitalOption_items_2 = FxDigitalOption_items_2 with
    europeanExercise : FxEuropeanExercise
        -- ^ The parameters for defining the exercise period for
        --   an European style option.
    trigger : [FxTrigger]
        -- ^ Defines one or more conditions underwhich the option
        --   will payout if exercisable.
      deriving (Eq, Ord, Show)

-- | A structure describing how disruption for a specified
--   currency pair should be handled
data FxDisruption = FxDisruption with
    baseCurrency : Currency
        -- ^ The base currency in the exchange rate monitored for
        --   disruption events. Typically this will be the
        --   settlement currency, but coud be an intermediate
        --   currency, in the case where disruption provisions are
        --   defined for components of a cross rate.
    referenceCurrency : Currency
        -- ^ The reference currency in the exchange rate being
        --   monitored for disruption events.
    provisions : [FxDisruptionProvisions]
        -- ^ One or more provisions describiing disruption events
        --   and how they will be handled.
      deriving (Eq, Ord, Show)

-- | The base class for all disruption events
data FxDisruptionEvent
    = FxDisruptionEvent_PriceMateriality PriceMateriality
    | FxDisruptionEvent_PriceSourceDisruption FxDisruptionEventContents
    | FxDisruptionEvent_ExchangeRestrictions FxDisruptionEventContents
    | FxDisruptionEvent_DualExchangeRate FxDisruptionEventContents
    deriving (Eq, Ord, Show)

-- | Contents for base type FxDisruptionEvent
data FxDisruptionEventContents = FxDisruptionEventContents with
      deriving (Eq, Ord, Show)

-- | A container for the disruption event set
data FxDisruptionEvents = FxDisruptionEvents with
    fxDisruptionEvent : [FxDisruptionEvent]
        -- ^ The abstract element used to create the extendible
        --   set of disruption events
      deriving (Eq, Ord, Show)

-- | The base class for all disruption fallbacks
data FxDisruptionFallback
    = FxDisruptionFallback_ValuationPostponement Postponement
    | FxDisruptionFallback_SettlementPostponement Postponement
    | FxDisruptionFallback_NonDeliverableSubstitute NonDeliverableSubstitute
    | FxDisruptionFallback_NoFaultTermination FxDisruptionFallbackContents
    | FxDisruptionFallback_FallbackReferencePrice FxFallbackReferencePrice
    | FxDisruptionFallback_CalculationAgentDetermination FxDisruptionFallbackContents
    deriving (Eq, Ord, Show)

-- | Contents for base type FxDisruptionFallback
data FxDisruptionFallbackContents = FxDisruptionFallbackContents with
      deriving (Eq, Ord, Show)

-- | A container for the disruption fallback set
data FxDisruptionFallbacks = FxDisruptionFallbacks with
    fxDisruptionFallback : [FxDisruptionFallback]
        -- ^ The abstract element used to create the extendible
        --   set of disruption fallbacks.
      deriving (Eq, Ord, Show)

-- | Describes a set of disruption events and the
--   fallbacks they will invoke
data FxDisruptionProvisions = FxDisruptionProvisions with
    events : FxDisruptionEvents
        -- ^ If any of the events listed in this section occurs
        --   then the associated fallbacks willl be applied.
    fallbacks : FxDisruptionFallbacks
        -- ^ Describes the fallback processing or termination
        --   procedures that can be applied if an event occurs,
    applicableTerms : Optional FxTemplateTerms
        -- ^ Indicates the template terms that describe the events
        --   and fallbacks.
      deriving (Eq, Ord, Show)

-- | Describes the characteristics for European exercise
--   of FX products.
data FxEuropeanExercise = FxEuropeanExercise with
    id_ : Optional Text
    expiryDate : Date
        -- ^ Represents a standard expiry date as defined for an
        --   FX OTC option.
    expiryTime : Optional BusinessCenterTime
        -- ^ Time at which the option expires on the expiry date,
        --   at the specified business center. This component
        --   represents the formal definition of option expiry
        --   time.
    cutName : Optional CutName
        -- ^ A code by which the expiry time is known in the
        --   market. This element is available to supplement the
        --   formal definition of expiry time, and must not be
        --   used in absence of the expiryTime element.
    valueDate : Date
        -- ^ The date on which both currencies traded will settle.
      deriving (Eq, Ord, Show)

-- | Describes an alternative set of price sources
data FxFallbackReferencePrice = FxFallbackReferencePrice with
    primaryRateSource : SettlementRateOption
    secondaryRateSource : [SettlementRateOption]
      deriving (Eq, Ord, Show)

-- | A type for defining Fx Features.
data FxFeature = FxFeature with
    referenceCurrency : IdentifiedCurrency
        -- ^ Specifies the reference currency of the trade.
    choice_ : FxFeature_choice
      deriving (Eq, Ord, Show)

-- | A variant type used inside FxFeature
data FxFeature_choice
    = FxFeature_choice_Composite Composite
      -- ^ If “Composite” is specified as the Settlement Type in
      --   the relevant Transaction Supplement, an amount in the
      --   Settlement Currency, determined by the Calculation
      --   Agent as being equal to the number of Options
      --   exercised or deemed exercised, multiplied by:
      --   (Settlement Price – Strike Price) / (Strike Price –
      --   Settlement Price) x Multiplier provided that if the
      --   above is equal to a negative amount the Option Cash
      --   Settlement Amount shall be deemed to be zero.
    | FxFeature_choice_Quanto Quanto
      -- ^ If “Quanto” is specified as the Settlement Type in
      --   the relevant Transaction Supplement, an amount, as
      --   determined by the Calculation Agent in accordance
      --   with the Section 8.2 of the Equity Definitions.
    | FxFeature_choice_CrossCurrency Composite
      -- ^ If “Cross-Currency” is specified as the Settlement
      --   Type in the relevant Transaction Supplement, an
      --   amount in the Settlement Currency, determined by the
      --   Calculation Agent as being equal to the number of
      --   Options exercised or deemed exercised, multiplied by:
      --   (Settlement Price – Strike Price) / (Strike Price –
      --   Settlement Price) x Multiplier x one unit of the
      --   Reference Currency converted into an amount in the
      --   Settlement Currency using the rate of exchange of the
      --   Settlement Currency as quoted on the Reference Price
      --   Source on the Valuation Date, provided that if the
      --   above is equal to a negative amount the Option Cash
      --   Settlement Amount shall be deemed to be zero.
    deriving (Eq, Ord, Show)

-- | A type that specifies the source for and timing of a
--   fixing of an exchange rate. This is used in the
--   agreement of non-deliverable forward trades as well
--   as various types of FX OTC options that require
--   observations against a particular rate.
data FxFixing = FxFixing with
    quotedCurrencyPair : QuotedCurrencyPair
        -- ^ Defines the two currencies for an FX trade and the
        --   quotation relationship between the two currencies.
    fixingDate : Optional Date
        -- ^ Describes the specific date when a non-deliverable
        --   forward or cash-settled option will "fix" against a
        --   particular rate, which will be used to compute the
        --   ultimate cash settlement. This element should be
        --   omitted where a single, discrete fixing date cannot
        --   be identified e.g. on an american option, where
        --   fixing may occur at any date on a continuous range.
    fxSpotRateSource : Optional FxSpotRateSource
        -- ^ Specifies the methodology (reference source and,
        --   optionally, fixing time) to be used for determining a
        --   currency conversion rate.
      deriving (Eq, Ord, Show)

-- | Describes the FX fixing schedule, a single continuous
--   observation period which follows the applicable
--   business day schedule for the quoted rate source.
data FxFixingScheduleSimple = FxFixingScheduleSimple with
    choice_ : FxFixingScheduleSimple_choice
        -- ^ A choice of both startDate and endDate or endDate. A
        --   parametric schedule of rate observations that
        --   describes a single continuous observation period.
    dayType : Optional DayTypeEnum
        -- ^ Specifies whether the schedule follows the business
        --   or calendar days.
    businessCentersOrReference_model : Optional FxFixingScheduleSimple_BusinessCentersOrReference_model
    fixingDate : [Date]
        -- ^ An explicit list of dates in the schedule. For
        --   documentation purpose only.
      deriving (Eq, Ord, Show)

-- | A variant type used inside FxFixingScheduleSimple
data FxFixingScheduleSimple_BusinessCentersOrReference_model
    = FxFixingScheduleSimple_BusinessCentersOrReference_model_BusinessCentersReference BusinessCentersReference
      -- ^ A pointer style reference to a set of financial
      --   business centers defined elsewhere in the document.
      --   This set of business centers is used to determine
      --   whether a particular day is a business day or not.
    | FxFixingScheduleSimple_BusinessCentersOrReference_model_BusinessCenters BusinessCenters
    deriving (Eq, Ord, Show)

-- | A variant type used inside FxFixingScheduleSimple
data FxFixingScheduleSimple_choice
    = FxFixingScheduleSimple_choice_Items FxFixingScheduleSimple_items
    | FxFixingScheduleSimple_choice_EndDate Date
      -- ^ The end of the period over which observations are
      --   made to determine whether a trigger event has
      --   occurred.
    deriving (Eq, Ord, Show)

-- | A record type used inside FxFixingScheduleSimple
data FxFixingScheduleSimple_items = FxFixingScheduleSimple_items with
    startDate : Date
        -- ^ The start of the period over which observations are
        --   made to determine whether a trigger has occurred.
    endDate : Date
        -- ^ The end of the period over which observations are
        --   made to determine whether a trigger event has
        --   occurred.
      deriving (Eq, Ord, Show)

-- | Product model for a flexible-term fx forward (also
--   known as callable forward, window forward). This is a
--   term forward transaction over a specific period,
--   allowing the client full flexibility on the timing of
--   the transactional flow(s). The product allows for
--   (full or partial) execution at a predetermined
--   forward rate, at any time between the start date and
--   the expiry date. Although, the product is an
--   outright, it has some option-like characteristics,
--   leading to the use of option components in the model:
--   (i) the BuyerSeller model expresses the roles of the
--   parties in the overall transaction - the client
--   "buys" the product (ii) the PutCallCurrency model
--   expresses the buyer's perspective on the exchanged
--   currencies i.e. the client may buy (call) or sell
--   (put) the notional currency for the alternative
--   currency.
data FxFlexibleForward = FxFlexibleForward with
    id_ : Optional Text
    product_model : Optional FxFlexibleForward_Product_model
    buyerPartyReference : PartyReference
        -- ^ A reference to the party that buys this instrument,
        --   ie. pays for this instrument and receives the rights
        --   defined by it. See 2000 ISDA definitions Article 11.1
        --   (b). In the case of FRAs this the fixed rate payer.
    buyerAccountReference : Optional AccountReference
        -- ^ A reference to the account that buys this instrument.
    sellerPartyReference : PartyReference
        -- ^ A reference to the party that sells ("writes") this
        --   instrument, i.e. that grants the rights defined by
        --   this instrument and in return receives a payment for
        --   it. See 2000 ISDA definitions Article 11.1 (a). In
        --   the case of FRAs this is the floating rate payer.
    sellerAccountReference : Optional AccountReference
        -- ^ A reference to the account that sells this
        --   instrument.
    putCurrency : Currency
        -- ^ The currency which: - the option buyer will pay
        --   (sell) - the option writer will receive (buy)
    callCurrency : Currency
        -- ^ The currency which: - the option buyer will receive
        --   (buy) - the option writer will pay (sell)
    notionalAmount : PositiveMoney
        -- ^ The aggregate notional amount which will be
        --   exchanged, possibly as multiple partial executions,
        --   during the course of the execution period. Any
        --   residual notional which remains unexchanged at the
        --   expiry date will automatically be executed at the
        --   applicable exchange rate (strike).
    minimumExecutionAmount : Optional PositiveMoney
        -- ^ The minimum notional amount which must be executed in
        --   any single transaction.
    settlementAmount : Optional NonNegativeMoney
        -- ^ The total amount of settlement currency that will be
        --   paid over the life of the trade if calculable. The
        --   Settlement Amount element is a synonym for Contra
        --   Amount.
    executionPeriodDates : FxFlexibleForwardExecutionPeriod
        -- ^ The period during which the client has the right to
        --   execute a transaction, on any business day defined by
        --   reference to the specified business centers, subject
        --   to the constraints of the minimum execution amount
        --   and aggregate total notional amount. * Period dates
        --   are inclusive i.e. the expiry date is the final date
        --   on which execution may occur.
    sequence_ : Optional FxFlexibleForward_sequence
    settlementDateOffset : Optional RelativeDateOffset
        -- ^ The date on which delivery of the transacted currency
        --   amounts will occur, expressed as an offset from the
        --   execution date. * This property is optional in the
        --   schema, allowing it to be omitted by systems which do
        --   not support it; however this information would be
        --   expected in contractual documentation (e.g.
        --   termsheet, confirmation).
    finalSettlementDate : Optional Date
        -- ^ The final date for settlement. This is the date on
        --   which any residual exchange amount will be delivered.
        --   * This is an adjusted date i.e. a good business day
        --   for delivery in the location(s) specified in
        --   executionPeriodDates /businessCenters
    forwardRate : FxFlexibleForwardRate
        -- ^ Definition of the forward exchange rate for
        --   transactions executed during the execution period.
    additionalPayment : Optional Payment
        -- ^ Fee paid by the client at inception (analagous to an
        --   option premium).
      deriving (Eq, Ord, Show)

data FxFlexibleForwardExecutionPeriod = FxFlexibleForwardExecutionPeriod with
    id_ : Text
    startDate : Date
        -- ^ Start date of the execution period/window.
    expiryDate : Date
        -- ^ Expiry (maturity) date of the execution period.
    businessCenters : BusinessCenters
        -- ^ Business centers for determination of execution
        --   period business days.
      deriving (Eq, Ord, Show)

data FxFlexibleForwardRate = FxFlexibleForwardRate with
    currency1 : Currency
        -- ^ The first currency specified when a pair of
        --   currencies is to be evaluated.
    currency2 : Currency
        -- ^ The second currency specified when a pair of
        --   currencies is to be evaluated.
    quoteBasis : QuoteBasisEnum
        -- ^ The method by which the exchange rate is quoted.
    rate : PositiveDecimal
        -- ^ Constant rate value, applicable for the duration of
        --   the execution period.
    spotRate : Optional PositiveDecimal
        -- ^ The spot exchange rate for the specified currency
        --   pair as per the specified quote basis, as at the
        --   trade date.
      deriving (Eq, Ord, Show)

-- | A record type used inside FxFlexibleForward
data FxFlexibleForward_Product_model = FxFlexibleForward_Product_model with
    primaryAssetClass : Optional AssetClass
        -- ^ A classification of the most important risk class of
        --   the trade. FpML defines a simple asset class
        --   categorization using a coding scheme.
    secondaryAssetClass : [AssetClass]
        -- ^ A classification of additional risk classes of the
        --   trade, if any. FpML defines a simple asset class
        --   categorization using a coding scheme.
    productType : [ProductType]
        -- ^ A classification of the type of product. FpML defines
        --   a simple product categorization using a coding
        --   scheme.
    productId : [ProductId]
        -- ^ A product reference identifier. The product ID is an
        --   identifier that describes the key economic
        --   characteristics of the trade type, with the exception
        --   of concepts such as size (notional, quantity, number
        --   of units) and price (fixed rate, strike, etc.) that
        --   are negotiated for each transaction. It can be used
        --   to hold identifiers such as the "UPI" (universal
        --   product identifier) required by certain regulatory
        --   reporting rules. It can also be used to hold
        --   identifiers of benchmark products or product
        --   temnplates used by certain trading systems or
        --   facilities. FpML does not define the domain values
        --   associated with this element. Note that the domain
        --   values for this element are not strictly an
        --   enumerated list.
    assetClass : [AssetClass]
        -- ^ A classification of the risk class of the trade. FpML
        --   defines a simple asset class categorization using a
        --   coding scheme.
      deriving (Eq, Ord, Show)

-- | A record type used inside FxFlexibleForward
data FxFlexibleForward_sequence = FxFlexibleForward_sequence with
    earliestExecutionTime : BusinessCenterTime
        -- ^ The earliest time of day at the specified business
        --   center, at which the client may execute a
        --   transaction.
    latestExecutionTime : BusinessCenterTime
        -- ^ The latest time of day at the specified business
        --   center, at which the client may execute a
        --   transaction.
      deriving (Eq, Ord, Show)

-- | Describes a contract on future levels of implied
--   volatility. The main characteristic of this product
--   is that the underlying is a straddle (underlying
--   options) with a specific tenor starting from the
--   fixing (effective or pricing) date, and are priced on
--   that fixing date using a level of volatility that is
--   agreed at the time of execution of the volatility
--   agreement.
data FxForwardVolatilityAgreement = FxForwardVolatilityAgreement with
    id_ : Optional Text
    product_model : Optional FxForwardVolatilityAgreement_Product_model
    buyerPartyReference : PartyReference
        -- ^ A reference to the party that buys this instrument,
        --   ie. pays for this instrument and receives the rights
        --   defined by it. See 2000 ISDA definitions Article 11.1
        --   (b). In the case of FRAs this the fixed rate payer.
    buyerAccountReference : Optional AccountReference
        -- ^ A reference to the account that buys this instrument.
    sellerPartyReference : PartyReference
        -- ^ A reference to the party that sells ("writes") this
        --   instrument, i.e. that grants the rights defined by
        --   this instrument and in return receives a payment for
        --   it. See 2000 ISDA definitions Article 11.1 (a). In
        --   the case of FRAs this is the floating rate payer.
    sellerAccountReference : Optional AccountReference
        -- ^ A reference to the account that sells this
        --   instrument.
    quotedCurrencyPair : QuotedCurrencyPair
        -- ^ A currency Pair the straddle is based on.
    fixingDate : Date
        -- ^ The date when the underlying options are priced using
        --   the agreed forwardVolatilityStrikePrice and other
        --   market factors as agreed by the parties. Also known
        --   as "Effective Date" or "Reference Date".
    fixingTime : Optional BusinessCenterTime
        -- ^ The time of the fixing date when the underlying
        --   options are priced using the agreed
        --   forwardVolatilityStrikePrice and other market factors
        --   as agreed by the parties.
    forwardVolatilityStrikePrice : PositiveDecimal
        -- ^ the Volatility level as agreed on the Trade Date.
    straddle : FxStraddle
        -- ^ details of the straddle (underlying options).
    additionalPayment : [Payment]
        -- ^ The currency, amount and payment details for the
        --   Forward Volatility Agreement, as agreed at the time
        --   of execution.
      deriving (Eq, Ord, Show)

-- | A record type used inside
--   FxForwardVolatilityAgreement
data FxForwardVolatilityAgreement_Product_model = FxForwardVolatilityAgreement_Product_model with
    primaryAssetClass : Optional AssetClass
        -- ^ A classification of the most important risk class of
        --   the trade. FpML defines a simple asset class
        --   categorization using a coding scheme.
    secondaryAssetClass : [AssetClass]
        -- ^ A classification of additional risk classes of the
        --   trade, if any. FpML defines a simple asset class
        --   categorization using a coding scheme.
    productType : [ProductType]
        -- ^ A classification of the type of product. FpML defines
        --   a simple product categorization using a coding
        --   scheme.
    productId : [ProductId]
        -- ^ A product reference identifier. The product ID is an
        --   identifier that describes the key economic
        --   characteristics of the trade type, with the exception
        --   of concepts such as size (notional, quantity, number
        --   of units) and price (fixed rate, strike, etc.) that
        --   are negotiated for each transaction. It can be used
        --   to hold identifiers such as the "UPI" (universal
        --   product identifier) required by certain regulatory
        --   reporting rules. It can also be used to hold
        --   identifiers of benchmark products or product
        --   temnplates used by certain trading systems or
        --   facilities. FpML does not define the domain values
        --   associated with this element. Note that the domain
        --   values for this element are not strictly an
        --   enumerated list.
    assetClass : [AssetClass]
        -- ^ A classification of the risk class of the trade. FpML
        --   defines a simple asset class categorization using a
        --   coding scheme.
      deriving (Eq, Ord, Show)

data FxInformationSource = FxInformationSource with
    rateSource : InformationProvider
        -- ^ An information source for obtaining a market rate.
        --   For example Bloomberg, Reuters, Telerate etc.
    rateSourcePage : Optional RateSourcePage
        -- ^ A specific page for the rate source for obtaining a
        --   market rate.
    rateSourcePageHeading : Optional String
        -- ^ The heading for the rate source on a given rate
        --   source page.
    fixingTime : Optional BusinessCenterTime
        -- ^ The time that the fixing will be taken along with a
        --   business center to define the time zone
      deriving (Eq, Ord, Show)

-- | Describes the limits on the size of notional when
--   multiple exercise is allowed.
data FxMultipleExercise = FxMultipleExercise with
    minimumNotionalAmount : Optional NonNegativeMoney
        -- ^ The minimum amount of notional that can be exercised.
    maximumNotionalAmount : Optional NonNegativeMoney
        -- ^ The maximum amount of notiional that can be
        --   exercised.
      deriving (Eq, Ord, Show)

-- | Standard FX Spot and Forward offset conventions.
data FxOffsetConventionEnum
    = FxOffsetConventionEnum_FxSpot ()
    | FxOffsetConventionEnum_FxForward ()
    deriving (Eq, Ord, Show)

-- | Describes an FX option with optional asian and
--   barrier features.
data FxOption = FxOption with
    id_ : Optional Text
    product_model : Optional FxOption_Product_model
    buyerPartyReference : PartyReference
        -- ^ A reference to the party that buys this instrument,
        --   ie. pays for this instrument and receives the rights
        --   defined by it. See 2000 ISDA definitions Article 11.1
        --   (b). In the case of FRAs this the fixed rate payer.
    buyerAccountReference : Optional AccountReference
        -- ^ A reference to the account that buys this instrument.
    sellerPartyReference : PartyReference
        -- ^ A reference to the party that sells ("writes") this
        --   instrument, i.e. that grants the rights defined by
        --   this instrument and in return receives a payment for
        --   it. See 2000 ISDA definitions Article 11.1 (a). In
        --   the case of FRAs this is the floating rate payer.
    sellerAccountReference : Optional AccountReference
        -- ^ A reference to the account that sells this
        --   instrument.
    effectiveDate : Optional AdjustableOrRelativeDate
        -- ^ Effective date for a forward starting derivative. If
        --   this element is not present, the effective date is
        --   the trade date.
    tenorPeriod : Optional Period
        -- ^ A tenor expressed as a period type and multiplier
        --   (e.g. 1D, 1Y, etc.)
    choice_ : FxOption_choice
    exerciseProcedure : Optional ExerciseProcedure
        -- ^ A set of parameters defining procedures associated
        --   with the exercise.
    putCurrencyAmount : NonNegativeMoney
        -- ^ The currency amount that the option gives the right
        --   to sell.
    callCurrencyAmount : NonNegativeMoney
        -- ^ The currency amount that the option gives the right
        --   to buy.
    soldAs : Optional PutCallEnum
        -- ^ Indicates how the product was original sold as a Put
        --   or a Call.
    strike : FxStrikePrice
        -- ^ Defines the option strike price.
    spotRate : Optional PositiveDecimal
        -- ^ An optional element used for FX forwards and certain
        --   types of FX OTC options. For deals consumated in the
        --   FX Forwards Market, this represents the current
        --   market rate for a particular currency pair. For
        --   barrier and digital/binary options, it can be useful
        --   to include the spot rate at the time the option was
        --   executed to make it easier to know whether the option
        --   needs to move "up" or "down" to be triggered.
    features : Optional FxOptionFeatures
        -- ^ Describes additional features within the option.
    premium : Optional FxOptionPremium
        -- ^ Premium amount or premium installment amount for an
        --   option.
    cashSettlement : Optional FxCashSettlement
        -- ^ Specifies the currency and fixing details for cash
        --   settlement. This optional element is produced only
        --   where it has been specified at execution time that
        --   the option wlll be settled into a single cash payment
        --   - for example, in the case of a non-deliverable
        --   option (although note that an Fx option may be
        --   contractually cash settled, without necessarily being
        --   non-deliverable).
      deriving (Eq, Ord, Show)

-- | A type describing the features that may be present in
--   an FX option.
data FxOptionFeatures
    = FxOptionFeatures_Items FxOptionFeatures_items
    | FxOptionFeatures_Barrier [FxBarrierFeature]
    deriving (Eq, Ord, Show)

-- | A record type used inside FxOptionFeatures
data FxOptionFeatures_items = FxOptionFeatures_items with
    asian : FxAsianFeature
    barrier : [FxBarrierFeature]
      deriving (Eq, Ord, Show)

-- | A type that contains full details of a predefined
--   fixed payout which may occur (or not) in a Barrier
--   Option or Digital Option when a trigger event occurs
--   (or not).
data FxOptionPayout = FxOptionPayout with
    id_ : Optional Text
    currency : Currency
        -- ^ The currency in which an amount is denominated.
    amount : NonNegativeDecimal
        -- ^ The non negative monetary quantity in currency units.
    payoutStyle : PayoutEnum
        -- ^ The trigger event and payout may be asynchonous. A
        --   payout may become due on the trigger event, or the
        --   payout may (by agreeement at initiation) be deferred
        --   (for example) to the maturity date.
    settlementInformation : Optional SettlementInformation
        -- ^ The information required to settle a currency payment
        --   that results from a trade.
      deriving (Eq, Ord, Show)

-- | A type that specifies the premium exchanged for a
--   single option trade or option strategy.
data FxOptionPremium = FxOptionPremium with
    id_ : Optional Text
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    paymentDate : AdjustableOrRelativeDate
        -- ^ The payment date, which can be expressed as either an
        --   adjustable or relative date.
    paymentAmount : NonNegativeMoney
        -- ^ Non negative payment amount.
    settlementInformation : Optional SettlementInformation
        -- ^ The information required to settle a currency payment
        --   that results from a trade.
    quote : Optional PremiumQuote
        -- ^ This is the option premium as quoted. It is expected
        --   to be consistent with the premiumAmount and is for
        --   information only.
      deriving (Eq, Ord, Show)

-- | A record type used inside FxOption
data FxOption_Product_model = FxOption_Product_model with
    primaryAssetClass : Optional AssetClass
        -- ^ A classification of the most important risk class of
        --   the trade. FpML defines a simple asset class
        --   categorization using a coding scheme.
    secondaryAssetClass : [AssetClass]
        -- ^ A classification of additional risk classes of the
        --   trade, if any. FpML defines a simple asset class
        --   categorization using a coding scheme.
    productType : [ProductType]
        -- ^ A classification of the type of product. FpML defines
        --   a simple product categorization using a coding
        --   scheme.
    productId : [ProductId]
        -- ^ A product reference identifier. The product ID is an
        --   identifier that describes the key economic
        --   characteristics of the trade type, with the exception
        --   of concepts such as size (notional, quantity, number
        --   of units) and price (fixed rate, strike, etc.) that
        --   are negotiated for each transaction. It can be used
        --   to hold identifiers such as the "UPI" (universal
        --   product identifier) required by certain regulatory
        --   reporting rules. It can also be used to hold
        --   identifiers of benchmark products or product
        --   temnplates used by certain trading systems or
        --   facilities. FpML does not define the domain values
        --   associated with this element. Note that the domain
        --   values for this element are not strictly an
        --   enumerated list.
    assetClass : [AssetClass]
        -- ^ A classification of the risk class of the trade. FpML
        --   defines a simple asset class categorization using a
        --   coding scheme.
      deriving (Eq, Ord, Show)

-- | A variant type used inside FxOption
data FxOption_choice
    = FxOption_choice_AmericanExercise FxAmericanExercise
      -- ^ The parameters for defining the exercise period for
      --   an American style option.
    | FxOption_choice_EuropeanExercise FxEuropeanExercise
      -- ^ The parameters for defining the exercise period for
      --   an European style option.
    deriving (Eq, Ord, Show)

-- | FX Performance Fixed Leg describes Fixed FX Rate
--   Payer and Fixed Rate.
data FxPerformanceFixedLeg = FxPerformanceFixedLeg with
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiver_model : Optional FxPerformanceFixedLeg_Receiver_model
    fixedRate : PositiveDecimal
        -- ^ Fixed Rate means a rate, expressed as a decimal,
        --   equal to the per annum rate specified as such in the
        --   Confirmation for the Non-Deliverable Swap FX
        --   Transaction or that party (i.e., a per annum rate of
        --   15.10% as specified in a Confirmation shall be
        --   expressed as 0.1510 for calculation purposes).
      deriving (Eq, Ord, Show)

-- | A record type used inside FxPerformanceFixedLeg
data FxPerformanceFixedLeg_Receiver_model = FxPerformanceFixedLeg_Receiver_model with
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
      deriving (Eq, Ord, Show)

-- | Fx Performance Floating Leg describes Floating FX
--   Rate Payer.
data FxPerformanceFloatingLeg = FxPerformanceFloatingLeg with
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiver_model : Optional FxPerformanceFloatingLeg_Receiver_model
      deriving (Eq, Ord, Show)

-- | A record type used inside FxPerformanceFloatingLeg
data FxPerformanceFloatingLeg_Receiver_model = FxPerformanceFloatingLeg_Receiver_model with
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
      deriving (Eq, Ord, Show)

-- | Floating FX Rate describes Fixed FX Rate Payer and
--   Fixed Rate
data FxPerformanceLeg
    = FxPerformanceLeg_FxPerformanceFloatingLeg FxPerformanceFloatingLeg
    | FxPerformanceLeg_FxPerformanceFixedLeg FxPerformanceFixedLeg
    deriving (Eq, Ord, Show)

-- | Describes an FX volatility and variance swap.
data FxPerformanceSwap = FxPerformanceSwap with
    id_ : Optional Text
    product_model : Optional FxPerformanceSwap_Product_model
    quotedCurrencyPair : QuotedCurrencyPair
        -- ^ A Currency Pair with regards to this transaction and
        --   the quoting convention.
    vegaNotional : NonNegativeMoney
        -- ^ Vega Notional means the currency and amount specified
        --   as such in the related Confirmation.
    notional : Optional NonNegativeMoney
        -- ^ Notional Amount means, in the case of Transaction
        --   Type Variance Swap, the currency and amount specified
        --   as such in the related Confirmation or an amount
        --   calculated in accordance with the following: Notional
        --   Amount = Vega Notional Amount / (0.02 x Fixed FX
        --   Rate). This element must be produced in case of
        --   Variance Swap transaction.
    fixedLeg : FxPerformanceFixedLeg
        -- ^ Fixed FX Rate component describes the Fixed FX Rate
        --   and Fixed FX Rate Payer as such in the Confirmation
        --   for the Non-Deliverable Swap FX Transaction.
    floatingLeg : FxPerformanceFloatingLeg
        -- ^ Floating FX Rate component describes the Floating FX
        --   Rate Payer of the rate determined in accordance with
        --   the Floating FX Rate Option specified in the
        --   Definitions.
    fixingInformationSource : FxSpotRateSource
        -- ^ Fixing Information source parameters to determine the
        --   rate observed for each good business day within the
        --   Fixing Schedule.
    fixingSchedule : FxFixingScheduleSimple
        -- ^ Parametric schedule of rate observation dates.
    choice_ : Optional FxPerformanceSwap_choice
        -- ^ Valuation Date is the rate calculation date. Unless
        --   otherwise specified in the related Confirmation, the
        --   Valuation Date will be, in respect of a
        --   Non-Deliverable Swap FX Transaction, the Final
        --   Observation Date. The valuation date can be: [date]
        --   [Final Observation Date][The first Business Day
        --   following the Final Observation Date].
    settlementDate : AdjustableOrAdjustedDate
        -- ^ The date on which the Settlement Amount will be
        --   settled.
    annualizationFactor : Decimal
        -- ^ This specifies the numerator of an annualization
        --   factor. Frequently this number is equal to the number
        --   of rate observations in a year e.g. Daily
        --   Observations: 252.
    meanAdjustment : Bool
        -- ^ Specifies whether "Mean Adjustment" is applicable or
        --   not in the calculation of the Realized Volatility.
    numberOfReturns : Optional Int
        -- ^ Number of Returns is the number of Observation Dates
        --   in the Observation Period, excluding the Initial
        --   Observation Date (where the Observation Rate on the
        --   Initial Observation Date shall equal S0).
    additionalPayment : [Payment]
        -- ^ Additional Payment means, in respect of an FX
        --   Transaction, where such fee is required, and a
        --   Transaction Fee Payment Date, the amount, if any,
        --   that is specified or otherwise determined as provided
        --   in the related Confirmation and, subject to any
        --   applicable condition precedent, is payable by one
        --   party to the other as further specified or otherwise
        --   determined as provided in the related Confirmation on
        --   the Transaction Fee Payment Date or on each
        --   Transaction Fee Payment Date if more than one is
        --   specified, for value on such date.
    cashSettlement : Optional FxCashSettlementSimple
        -- ^ Specifies the Settlement currency and fixing details
        --   for cash settlement. The FX Volatility and FX
        --   Variance Swaps are inherently cash settled, but into
        --   the notional currency. The optional cashSettlement
        --   block is provided for the case where the Settlement
        --   Currency differs from that of the Notional.
      deriving (Eq, Ord, Show)

-- | A record type used inside FxPerformanceSwap
data FxPerformanceSwap_Product_model = FxPerformanceSwap_Product_model with
    primaryAssetClass : Optional AssetClass
        -- ^ A classification of the most important risk class of
        --   the trade. FpML defines a simple asset class
        --   categorization using a coding scheme.
    secondaryAssetClass : [AssetClass]
        -- ^ A classification of additional risk classes of the
        --   trade, if any. FpML defines a simple asset class
        --   categorization using a coding scheme.
    productType : [ProductType]
        -- ^ A classification of the type of product. FpML defines
        --   a simple product categorization using a coding
        --   scheme.
    productId : [ProductId]
        -- ^ A product reference identifier. The product ID is an
        --   identifier that describes the key economic
        --   characteristics of the trade type, with the exception
        --   of concepts such as size (notional, quantity, number
        --   of units) and price (fixed rate, strike, etc.) that
        --   are negotiated for each transaction. It can be used
        --   to hold identifiers such as the "UPI" (universal
        --   product identifier) required by certain regulatory
        --   reporting rules. It can also be used to hold
        --   identifiers of benchmark products or product
        --   temnplates used by certain trading systems or
        --   facilities. FpML does not define the domain values
        --   associated with this element. Note that the domain
        --   values for this element are not strictly an
        --   enumerated list.
    assetClass : [AssetClass]
        -- ^ A classification of the risk class of the trade. FpML
        --   defines a simple asset class categorization using a
        --   coding scheme.
      deriving (Eq, Ord, Show)

-- | A variant type used inside FxPerformanceSwap
data FxPerformanceSwap_choice
    = FxPerformanceSwap_choice_ValuationDate Date
      -- ^ Final Observation Date when Settlement Amount and
      --   Settlement Amount Payer determination date.
    | FxPerformanceSwap_choice_ValuationDateOffset FxValuationDateOffset
      -- ^ Valuation date offset relative to the Final
      --   Observation Date and can be: [Final Observation
      --   Date][The first Business Day following the Final
      --   Observation Date].
    deriving (Eq, Ord, Show)

-- | A type describing the rate of a currency conversion:
--   pair of currency, quotation mode and exchange rate.
data FxRate = FxRate with
    quotedCurrencyPair : QuotedCurrencyPair
        -- ^ Defines the two currencies for an FX trade and the
        --   quotation relationship between the two currencies.
    rate : Decimal
        -- ^ The rate of exchange between the two currencies of
        --   the leg of a deal. Must be specified with a quote
        --   basis.
      deriving (Eq, Ord, Show)

data FxRateAsset = FxRateAsset with
    id_ : Optional Text
    instrumentId : [InstrumentId]
        -- ^ Identification of the underlying asset, using public
        --   and/or private identifiers.
    description : Optional String
        -- ^ Long name of the underlying asset.
    currency : Optional IdentifiedCurrency
        -- ^ Trading currency of the underlyer when transacted as
        --   a cash instrument.
    exchangeId : Optional ExchangeId
        -- ^ Identification of the exchange on which this asset is
        --   transacted for the purposes of calculating a
        --   contractural payoff. The term "Exchange" is assumed
        --   to have the meaning as defined in the ISDA 2002
        --   Equity Derivatives Definitions.
    clearanceSystem : Optional ClearanceSystem
        -- ^ Identification of the clearance system associated
        --   with the transaction exchange.
    definition : Optional ProductReference
        -- ^ An optional reference to a full FpML product that
        --   defines the simple product in greater detail. In case
        --   of inconsistency between the terms of the simple
        --   product and those of the detailed definition, the
        --   values in the simple product override those in the
        --   detailed definition.
    quotedCurrencyPair : QuotedCurrencyPair
        -- ^ Defines the two currencies for an FX trade and the
        --   quotation relationship between the two currencies.
    rateSource : Optional FxSpotRateSource
        -- ^ Defines the source of the FX rate.
      deriving (Eq, Ord, Show)

-- | Describes a rate source to be fixed and the date the
--   fixing occurs
data FxRateSourceFixing = FxRateSourceFixing with
    settlementRateSource : FxSettlementRateSource
    fixingDate : AdjustableDate
        -- ^ The date on which the fixing is scheduled to occur.
      deriving (Eq, Ord, Show)

-- | The Lower Bound Direction. It only contains the
--   AtOrAbove and Above values.
data FxRegionLowerBoundDirectionEnum
    = FxRegionLowerBoundDirectionEnum_AtOrAbove ()
    | FxRegionLowerBoundDirectionEnum_Above ()
    deriving (Eq, Ord, Show)

-- | The Upper Bound Direction. It only contains the
--   AtOrBelow and Below values.
data FxRegionUpperBoundDirectionEnum
    = FxRegionUpperBoundDirectionEnum_AtOrBelow ()
    | FxRegionUpperBoundDirectionEnum_Below ()
    deriving (Eq, Ord, Show)

-- | Target specific settlement adjustment method.
data FxSettlementAdjustmentMethodEnum
    = FxSettlementAdjustmentMethodEnum_VariedStrike ()
    | FxSettlementAdjustmentMethodEnum_VariedNotional ()
    deriving (Eq, Ord, Show)

data FxSettlementRateSource
    = FxSettlementRateSource_SettlementRateOption SettlementRateOption
      -- ^ Indicates that an officially defined rate settlement
      --   rate option will be the used for the fixing.
    | FxSettlementRateSource_NonstandardSettlementRate FxInformationSource
      -- ^ Indicates that a non-standard rate source will be
      --   used for the fixing.
    deriving (Eq, Ord, Show)

-- | A type defining either a spot or forward FX
--   transactions.
data FxSingleLeg = FxSingleLeg with
    id_ : Optional Text
    product_model : Optional FxSingleLeg_Product_model
    exchangedCurrency1 : Payment
        -- ^ This is the first of the two currency flows that
        --   define a single leg of a standard foreign exchange
        --   transaction.
    exchangedCurrency2 : Payment
        -- ^ This is the second of the two currency flows that
        --   define a single leg of a standard foreign exchange
        --   transaction.
    dealtCurrency : Optional DealtCurrencyEnum
        -- ^ Indicates which currency was dealt.
    fxTenor_model : Optional FxSingleLeg_FxTenor_model
    choice_ : FxSingleLeg_choice
    exchangeRate : ExchangeRate
        -- ^ The rate of exchange between the two currencies.
    nonDeliverableSettlement : Optional FxCashSettlement
        -- ^ Used to describe a particular type of FX forward
        --   transaction that is settled in a single currency (for
        --   example, a non-deliverable forward).
    disruption : [FxDisruption]
        -- ^ Describes the disruption events and fallbacks
        --   applicable to a currency pair referenced by the
        --   transaction.
      deriving (Eq, Ord, Show)

-- | A variant type used inside FxSingleLeg
data FxSingleLeg_FxTenor_model
    = FxSingleLeg_FxTenor_model_TenorName FxTenorPeriodEnum
      -- ^ A tenor expressed with a standard business term (i.e.
      --   Spot, TomorrowNext, etc.)
    | FxSingleLeg_FxTenor_model_TenorPeriod Period
      -- ^ A tenor expressed as a period type and multiplier
      --   (e.g. 1D, 1Y, etc.)
    deriving (Eq, Ord, Show)

-- | A record type used inside FxSingleLeg
data FxSingleLeg_Product_model = FxSingleLeg_Product_model with
    primaryAssetClass : Optional AssetClass
        -- ^ A classification of the most important risk class of
        --   the trade. FpML defines a simple asset class
        --   categorization using a coding scheme.
    secondaryAssetClass : [AssetClass]
        -- ^ A classification of additional risk classes of the
        --   trade, if any. FpML defines a simple asset class
        --   categorization using a coding scheme.
    productType : [ProductType]
        -- ^ A classification of the type of product. FpML defines
        --   a simple product categorization using a coding
        --   scheme.
    productId : [ProductId]
        -- ^ A product reference identifier. The product ID is an
        --   identifier that describes the key economic
        --   characteristics of the trade type, with the exception
        --   of concepts such as size (notional, quantity, number
        --   of units) and price (fixed rate, strike, etc.) that
        --   are negotiated for each transaction. It can be used
        --   to hold identifiers such as the "UPI" (universal
        --   product identifier) required by certain regulatory
        --   reporting rules. It can also be used to hold
        --   identifiers of benchmark products or product
        --   temnplates used by certain trading systems or
        --   facilities. FpML does not define the domain values
        --   associated with this element. Note that the domain
        --   values for this element are not strictly an
        --   enumerated list.
    assetClass : [AssetClass]
        -- ^ A classification of the risk class of the trade. FpML
        --   defines a simple asset class categorization using a
        --   coding scheme.
      deriving (Eq, Ord, Show)

-- | A variant type used inside FxSingleLeg
data FxSingleLeg_choice
    = FxSingleLeg_choice_ValueDate Date
      -- ^ The date on which both currencies traded will settle.
    | FxSingleLeg_choice_Items FxSingleLeg_items
    deriving (Eq, Ord, Show)

-- | A record type used inside FxSingleLeg
data FxSingleLeg_items = FxSingleLeg_items with
    currency1ValueDate : Date
        -- ^ The date on which the currency1 amount will be
        --   settled. To be used in a split value date scenario.
    currency2ValueDate : Date
        -- ^ The date on which the currency2 amount will be
        --   settled. To be used in a split value date scenario.
      deriving (Eq, Ord, Show)

-- | A type defining the rate source and fixing time for
--   an fx rate.
data FxSpotRateSource = FxSpotRateSource with
    primaryRateSource : InformationSource
        -- ^ The primary source for where the rate observation
        --   will occur. Will typically be either a page or a
        --   reference bank published rate.
    secondaryRateSource : Optional InformationSource
        -- ^ An alternative, or secondary, source for where the
        --   rate observation will occur. Will typically be either
        --   a page or a reference bank published rate.
    fixingTime : Optional BusinessCenterTime
        -- ^ The time at which the spot currency exchange rate
        --   will be observed. It is specified as a time in a
        --   business day calendar location, e.g. 11:00am London
        --   time.
      deriving (Eq, Ord, Show)

-- | Straddle details. Straddle is composed of two
--   options: a call and a put involving the
--   quotedCurrencyPair.
data FxStraddle = FxStraddle with
    straddleType : FxStraddleTypeEnum
        -- ^ The type Straddle as agreed on the Trade Date, e.g.
        --   at the money forward straddle, or delta neutral
        --   straddle.
    tenorPeriod : Optional Period
        -- ^ A Tenor (time to maturity) of the straddle starting
        --   from the Fixing Date (e.g. 1y, 3m)
    europeanExercise : FxEuropeanExercise
        -- ^ The parameters for exercising the FxStraddle
        --   (underlying options), the underlying options are
        --   always European style options.
    exerciseProcedure : Optional ExerciseProcedure
        -- ^ A set of parameters defining procedures associated
        --   with the exercise.
    notional : NonNegativeMoney
        -- ^ The currency amount for the FxStraddle. This will be
        --   the notional for the underlying options, which may be
        --   exercised by the Buyer.
    counterCurrency : Currency
        -- ^ The counter currency and amount for the FxStraddle.
        --   The Counter Currency Amount is determined using the
        --   notional and the Strike Price (which is determined at
        --   the fixingTime on the fixingDate).
    premium : [FxStraddlePremium]
        -- ^ Defines the FX Straddle premium amount, payer and
        --   dates. This amount is also determined at the
        --   fixingTime on the fixingDate.
    settlementDate : Optional AdjustableOrAdjustedDate
        -- ^ DEPRECATED. The settlement date is already expressed
        --   by europeanExercise/valueDate. The Settlement Date
        --   for the FxStraddle (if exercised at the expiryTime on
        --   the expiry Date).
    cashSettlement : Optional FxCashSettlementSimple
        -- ^ Specifies the settlement type for the FxStraddle. If
        --   deliverable then this element is removed. If
        --   non-deliverable, then the In-The-Money amount of the
        --   relevant option within the FxStraddle is paid by the
        --   Seller to the Buyer. The In-The-Money amount is
        --   calculated using the parameters within this element.
      deriving (Eq, Ord, Show)

-- | The Currency and Amount to be paid by the Buyer to
--   the Seller. The straddle premium is calculated on the
--   Fixing Date using the Forward Volatility Agreement
--   parameters.
data FxStraddlePremium = FxStraddlePremium with
    id_ : Optional Text
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    paymentDate : AdjustableOrRelativeDate
        -- ^ The payment date, which can be expressed as either an
        --   adjustable or relative date.
    paymentCurrency : IdentifiedCurrency
        -- ^ The Premium Payment Currency.
    settlementInformation : Optional SettlementInformation
        -- ^ The Seller details for settling the
        --   FxStraddlePremium.
      deriving (Eq, Ord, Show)

-- | Forward Volatility Agreement Straddle Type.
data FxStraddleTypeEnum
    = FxStraddleTypeEnum_AtTheMoneyForward ()
      -- ^ At the money forward straddle.
    | FxStraddleTypeEnum_DeltaNeutral ()
      -- ^ Delta neutral straddle.
    deriving (Eq, Ord, Show)

-- | A type that describes the rate of exchange at which
--   the option has been struck.
data FxStrikePrice = FxStrikePrice with
    rate : PositiveDecimal
        -- ^ The rate of exchange between the two currencies of
        --   the leg of a deal.
    strikeQuoteBasis : StrikeQuoteBasisEnum
        -- ^ The method by which the strike rate is quoted.
      deriving (Eq, Ord, Show)

-- | A type defining either a spot/forward or
--   forward/forward FX swap transaction.
data FxSwap = FxSwap with
    id_ : Optional Text
    product_model : Optional FxSwap_Product_model
    nearLeg : FxSwapLeg
        -- ^ The FX transaction with the earliest value date.
    farLeg : FxSwapLeg
        -- ^ The FX transaction with the latest value date.
      deriving (Eq, Ord, Show)

data FxSwapLeg = FxSwapLeg with
    id_ : Optional Text
    tradeIdentifierReference : [PartyTradeIdentifierReference]
        -- ^ A reference to a party trade ID. This is provided in
        --   case the message creator wishes to record that the
        --   swap leg is assocatiated with a particular trade
        --   identifier; typically this is used for identifying a
        --   USI assocatied wih the leg.
    exchangedCurrency1 : Payment
        -- ^ This is the first of the two currency flows that
        --   define a single leg of a standard foreign exchange
        --   transaction.
    exchangedCurrency2 : Payment
        -- ^ This is the second of the two currency flows that
        --   define a single leg of a standard foreign exchange
        --   transaction.
    dealtCurrency : Optional DealtCurrencyEnum
        -- ^ Indicates which currency was dealt.
    fxTenor_model : Optional FxSwapLeg_FxTenor_model
    choice_ : FxSwapLeg_choice
    exchangeRate : ExchangeRate
        -- ^ The rate of exchange between the two currencies.
    nonDeliverableSettlement : Optional FxCashSettlement
        -- ^ Used to describe a particular type of FX forward
        --   transaction that is settled in a single currency (for
        --   example, a non-deliverable forward).
    disruption : [FxDisruption]
        -- ^ Describes the disruption events and fallbacks
        --   applicable to a currency pair referenced by the
        --   transaction.
      deriving (Eq, Ord, Show)

-- | A variant type used inside FxSwapLeg
data FxSwapLeg_FxTenor_model
    = FxSwapLeg_FxTenor_model_TenorName FxTenorPeriodEnum
      -- ^ A tenor expressed with a standard business term (i.e.
      --   Spot, TomorrowNext, etc.)
    | FxSwapLeg_FxTenor_model_TenorPeriod Period
      -- ^ A tenor expressed as a period type and multiplier
      --   (e.g. 1D, 1Y, etc.)
    deriving (Eq, Ord, Show)

-- | A variant type used inside FxSwapLeg
data FxSwapLeg_choice
    = FxSwapLeg_choice_ValueDate Date
      -- ^ The date on which both currencies traded will settle.
    | FxSwapLeg_choice_Items FxSwapLeg_items
    deriving (Eq, Ord, Show)

-- | A record type used inside FxSwapLeg
data FxSwapLeg_items = FxSwapLeg_items with
    currency1ValueDate : Date
        -- ^ The date on which the currency1 amount will be
        --   settled. To be used in a split value date scenario.
    currency2ValueDate : Date
        -- ^ The date on which the currency2 amount will be
        --   settled. To be used in a split value date scenario.
      deriving (Eq, Ord, Show)

-- | A record type used inside FxSwap
data FxSwap_Product_model = FxSwap_Product_model with
    primaryAssetClass : Optional AssetClass
        -- ^ A classification of the most important risk class of
        --   the trade. FpML defines a simple asset class
        --   categorization using a coding scheme.
    secondaryAssetClass : [AssetClass]
        -- ^ A classification of additional risk classes of the
        --   trade, if any. FpML defines a simple asset class
        --   categorization using a coding scheme.
    productType : [ProductType]
        -- ^ A classification of the type of product. FpML defines
        --   a simple product categorization using a coding
        --   scheme.
    productId : [ProductId]
        -- ^ A product reference identifier. The product ID is an
        --   identifier that describes the key economic
        --   characteristics of the trade type, with the exception
        --   of concepts such as size (notional, quantity, number
        --   of units) and price (fixed rate, strike, etc.) that
        --   are negotiated for each transaction. It can be used
        --   to hold identifiers such as the "UPI" (universal
        --   product identifier) required by certain regulatory
        --   reporting rules. It can also be used to hold
        --   identifiers of benchmark products or product
        --   temnplates used by certain trading systems or
        --   facilities. FpML does not define the domain values
        --   associated with this element. Note that the domain
        --   values for this element are not strictly an
        --   enumerated list.
    assetClass : [AssetClass]
        -- ^ A classification of the risk class of the trade. FpML
        --   defines a simple asset class categorization using a
        --   coding scheme.
      deriving (Eq, Ord, Show)

-- | Defines the method for calculating the gain in the
--   period where the Target Knock-Out event occurs
--   (Exact, Exclusive, Inclusive).
data FxTargetStyleEnum
    = FxTargetStyleEnum_Exact ()
      -- ^ The gain for the knockout period is adjusted to yield
      --   a final accumulated value equal to the target level.
    | FxTargetStyleEnum_Exclusive ()
      -- ^ The gain for the knockout period is adjusted to zero
      --   i.e. the target yields zero value in the final
      --   period.
    | FxTargetStyleEnum_Inclusive ()
      -- ^ The gain for the knockout period is equal to the
      --   whole benefit of the final fixing over spot i.e. the
      --   final accumulated value may exceed the target level.
    deriving (Eq, Ord, Show)

-- | Reference a code defining the origin of the trade
--   template terms
data FxTemplateTerms = FxTemplateTerms with
    fxTemplateTermsScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The specification of a time period containing values
--   such as Today, Tomorrow etc.
data FxTenorPeriodEnum
    = FxTenorPeriodEnum_Broken ()
      -- ^ Broken/non conventional Tenor Period.
    | FxTenorPeriodEnum_Today ()
      -- ^ Today Tenor Period.
    | FxTenorPeriodEnum_Tomorrow ()
      -- ^ Tomorrow Tenor Period.
    | FxTenorPeriodEnum_TomorrowNext ()
      -- ^ Day after Tomorrow Tenor Period.
    | FxTenorPeriodEnum_Spot ()
      -- ^ Spot Tenor Period.
    | FxTenorPeriodEnum_SpotNext ()
      -- ^ Day after Spot Tenor period.
    deriving (Eq, Ord, Show)

-- | Describes an american or discrete touch or no-touch
--   trigger applied to an FX binary or digital option.
data FxTouch = FxTouch with
    touchCondition : TouchConditionEnum
        -- ^ This specifies whether the applied trigger is a touch
        --   or no touch type.
    direction : Optional TriggerConditionEnum
        -- ^ This specifies whether the trigger direction is
        --   "AtOrAbove" or "AtOrBelow; that is, that a barrier
        --   event occurs if the spot rate is at or above the
        --   trigger rate, or at or below the trigger rate during
        --   the period of observation of an american trigger, or
        --   at the times of observation of a discrete trigger.
        --   DEPRECATE: Values "Above" and "Below" are deprecated.
    quotedCurrencyPair : QuotedCurrencyPair
        -- ^ Defines the two currencies for an FX trade and the
        --   quotation relationship between the two currencies.
    triggerRate : PositiveDecimal
        -- ^ The market rate is observed relative to the trigger
        --   rate, and if it is found to be on the predefined side
        --   of (above or below) the trigger rate, a barrier event
        --   is deemed to have occurred.
    spotRate : Optional PositiveDecimal
        -- ^ An optional element used for FX forwards and certain
        --   types of FX OTC options. For deals consumated in the
        --   FX Forwards Market, this represents the current
        --   market rate for a particular currency pair. For
        --   barrier and digital/binary options, it can be useful
        --   to include the spot rate at the time the option was
        --   executed to make it easier to know whether the market
        --   rate needs to move "up" or "down" to trigger a
        --   barrier event.
    informationSource : [InformationSource]
        -- ^ The information source where a published or displayed
        --   market rate will be obtained, e.g. Telerate Page
        --   3750.
    choice_ : Optional FxTouch_choice
      deriving (Eq, Ord, Show)

-- | A variant type used inside FxTouch
data FxTouch_choice
    = FxTouch_choice_Items FxTouch_items
    | FxTouch_choice_ObservationPoint [FxBusinessCenterDateTime]
      -- ^ The dates and times at which rate observations are
      --   made to determine whether a barrier event has
      --   occurred for a discrete trigger. If the time is not
      --   present then the time is deemed to be the same as the
      --   expiration time.
    deriving (Eq, Ord, Show)

-- | A record type used inside FxTouch
data FxTouch_items = FxTouch_items with
    observationStartDate : Date
        -- ^ The date on which the observation period for an
        --   american trigger starts. If the start date is not
        --   present, then the date and time of the start of the
        --   period is deemed to be the date and time the
        --   transaction was entered into.
    observationStartTime : Optional BusinessCenterTime
        -- ^ The time on the start date at which the observation
        --   period for an american trigger starts. If the time is
        --   not present and the start date is equivalent to the
        --   transaction date, the time is deemed to be the time
        --   the transaction was entered into. If the time is not
        --   present and the start date is other than the
        --   transaction date, then the time is deemed to be the
        --   same as the expiration time.
    sequence_ : Optional FxTouch_sequence
      deriving (Eq, Ord, Show)

-- | A record type used inside FxTouch
data FxTouch_sequence = FxTouch_sequence with
    observationEndDate : Date
        -- ^ The date on which the observation period for an
        --   american trigger ends. If the end date is not
        --   present, then the date and time of the end of the
        --   period is deemed to be the date and time of
        --   expiration.
    observationEndTime : Optional BusinessCenterTime
        -- ^ The time on the end date at which the observation
        --   period for an american trigger ends. If the time is
        --   not present, then the time is deemed to be the same
        --   as the expiration time.
      deriving (Eq, Ord, Show)

-- | Describes a european trigger applied to an FX digtal
--   option.
data FxTrigger = FxTrigger with
    triggerCondition : TriggerConditionEnum
        -- ^ The condition that applies to a european trigger
        --   applied to an FX digital option. It determines where
        --   the rate at expiry date and time at must be relative
        --   to the triggerRate for the option to be exercisable.
        --   The allowed values are "AtOrAbove" and "AtOrBelow".
        --   DEPRECATE: Values "Above" and "Below" are deprecated.
    quotedCurrencyPair : QuotedCurrencyPair
        -- ^ Defines the two currencies for an FX trade and the
        --   quotation relationship between the two currencies.
    triggerRate : PositiveDecimal
        -- ^ The market rate is observed relative to the trigger
        --   rate, and if it is found to be on the predefined side
        --   of (above or below) the trigger rate, a barrier event
        --   is deemed to have occurred.
    spotRate : Optional PositiveDecimal
        -- ^ An optional element used for FX forwards and certain
        --   types of FX OTC options. For deals consumated in the
        --   FX Forwards Market, this represents the current
        --   market rate for a particular currency pair. For
        --   barrier and digital/binary options, it can be useful
        --   to include the spot rate at the time the option was
        --   executed to make it easier to know whether the market
        --   rate needs to move "up" or "down" to trigger a
        --   barrier event.
    informationSource : [InformationSource]
        -- ^ The information source where a published or displayed
        --   market rate will be obtained, e.g. Telerate Page
        --   3750.
      deriving (Eq, Ord, Show)

-- | Describes a european trigger applied to an FX digtal
--   option.
data FxTriggerBase = FxTriggerBase with
    triggerCondition : TriggerConditionEnum
        -- ^ The condition that applies to a european trigger
        --   applied to an FX digital option. It determines where
        --   the rate at expiry date and time at must be relative
        --   to the triggerRate for the option to be exercisable.
        --   The allowed values are "AtOrAbove" and "AtOrBelow".
        --   DEPRECATE: Values "Above" and "Below" are deprecated.
    quotedCurrencyPair : QuotedCurrencyPair
        -- ^ Defines the two currencies for an FX trade and the
        --   quotation relationship between the two currencies.
    triggerRate : PositiveDecimal
        -- ^ The market rate is observed relative to the trigger
        --   rate, and if it is found to be on the predefined side
        --   of (above or below) the trigger rate, a barrier event
        --   is deemed to have occurred.
    spotRate : Optional PositiveDecimal
        -- ^ An optional element used for FX forwards and certain
        --   types of FX OTC options. For deals consumated in the
        --   FX Forwards Market, this represents the current
        --   market rate for a particular currency pair. For
        --   barrier and digital/binary options, it can be useful
        --   to include the spot rate at the time the option was
        --   executed to make it easier to know whether the market
        --   rate needs to move "up" or "down" to trigger a
        --   barrier event.
      deriving (Eq, Ord, Show)

-- | Valuation date offset is used in FX Variance Swap and
--   Volatility Swap to always relate the Final
--   Observation Date and can be: [Final Observation
--   Date][The first Business Day following the Final
--   Observation Date]
data FxValuationDateOffset = FxValuationDateOffset with
    id_ : Optional Text
    periodMultiplier : Int
        -- ^ A time period multiplier, e.g. 1, 2 or 3 etc. A
        --   negative value can be used when specifying an offset
        --   relative to another date, e.g. -2 days.
    period : PeriodEnum
        -- ^ A time period, e.g. a day, week, month or year of the
        --   stream. If the periodMultiplier value is 0 (zero)
        --   then period must contain the value D (day).
    dayType : Optional DayTypeEnum
        -- ^ In the case of an offset specified as a number of
        --   days, this element defines whether consideration is
        --   given as to whether a day is a good business day or
        --   not. If a day type of business days is specified then
        --   non-business days are ignored when calculating the
        --   offset. The financial business centers to use for
        --   determination of business days are implied by the
        --   context in which this element is used. This element
        --   must only be included when the offset is specified as
        --   a number of days. If the offset is zero days then the
        --   dayType element should not be included.
    businessCentersOrReference_model : Optional FxValuationDateOffset_BusinessCentersOrReference_model
      deriving (Eq, Ord, Show)

-- | A variant type used inside FxValuationDateOffset
data FxValuationDateOffset_BusinessCentersOrReference_model
    = FxValuationDateOffset_BusinessCentersOrReference_model_BusinessCentersReference BusinessCentersReference
      -- ^ A pointer style reference to a set of financial
      --   business centers defined elsewhere in the document.
      --   This set of business centers is used to determine
      --   whether a particular day is a business day or not.
    | FxValuationDateOffset_BusinessCentersOrReference_model_BusinessCenters BusinessCenters
    deriving (Eq, Ord, Show)

-- | The specification of the gas to be delivered.
data GasDelivery = GasDelivery with
    choice_ : GasDelivery_choice
    deliveryType : DeliveryTypeEnum
        -- ^ Indicates whether the buyer and seller are
        --   contractually obliged to consume and supply the
        --   specified quantities of the commodity.
    interconnectionPoint : Optional InterconnectionPoint
        -- ^ Identification of the border(s) or border point(s) of
        --   a transportation contract.
    sequence_ : Optional GasDelivery_sequence
      deriving (Eq, Ord, Show)

-- | The different options for specifying the Delivery
--   Periods for a physically settled gas trade.
data GasDeliveryPeriods = GasDeliveryPeriods with
    id_ : Optional Text
    choice_ : GasDeliveryPeriods_choice
    sequence_ : Optional GasDeliveryPeriods_sequence
      deriving (Eq, Ord, Show)

-- | A variant type used inside GasDeliveryPeriods
data GasDeliveryPeriods_choice
    = GasDeliveryPeriods_choice_Periods AdjustableDates
      -- ^ The Delivery Periods for this leg of the swap. This
      --   type is only intended to be used if the Delivery
      --   Periods differ from the Calculation Periods on the
      --   fixed or floating leg. If DeliveryPeriods mirror
      --   another leg, then the calculationPeriodsReference
      --   element should be used to point to the Calculation
      --   Periods on that leg - or the
      --   calculationPeriodsScheduleReference can be used to
      --   point to the Calculation Periods Schedule for that
      --   leg.
    | GasDeliveryPeriods_choice_PeriodsSchedule CommodityCalculationPeriodsSchedule
      -- ^ The Delivery Periods for this leg of the swap. This
      --   type is only intended to be used if the Delivery
      --   Periods differ from the Calculation Periods on the
      --   fixed or floating leg. If DeliveryPeriods mirror
      --   another leg, then the calculationPeriodsReference
      --   element should be used to point to the Calculation
      --   Periods on that leg - or the
      --   calculationPeriodsScheduleReference can be used to
      --   point to the Calculation Periods Schedule for that
      --   leg.
    | GasDeliveryPeriods_choice_CalculationPeriodsReference CalculationPeriodsReference
      -- ^ A pointer style reference to the Calculation Periods
      --   defined on another leg.
    | GasDeliveryPeriods_choice_CalculationPeriodsScheduleReference CalculationPeriodsScheduleReference
      -- ^ A pointer style reference to the Calculation Periods
      --   Schedule defined on another leg.
    | GasDeliveryPeriods_choice_CalculationPeriodsDatesReference CalculationPeriodsDatesReference
      -- ^ A pointer style reference to single-day-duration
      --   Calculation Periods defined on another leg.
    deriving (Eq, Ord, Show)

-- | A record type used inside GasDeliveryPeriods
data GasDeliveryPeriods_sequence = GasDeliveryPeriods_sequence with
    supplyStartTime : PrevailingTime
        -- ^ The time at which gas delivery should start on each
        --   day of the Delivery Period(s).
    supplyEndTime : PrevailingTime
        -- ^ The time at which gas delivery should end on each day
        --   of the Delivery Period(s).
      deriving (Eq, Ord, Show)

-- | A scheme identifying the types of the Delivery Point
--   for a physically settled gas trade.
data GasDeliveryPoint = GasDeliveryPoint with
    deliveryPointScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A variant type used inside GasDelivery
data GasDelivery_choice
    = GasDelivery_choice_DeliveryPoint GasDeliveryPoint
      -- ^ The physical or virtual point at which the commodity
      --   will be delivered.
    | GasDelivery_choice_Items GasDelivery_items
    deriving (Eq, Ord, Show)

-- | A record type used inside GasDelivery
data GasDelivery_items = GasDelivery_items with
    entryPoint : CommodityDeliveryPoint
        -- ^ The physical or virtual point at which the commodity
        --   enters a transportation system.
    withdrawalPoint : CommodityDeliveryPoint
        -- ^ The physical or virtual point at which the commodity
        --   is withdrawn from a transportation system.
      deriving (Eq, Ord, Show)

-- | A record type used inside GasDelivery
data GasDelivery_sequence = GasDelivery_sequence with
    buyerHub : CommodityHub
        -- ^ The hub code of the gas buyer.
    sellerHub : CommodityHub
        -- ^ The hub code of the has seller.
      deriving (Eq, Ord, Show)

-- | Physically settled leg of a physically settled gas
--   transaction.
data GasPhysicalLeg = GasPhysicalLeg with
    id_ : Optional Text
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    deliveryPeriods : GasDeliveryPeriods
        -- ^ The different options for specifying the Delivery or
        --   Supply Periods. Unless the quantity or price is to
        --   vary periodically during the trade or physical
        --   delivery occurs on a periodic basis, periodsSchedule
        --   should be used and set to 1T.
    gas : GasProduct
        -- ^ The specification of the gas to be delivered.
    deliveryConditions : GasDelivery
        -- ^ The physical delivery conditions for the transaction.
    deliveryQuantity : GasPhysicalQuantity
        -- ^ The different options for specifying the quantity.
        --   For Fixed trades where the quantity is known at the
        --   time of confirmation, a single quantity or a quantity
        --   per Delivery Period may be specified. For Variable
        --   trades minimum and maximum trades may be specified.
      deriving (Eq, Ord, Show)

-- | The quantity of gas to be delivered.
data GasPhysicalQuantity = GasPhysicalQuantity with
    id_ : Optional Text
    choice_ : GasPhysicalQuantity_choice_2
      deriving (Eq, Ord, Show)

-- | A variant type used inside GasPhysicalQuantity
data GasPhysicalQuantity_choice
    = GasPhysicalQuantity_choice_PhysicalQuantity CommodityNotionalQuantity
      -- ^ The Quantity per Delivery Period.
    | GasPhysicalQuantity_choice_PhysicalQuantitySchedule CommodityPhysicalQuantitySchedule
      -- ^ Allows the documentation of a shaped quantity trade
      --   where the quantity changes over the life of the
      --   transaction.
    deriving (Eq, Ord, Show)

-- | A variant type used inside GasPhysicalQuantity
data GasPhysicalQuantity_choice_2
    = GasPhysicalQuantity_choice_2_Items1 GasPhysicalQuantity_items
    | GasPhysicalQuantity_choice_2_Items2 GasPhysicalQuantity_items_2
    deriving (Eq, Ord, Show)

-- | A record type used inside GasPhysicalQuantity
data GasPhysicalQuantity_items = GasPhysicalQuantity_items with
    choice_ : GasPhysicalQuantity_choice
    totalPhysicalQuantity : Optional UnitQuantity
        -- ^ The Total Quantity of the commodity to be delivered.
      deriving (Eq, Ord, Show)

-- | A record type used inside GasPhysicalQuantity
data GasPhysicalQuantity_items_2 = GasPhysicalQuantity_items_2 with
    minPhysicalQuantity : [CommodityNotionalQuantity]
        -- ^ The minimum quantity to be delivered. If separate
        --   minimums need to be specified for different periods
        --   (e.g. a minimum per day and a minimum per month) this
        --   element should be repeated.
    maxPhysicalQuantity : [CommodityNotionalQuantity]
        -- ^ The maximum quantity to be delivered. If separate
        --   minimums need to be specified for different periods
        --   (e.g. a minimum per day and a minimum per month) this
        --   element should be repeated.
    electingParty : Optional PartyReference
        -- ^ Indicates the party able to choose whether the gas is
        --   delivered for a particular period e.g. a swing or
        --   interruptible contract.
      deriving (Eq, Ord, Show)

-- | A type defining the characteristics of the gas being
--   traded in a physically settled gas transaction.
data GasProduct = GasProduct with
    type_ : GasProductTypeEnum
        -- ^ The type of gas to be delivered.
    choice_ : Optional GasProduct_choice
      deriving (Eq, Ord, Show)

-- | The type of gas product.
data GasProductTypeEnum
    = GasProductTypeEnum_Butane ()
      -- ^ Normal butane (C4H10)
    | GasProductTypeEnum_CarbonDioxide ()
      -- ^ Carbon Dioxide (CO2)
    | GasProductTypeEnum_EPMix ()
      -- ^ Ethane-Propane Mix
    | GasProductTypeEnum_Ethane ()
      -- ^ Ethane (C2H6)
    | GasProductTypeEnum_Gasoline ()
      -- ^ Natural Gasoline (C4 – C12)
    | GasProductTypeEnum_Helium ()
      -- ^ Helium (He)
    | GasProductTypeEnum_HydrogenSulfide ()
      -- ^ Hydrogen Sulfide (H2S)
    | GasProductTypeEnum_Isobutane ()
      -- ^ Iso-Butane (C4H10)
    | GasProductTypeEnum_Methane ()
      -- ^ Methane (CH4)
    | GasProductTypeEnum_Naphtha ()
      -- ^ Naphtha (C5 – C12)
    | GasProductTypeEnum_NaturalGas ()
    | GasProductTypeEnum_Nitrogen ()
      -- ^ Nitrogen (N2)
    | GasProductTypeEnum_Pentane ()
      -- ^ Pentane (C5H12)
    | GasProductTypeEnum_Propane ()
      -- ^ Propane (C3H8)
    | GasProductTypeEnum_Propylene ()
      -- ^ Propylene or propene (C3H6)
    | GasProductTypeEnum_Water ()
      -- ^ Water Vapor (H2O)
    deriving (Eq, Ord, Show)

-- | A variant type used inside GasProduct
data GasProduct_choice
    = GasProduct_choice_CalorificValue NonNegativeDecimal
      -- ^ The calorific value of the gas to be delivered,
      --   specified in megajoules per cubic meter (MJ/m3).
    | GasProduct_choice_Quality GasQuality
      -- ^ The quality of the gas to be delivered.
    deriving (Eq, Ord, Show)

-- | The quantity of gas to be delivered.
data GasQuality = GasQuality with
    gasQualityScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | Identification of the law governing the transaction.
data GoverningLaw = GoverningLaw with
    governingLawScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data GracePeriodExtension = GracePeriodExtension with
    applicable : Bool
        -- ^ Indicates whether the grace period extension
        --   provision is applicable.
    gracePeriod : Optional Offset
        -- ^ The number of calendar or business days after any due
        --   date that the reference entity has to fulfil its
        --   obligations before a failure to pay credit event is
        --   deemed to have occurred. ISDA 2003 Term: Grace
        --   Period.
      deriving (Eq, Ord, Show)

-- | A payment component owed from one party to the other
--   for the cash flow date. This payment component should
--   by of only a single type, e.g. a fee or a cashflow
--   from a cashflow stream.
data GrossCashflow = GrossCashflow with
    sequence_ : Optional GrossCashflow_sequence
    cashflowType : Optional CashflowType
        -- ^ Defines the type of cash flow. For instance, a type
        --   of fee, premium, principal exchange, leg fee.
      deriving (Eq, Ord, Show)

-- | A record type used inside GrossCashflow
data GrossCashflow_sequence = GrossCashflow_sequence with
    cashflowId : CashflowId
        -- ^ Unique identifier for a cash flow.
    partyTradeIdentifierReference : Optional PartyTradeIdentifierReference
        -- ^ Pointer-style reference to the partyTradeIdentifier
        --   block within the tradeIdentifyingItems collection,
        --   which identifies the parent trade for this cashflow.
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    cashflowAmount : Money
        -- ^ Cash flow amount in a given currency to be
        --   paid/received.
      deriving (Eq, Ord, Show)

-- | A type defining a time specified in hh:mm:ss format
--   where the second component must be '00', e.g. 11am
--   would be represented as 11:00:00.
type HourMinuteTime = Text

-- | A generic type describing an identified asset.
data IdentifiedAsset
    = IdentifiedAsset_SimpleIRSwap SimpleIRSwap
    | IdentifiedAsset_SimpleFra SimpleFra
    | IdentifiedAsset_SimpleCreditDefaultSwap SimpleCreditDefaultSwap
    | IdentifiedAsset_RateIndex RateIndex
    | IdentifiedAsset_MutualFund MutualFund
    | IdentifiedAsset_Mortgage Mortgage
    | IdentifiedAsset_Loan Loan
    | IdentifiedAsset_FxRateAsset FxRateAsset
    | IdentifiedAsset_Future Future
    | IdentifiedAsset_ExchangeTradedContract ExchangeTradedContract
    | IdentifiedAsset_ExchangeTradedOption ExchangeTradedOption
    | IdentifiedAsset_Index Index
    | IdentifiedAsset_ExchangeTradedFund ExchangeTradedFund
    | IdentifiedAsset_EquityAsset EquityAsset
    | IdentifiedAsset_Deposit Deposit
    | IdentifiedAsset_Bond Bond
    | IdentifiedAsset_ConvertibleBond ConvertibleBond
    | IdentifiedAsset_Commodity Commodity
    deriving (Eq, Ord, Show)

-- | Specifies Currency with ID attribute.
data IdentifiedCurrency = IdentifiedCurrency with
    id_ : Optional Text
    currencyScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | Reference to a currency with ID attribute
data IdentifiedCurrencyReference = IdentifiedCurrencyReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | A date which can be referenced elsewhere.
data IdentifiedDate = IdentifiedDate with
    id_ : Optional Text
    content : Date
      deriving (Eq, Ord, Show)

-- | A type extending the PayerReceiverEnum type wih an id
--   attribute.
data IdentifiedPayerReceiver = IdentifiedPayerReceiver with
    id_ : Optional Text
    content : PayerReceiverEnum
      deriving (Eq, Ord, Show)

-- | A rate which can be referenced elsewhere.
data IdentifiedRate = IdentifiedRate with
    id_ : Optional Text
    content : Decimal
      deriving (Eq, Ord, Show)

-- | A version of a specification document used by the
--   message generator to format the document.
data ImplementationSpecification = ImplementationSpecification with
    name : Optional NormalizedString
    version : Optional ImplementationSpecificationVersion
    date_ : Optional Date
      deriving (Eq, Ord, Show)

data ImplementationSpecificationVersion = ImplementationSpecificationVersion with
    implementationSpecificationVersionScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data IndependentAmount = IndependentAmount with
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    paymentDetail : [PaymentDetail]
        -- ^ A container element allowing a schedule of payments
        --   associated with the Independent Amount.
      deriving (Eq, Ord, Show)

-- | A published index whose price depends on exchange
--   traded constituents.
data Index = Index with
    id_ : Optional Text
    instrumentId : [InstrumentId]
        -- ^ Identification of the underlying asset, using public
        --   and/or private identifiers.
    description : Optional String
        -- ^ Long name of the underlying asset.
    currency : Optional IdentifiedCurrency
        -- ^ Trading currency of the underlyer when transacted as
        --   a cash instrument.
    exchangeId : Optional ExchangeId
        -- ^ Identification of the exchange on which this asset is
        --   transacted for the purposes of calculating a
        --   contractural payoff. The term "Exchange" is assumed
        --   to have the meaning as defined in the ISDA 2002
        --   Equity Derivatives Definitions.
    clearanceSystem : Optional ClearanceSystem
        -- ^ Identification of the clearance system associated
        --   with the transaction exchange.
    definition : Optional ProductReference
        -- ^ An optional reference to a full FpML product that
        --   defines the simple product in greater detail. In case
        --   of inconsistency between the terms of the simple
        --   product and those of the detailed definition, the
        --   values in the simple product override those in the
        --   detailed definition.
    relatedExchangeId : [ExchangeId]
        -- ^ A short form unique identifier for a related
        --   exchange. If the element is not present then the
        --   exchange shall be the primary exchange on which
        --   listed futures and options on the underlying are
        --   listed. The term "Exchange" is assumed to have the
        --   meaning as defined in the ISDA 2002 Equity
        --   Derivatives Definitions.
    optionsExchangeId : [ExchangeId]
        -- ^ A short form unique identifier for an exchange on
        --   which the reference option contract is listed. This
        --   is to address the case where the reference exchange
        --   for the future is different than the one for the
        --   option. The options Exchange is referenced on share
        --   options when Merger Elections are selected as Options
        --   Exchange Adjustment.
    specifiedExchangeId : [ExchangeId]
        -- ^ A short form unique identifier for a specified
        --   exchange. If the element is not present then the
        --   exchange shall be default terms as defined in the
        --   MCA; unless otherwise specified in the Transaction
        --   Supplement.
    constituentExchangeId : [ExchangeId]
        -- ^ Identification of all the exchanges where
        --   constituents are traded. The term "Exchange" is
        --   assumed to have the meaning as defined in the ISDA
        --   2002 Equity Derivatives Definitions.
    futureId : Optional FutureId
        -- ^ A short form unique identifier for the reference
        --   future contract in the case of an index underlyer.
      deriving (Eq, Ord, Show)

-- | A structure describing the effect of a change to an
--   index.
data IndexChange = IndexChange with
    eventIdentifier : [BusinessEventIdentifier]
    indexFactor : Decimal
    factoredCalculationAmount : Money
      deriving (Eq, Ord, Show)

-- | The specification of the consequences of Index
--   Events.
data IndexEventConsequenceEnum
    = IndexEventConsequenceEnum_CalculationAgentAdjustment ()
      -- ^ Calculation Agent Adjustment
    | IndexEventConsequenceEnum_NegotiatedCloseOut ()
      -- ^ Negotiated Close Out
    | IndexEventConsequenceEnum_CancellationAndPayment ()
      -- ^ Cancellation and Payment
    | IndexEventConsequenceEnum_RelatedExchange ()
      -- ^ Related Exchange Adjustment
    deriving (Eq, Ord, Show)

-- | A party's industry sector classification.
data IndustryClassification = IndustryClassification with
    industryClassificationScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data InformationProvider = InformationProvider with
    informationProviderScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type defining the source for a piece of information
--   (e.g. a rate refix or an fx fixing).
data InformationSource = InformationSource with
    rateSource : InformationProvider
        -- ^ An information source for obtaining a market rate.
        --   For example Bloomberg, Reuters, Telerate etc.
    rateSourcePage : Optional RateSourcePage
        -- ^ A specific page for the rate source for obtaining a
        --   market rate.
    rateSourcePageHeading : Optional String
        -- ^ The heading for the rate source on a given rate
        --   source page.
      deriving (Eq, Ord, Show)

type Initial = Text

-- | A short form unique identifier for a security.
data InstrumentId = InstrumentId with
    instrumentIdScheme : NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

-- | The economics of a trade of a multiply traded
--   instrument.
data InstrumentTradeDetails = InstrumentTradeDetails with
    id_ : Optional Text
    product_model : Optional InstrumentTradeDetails_Product_model
    buyerPartyReference : PartyReference
        -- ^ A reference to the party that buys this instrument,
        --   ie. pays for this instrument and receives the rights
        --   defined by it. See 2000 ISDA definitions Article 11.1
        --   (b). In the case of FRAs this the fixed rate payer.
    buyerAccountReference : Optional AccountReference
        -- ^ A reference to the account that buys this instrument.
    sellerPartyReference : PartyReference
        -- ^ A reference to the party that sells ("writes") this
        --   instrument, i.e. that grants the rights defined by
        --   this instrument and in return receives a payment for
        --   it. See 2000 ISDA definitions Article 11.1 (a). In
        --   the case of FRAs this is the floating rate payer.
    sellerAccountReference : Optional AccountReference
        -- ^ A reference to the account that sells this
        --   instrument.
    underlyingAsset : Asset
        -- ^ Define the underlying asset, either a listed security
        --   or other instrument.
    quantity : Optional InstrumentTradeQuantity
        -- ^ A description of how much of the instrument was
        --   traded.
    pricing : Optional InstrumentTradePricing
        -- ^ The price paid for the instrument.
    principal : Optional InstrumentTradePrincipal
        -- ^ The value, in instrument currency, of the amount of
        --   the instrument that was traded.
      deriving (Eq, Ord, Show)

-- | A record type used inside InstrumentTradeDetails
data InstrumentTradeDetails_Product_model = InstrumentTradeDetails_Product_model with
    primaryAssetClass : Optional AssetClass
        -- ^ A classification of the most important risk class of
        --   the trade. FpML defines a simple asset class
        --   categorization using a coding scheme.
    secondaryAssetClass : [AssetClass]
        -- ^ A classification of additional risk classes of the
        --   trade, if any. FpML defines a simple asset class
        --   categorization using a coding scheme.
    productType : [ProductType]
        -- ^ A classification of the type of product. FpML defines
        --   a simple product categorization using a coding
        --   scheme.
    productId : [ProductId]
        -- ^ A product reference identifier. The product ID is an
        --   identifier that describes the key economic
        --   characteristics of the trade type, with the exception
        --   of concepts such as size (notional, quantity, number
        --   of units) and price (fixed rate, strike, etc.) that
        --   are negotiated for each transaction. It can be used
        --   to hold identifiers such as the "UPI" (universal
        --   product identifier) required by certain regulatory
        --   reporting rules. It can also be used to hold
        --   identifiers of benchmark products or product
        --   temnplates used by certain trading systems or
        --   facilities. FpML does not define the domain values
        --   associated with this element. Note that the domain
        --   values for this element are not strictly an
        --   enumerated list.
    assetClass : [AssetClass]
        -- ^ A classification of the risk class of the trade. FpML
        --   defines a simple asset class categorization using a
        --   coding scheme.
      deriving (Eq, Ord, Show)

-- | A structure describing the price paid for the
--   instrument.
data InstrumentTradePricing = InstrumentTradePricing with
    quote : [BasicQuotation]
    couponStartDate : Optional Date
        -- ^ The date interest started accruing for the accrued
        --   interest calculation on an interest bearing security.
    exDividendDate : Optional Date
        -- ^ The date when a distribution of dividends or interest
        --   is deducted from a securities asset, or set aside for
        --   payment to the original bondholders. From the
        --   ex-date, any dividends that are owing on the security
        --   are paid to the original owner. As a consequence of
        --   this, on the ex-date, the securities price typically
        --   drops by the amount of the distribution (plus or
        --   minus any market activity).
    tradedFlatOfAccrued : Optional Bool
        -- ^ Whether the accrued interest in included when the
        --   trade settles. ("true" means accrued interest is not
        --   included when the trade settles.)
      deriving (Eq, Ord, Show)

-- | A structure describing the value in "native" currency
--   of an instrument that was traded.
data InstrumentTradePrincipal = InstrumentTradePrincipal with
    principalAmount : Optional NetAndGross
        -- ^ The net and/or gross value of the amount traded in
        --   native currency.
      deriving (Eq, Ord, Show)

-- | A structure describing the amount of an instrument
--   that was traded.
data InstrumentTradeQuantity
    = InstrumentTradeQuantity_Number Decimal
      -- ^ The (absolute) number of units of the underlying
      --   instrument that were traded.
    | InstrumentTradeQuantity_Nominal Money
      -- ^ The monetary value of the security (eg. fixed income
      --   security) that was traded).
    deriving (Eq, Ord, Show)

-- | Identification of the border(s) or border point(s) of
--   a transportation contract. Use the list of EIC codes
--   for timelines for electricity (T Codes) or the list
--   of EIC codes for measurement points for gas (Z
--   Codes).
data InterconnectionPoint = InterconnectionPoint with
    interconnectionPointScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type defining the way in which interests are
--   accrued: the applicable rate (fixed or floating
--   reference) and the compounding method.
data InterestAccrualsCompoundingMethod = InterestAccrualsCompoundingMethod with
    choice_ : InterestAccrualsCompoundingMethod_choice
    sequence_ : Optional InterestAccrualsCompoundingMethod_sequence
      deriving (Eq, Ord, Show)

-- | A variant type used inside
--   InterestAccrualsCompoundingMethod
data InterestAccrualsCompoundingMethod_choice
    = InterestAccrualsCompoundingMethod_choice_FloatingRateCalculation FloatingRateCalculation
      -- ^ The floating rate calculation definitions
    | InterestAccrualsCompoundingMethod_choice_FixedRate Decimal
      -- ^ The calculation period fixed rate. A per annum rate,
      --   expressed as a decimal. A fixed rate of 5% would be
      --   represented as 0.05.
    deriving (Eq, Ord, Show)

-- | A record type used inside
--   InterestAccrualsCompoundingMethod
data InterestAccrualsCompoundingMethod_sequence = InterestAccrualsCompoundingMethod_sequence with
    compoundingMethod : CompoundingMethodEnum
        -- ^ If more that one calculation period contributes to a
        --   single payment amount this element specifies whether
        --   compounding is applicable, and if so, what
        --   compounding method is to be used. This element must
        --   only be included when more that one calculation
        --   period contributes to a single payment amount.
      deriving (Eq, Ord, Show)

-- | A type describing the method for accruing interests
--   on dividends. Can be either a fixed rate reference or
--   a floating rate reference.
data InterestAccrualsMethod
    = InterestAccrualsMethod_FloatingRateCalculation FloatingRateCalculation
      -- ^ The floating rate calculation definitions
    | InterestAccrualsMethod_FixedRate Decimal
      -- ^ The calculation period fixed rate. A per annum rate,
      --   expressed as a decimal. A fixed rate of 5% would be
      --   represented as 0.05.
    deriving (Eq, Ord, Show)

-- | Defines whether the agent bank is making an interest
--   payment based on the lender pro-rata share at the end
--   of the period (snapshot) or based on the lender
--   position throughout the period.
data InterestCalculationMethodEnum
    = InterestCalculationMethodEnum_ContractPositionThruPeriod ()
      -- ^ Agent bank is making an interest payment based on the
      --   lender's contract position throughout the interest
      --   payment period.
    | InterestCalculationMethodEnum_ProRataShareSnapshot ()
      -- ^ Agent bank is making an interest payment based on the
      --   lender pro-rata share snapshot at the time of
      --   payment.
    deriving (Eq, Ord, Show)

-- | The specification of the interest shortfall cap,
--   applicable to mortgage derivatives.
data InterestShortfallCapEnum
    = InterestShortfallCapEnum_Fixed ()
    | InterestShortfallCapEnum_Variable ()
    deriving (Eq, Ord, Show)

-- | A type that describes the information to identify an
--   intermediary through which payment will be made by
--   the correspondent bank to the ultimate beneficiary of
--   the funds.
data IntermediaryInformation = IntermediaryInformation with
    choice_ : IntermediaryInformation_choice
    intermediarySequenceNumber : Int
        -- ^ A sequence number that gives the position of the
        --   current intermediary in the chain of payment
        --   intermediaries. The assumed domain value set is an
        --   ascending sequence of integers starting from 1.
    intermediaryPartyReference : Optional PartyReference
        -- ^ Reference to the party acting as intermediary.
      deriving (Eq, Ord, Show)

-- | A variant type used inside IntermediaryInformation
data IntermediaryInformation_choice
    = IntermediaryInformation_choice_RoutingIds RoutingIds
      -- ^ A set of unique identifiers for a party, eachone
      --   identifying the party within a payment system. The
      --   assumption is that each party will not have more than
      --   one identifier within the same payment system.
    | IntermediaryInformation_choice_RoutingExplicitDetails RoutingExplicitDetails
      -- ^ A set of details that is used to identify a party
      --   involved in the routing of a payment when the party
      --   does not have a code that identifies it within one of
      --   the recognized payment systems.
    | IntermediaryInformation_choice_RoutingIdsAndExplicitDetails RoutingIdsAndExplicitDetails
      -- ^ A combination of coded payment system identifiers and
      --   details for physical addressing for a party involved
      --   in the routing of a payment.
    deriving (Eq, Ord, Show)

-- | The type of interpolation used.
data InterpolationMethod = InterpolationMethod with
    interpolationMethodScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | Defines applicable periods for interpolation.
data InterpolationPeriodEnum
    = InterpolationPeriodEnum_Initial ()
      -- ^ Interpolation is applicable to the initial period
      --   only.
    | InterpolationPeriodEnum_InitialAndFinal ()
      -- ^ Interpolation is applicable to the initial and final
      --   periods only.
    | InterpolationPeriodEnum_Final ()
      -- ^ Interpolation is applicable to the final period only.
    | InterpolationPeriodEnum_AnyPeriod ()
      -- ^ Interpolation is applicable to any non-standard
      --   period.
    deriving (Eq, Ord, Show)

-- | The data type used for issuer identifiers.
data IssuerId = IssuerId with
    issuerIdScheme : Optional NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

-- | A complex type for a two part identifier such as a
--   USI.
data IssuerTradeId = IssuerTradeId with
    issuer : IssuerId
    tradeId : TradeId
      deriving (Eq, Ord, Show)

-- | Knock In means option to exercise comes into
--   existence. Knock Out means option to exercise goes
--   out of existence.
data Knock = Knock with
    knockIn : Optional TriggerEvent
        -- ^ The knock in.
    knockOut : Optional TriggerEvent
        -- ^ The knock out.
      deriving (Eq, Ord, Show)

-- | Describes an observation that caused a barrier knock
--   out to trigger
data KnockOutRateObservation = KnockOutRateObservation with
    observationDate : Date
        -- ^ The date on which the rate observation occurred, in
        --   order to trigger the barrier event.observationDate
    observationTime : Optional BusinessCenterTime
        -- ^ The time at which the observation occurred.
    informationSource : Optional InformationSource
    choice_ : KnockOutRateObservation_choice
    triggerCondition : TriggerConditionEnum
        -- ^ The side of the trigger rate/price (level) on which a
        --   rate observation occurred, in order to trigger the
        --   barrier event.
    rebatePayment : Optional NonNegativePayment
        -- ^ Any rebate payable as a result of the knock out
      deriving (Eq, Ord, Show)

-- | A variant type used inside KnockOutRateObservation
data KnockOutRateObservation_choice
    = KnockOutRateObservation_choice_Items1 KnockOutRateObservation_items
    | KnockOutRateObservation_choice_Items2 KnockOutRateObservation_items_2
    deriving (Eq, Ord, Show)

-- | A record type used inside KnockOutRateObservation
data KnockOutRateObservation_items = KnockOutRateObservation_items with
    triggerRate : Decimal
        -- ^ The rate value (level) which was attained/breached,
        --   in order to trigger the barrier event.
    quotedCurrencyPair : QuotedCurrencyPair
        -- ^ Defines the currency pair and quote basis for an FX
        --   rate.
    observedRate : Optional Decimal
        -- ^ The observed rate value which triggered the barrier
        --   event.
      deriving (Eq, Ord, Show)

-- | A record type used inside KnockOutRateObservation
data KnockOutRateObservation_items_2 = KnockOutRateObservation_items_2 with
    triggerPrice : PositiveMoney
        -- ^ The price value (level) which was attained/breached,
        --   in order to trigger the barrier event.
    observedPrice : Optional PositiveMoney
        -- ^ The observed price value which triggered the barrier
        --   event.
      deriving (Eq, Ord, Show)

-- | An observation period that is offset from a
--   Calculation Period.
data Lag = Lag with
    id_ : Optional Text
    lagDuration : Period
        -- ^ The period during which observations will be made. If
        --   a firstObservationDateOffset is specified, the
        --   observation period will start the specified interval
        --   prior to each Calculation Period - i.e. if the
        --   firstObservationDateOffset is 4 months and the
        --   lagDuration is 3 months, observations will be taken
        --   in months 4,3 and 2 (but not 1) prior to each
        --   Calculation Period. If no firstObservationDate is
        --   specified, the observation period will end
        --   immediately preceding each Calculation Period.
    firstObservationDateOffset : Optional Period
        -- ^ The interval between the start of each lagDuration
        --   and the start of each respective calculation period.
      deriving (Eq, Ord, Show)

-- | Allows a lag to reference one already defined
--   elsewhere in the trade.
data LagReference = LagReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | The data type used for indicating the language of the
--   resource, described using the ISO 639-2/T Code.
data Language = Language with
    languageScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The type of automatic adjustment that a Letter of
--   Credit can exhibit.
data LcAutoAdjustEnum
    = LcAutoAdjustEnum_AutoDecrease ()
      -- ^ Denotes an automatic decrease.
    | LcAutoAdjustEnum_AutoIncrease ()
      -- ^ Denotes an automatic increase.
    | LcAutoAdjustEnum_AutoIncreaseOrDecrease ()
      -- ^ Denotes an automatic increase or decrease.
    deriving (Eq, Ord, Show)

-- | A supertype of leg. All swap legs extend this type.
data Leg
    = Leg_OilPhysicalLeg OilPhysicalLeg
    | Leg_GasPhysicalLeg GasPhysicalLeg
    | Leg_EnvironmentalPhysicalLeg EnvironmentalPhysicalLeg
    | Leg_ElectricityPhysicalLeg ElectricityPhysicalLeg
    | Leg_CoalPhysicalLeg CoalPhysicalLeg
    | Leg_NonPeriodicFixedPriceLeg NonPeriodicFixedPriceLeg
    | Leg_WeatherLeg WeatherLeg
    | Leg_FloatingPriceLeg FloatingPriceLeg
    | Leg_FixedPriceLeg FixedPriceLeg
    | Leg_AveragePriceLeg AveragePriceLeg
    | Leg_CommodityVarianceLeg CommodityVarianceLeg
    | Leg_CommodityReturnLeg CommodityReturnLeg
    | Leg_CommodityInterestLeg CommodityInterestLeg
    | Leg_MetalPhysicalLeg MetalPhysicalLeg
    | Leg_BullionPhysicalLeg BullionPhysicalLeg
    | Leg_FxSwapLeg FxSwapLeg
    | Leg_UnderlyerInterestLeg UnderlyerInterestLeg
    deriving (Eq, Ord, Show)

-- | Leg identity.
data LegId = LegId with
    legIdScheme : NonEmptyURI
    content : Token60
      deriving (Eq, Ord, Show)

-- | Version aware identification of a leg.
data LegIdentifier = LegIdentifier with
    legId : LegId
        -- ^ Identity of this leg.
    versionHistory_model : Optional LegIdentifier_VersionHistory_model
      deriving (Eq, Ord, Show)

-- | A record type used inside LegIdentifier
data LegIdentifier_VersionHistory_model = LegIdentifier_VersionHistory_model with
    version : Int
        -- ^ The version number
    effectiveDate : Optional IdentifiedDate
        -- ^ Optionally it is possible to specify a version
        --   effective date when a versionId is supplied.
      deriving (Eq, Ord, Show)

-- | A type defining a legal entity.
data LegalEntity = LegalEntity with
    id_ : Optional Text
    choice_ : LegalEntity_choice
      deriving (Eq, Ord, Show)

-- | References a credit entity defined elsewhere in the
--   document.
data LegalEntityReference = LegalEntityReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | A variant type used inside LegalEntity
data LegalEntity_choice
    = LegalEntity_choice_Items LegalEntity_items
    | LegalEntity_choice_EntityId [EntityId]
      -- ^ A legal entity identifier (e.g. RED entity code)..
    deriving (Eq, Ord, Show)

-- | A record type used inside LegalEntity
data LegalEntity_items = LegalEntity_items with
    entityName : EntityName
        -- ^ The name of the reference entity. A free format
        --   string. FpML does not define usage rules for this
        --   element.
    entityId : [EntityId]
        -- ^ A legal entity identifier (e.g. RED entity code).
      deriving (Eq, Ord, Show)

-- | Used for indicating the length unit in the Resource
--   type.
data LengthUnitEnum
    = LengthUnitEnum_Pages ()
    | LengthUnitEnum_TimeUnit ()
    deriving (Eq, Ord, Show)

-- | A type describing the liens associated with a loan
--   facility.
data Lien = Lien with
    lienScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data LimitApplicable = LimitApplicable with
    limitType : LimitType
        -- ^ Standard code to indicate which type of credit line
        --   is being referred to - i.e. IM, DV01, PV01, CS01,
        --   Notional, Clip Size, Notional, maximumOrderQuantity
    clipSize : Int
    choice_ : Optional LimitApplicable_choice
    amountRemaining : Optional Int
    currency : Optional Currency
    velocity : Optional Velocity
      deriving (Eq, Ord, Show)

-- | A variant type used inside LimitApplicable
data LimitApplicable_choice
    = LimitApplicable_choice_AmountUtilized Int
    | LimitApplicable_choice_Utilization CreditLimitUtilization
      -- ^ Credit limit utilization breakdown by executed trades
      --   and pending orders.
    deriving (Eq, Ord, Show)

data LimitId = LimitId with
    creditLimitIdScheme : Optional NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

-- | The type of credit approval request.
data LimitModelEnum
    = LimitModelEnum_Ping ()
    | LimitModelEnum_Plus1ToStop ()
    | LimitModelEnum_Plus1ToPing ()
    | LimitModelEnum_PushToPing ()
    | LimitModelEnum_PushToStop ()
    deriving (Eq, Ord, Show)

data LimitType = LimitType with
    creditLimitTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The data type used for link identifiers.
data LinkId = LinkId with
    id_ : Optional Text
    linkIdScheme : NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

-- | LoadType is a summary of the full description of the
--   settlement periods with respect to the region. Used
--   for describing Electricity delivery schedules.
data LoadTypeEnum
    = LoadTypeEnum_Base ()
      -- ^ Base
    | LoadTypeEnum_Peak ()
      -- ^ Peak
    | LoadTypeEnum_OffPeak ()
      -- ^ Off-Peak
    | LoadTypeEnum_BlockHours ()
      -- ^ Block Hours
    | LoadTypeEnum_Custom ()
      -- ^ Anything that does not fall under the predefined
      --   standard categories
    deriving (Eq, Ord, Show)

-- | A type describing a loan underlying asset.
data Loan = Loan with
    id_ : Optional Text
    instrumentId : [InstrumentId]
        -- ^ Identification of the underlying asset, using public
        --   and/or private identifiers.
    description : Optional String
        -- ^ Long name of the underlying asset.
    currency : Optional IdentifiedCurrency
        -- ^ Trading currency of the underlyer when transacted as
        --   a cash instrument.
    exchangeId : Optional ExchangeId
        -- ^ Identification of the exchange on which this asset is
        --   transacted for the purposes of calculating a
        --   contractural payoff. The term "Exchange" is assumed
        --   to have the meaning as defined in the ISDA 2002
        --   Equity Derivatives Definitions.
    clearanceSystem : Optional ClearanceSystem
        -- ^ Identification of the clearance system associated
        --   with the transaction exchange.
    definition : Optional ProductReference
        -- ^ An optional reference to a full FpML product that
        --   defines the simple product in greater detail. In case
        --   of inconsistency between the terms of the simple
        --   product and those of the detailed definition, the
        --   values in the simple product override those in the
        --   detailed definition.
    choice_ : [Loan_choice]
        -- ^ Specifies the borrower. There can be more than one
        --   borrower. It is meant to be used in the event that
        --   there is no Bloomberg Id or the Secured List isn't
        --   applicable.
    lien : Optional Lien
        -- ^ Specifies the seniority level of the lien.
    facilityType : Optional FacilityType
        -- ^ The type of loan facility (letter of credit,
        --   revolving, ...).
    maturity : Optional Date
        -- ^ The date when the principal amount of the loan
        --   becomes due and payable.
    creditAgreementDate : Optional Date
        -- ^ The credit agreement date is the closing date (the
        --   date where the agreement has been signed) for the
        --   loans in the credit agreement. Funding of the
        --   facilities occurs on (or sometimes a little after)
        --   the Credit Agreement date. This underlyer attribute
        --   is used to help identify which of the company's
        --   outstanding loans are being referenced by knowing to
        --   which credit agreement it belongs. ISDA Standards
        --   Terms Supplement term: Date of Original Credit
        --   Agreement.
    tranche : Optional UnderlyingAssetTranche
        -- ^ The loan tranche that is subject to the derivative
        --   transaction. It will typically be referenced as the
        --   Bloomberg tranche number. ISDA Standards Terms
        --   Supplement term: Bloomberg Tranche Number.
    seniority : Optional CreditSeniority
        -- ^ The seniority. E.g. senior, senior secured etc.
      deriving (Eq, Ord, Show)

-- | A list that defines how the interest accrued during
--   the settlement period is calculated and paid.
data LoanTradingAccrualSettlementEnum
    = LoanTradingAccrualSettlementEnum_Flat ()
      -- ^ Trades flat.
    | LoanTradingAccrualSettlementEnum_SettledWithAccrued ()
      -- ^ Settled with Accrued Interest: Interest accrued
      --   during the settlement period is paid at settlement.
    | LoanTradingAccrualSettlementEnum_SettledWithoutAccrued ()
      -- ^ Settled without Accrued Interest: Interest accrued
      --   during for the settlement period is not paid at
      --   settlement.
    deriving (Eq, Ord, Show)

-- | A list of accruing fee types associated with a
--   facility.
data LoanTradingAccruingFeeTypeEnum
    = LoanTradingAccruingFeeTypeEnum_Commitment ()
      -- ^ Calculated as a percentage of the unutilized portion
      --   of the facility.
    | LoanTradingAccruingFeeTypeEnum_Facility ()
      -- ^ Calculated as a percentage of the global commitment
      --   amount of a facility.
    | LoanTradingAccruingFeeTypeEnum_LetterOfCreditIssuance ()
      -- ^ An on-going (accrual) fee paid to the Issuing Bank
      --   for a Letter of Credit. This is separate from the
      --   basic Letter of Credit Fee paid to the lender group.
    | LoanTradingAccruingFeeTypeEnum_Ticking ()
      -- ^ Typically for term loans, a commitment fee that
      --   applies to the amount of a commitment that has not
      --   yet been drawn down.
    | LoanTradingAccruingFeeTypeEnum_Utilization ()
      -- ^ Calculated as a percentage of the utilized portion of
      --   the facility. This fee type is subject to banding
      --   rules – different portions of the utilization amount
      --   may be subject to different percentages.
    deriving (Eq, Ord, Show)

-- | A list that defines the loan trading association
--   responsible for defining the standardized legal
--   framework that governs the trade.
data LoanTradingAssocEnum
    = LoanTradingAssocEnum_LMA ()
      -- ^ Loan Market Association (UK).
    | LoanTradingAssocEnum_LSTA ()
      -- ^ The Loan Syndications and Trading Association (US).
    deriving (Eq, Ord, Show)

-- | A list describing the type of documentation used to
--   settle a secondary market syndicated loan trade.
data LoanTradingDocTypeEnum
    = LoanTradingDocTypeEnum_Distressed ()
      -- ^ Distressed loan trade documentation.
    | LoanTradingDocTypeEnum_Par ()
      -- ^ Par loan trade documentation.
    deriving (Eq, Ord, Show)

-- | A list describing forms of purchase.
data LoanTradingFormOfPurchaseEnum
    = LoanTradingFormOfPurchaseEnum_Assignment ()
    | LoanTradingFormOfPurchaseEnum_AssignmentOnly ()
    | LoanTradingFormOfPurchaseEnum_Other ()
    | LoanTradingFormOfPurchaseEnum_LMAFundedParticipation ()
    | LoanTradingFormOfPurchaseEnum_LMAFundedRiskParticipation ()
    | LoanTradingFormOfPurchaseEnum_LMARiskParticipation ()
    | LoanTradingFormOfPurchaseEnum_LMARiskToFundedParticipation ()
    | LoanTradingFormOfPurchaseEnum_LMATransferAgreement ()
    | LoanTradingFormOfPurchaseEnum_LMATransferCertificate ()
    | LoanTradingFormOfPurchaseEnum_Participation ()
    deriving (Eq, Ord, Show)

-- | A list of accruing fee types associated with a
--   facility.
data LoanTradingNonRecurringFeeTypeEnum
    = LoanTradingNonRecurringFeeTypeEnum_Amendment ()
      -- ^ Calculated as a percentage of the global commitment
      --   amount of a facility.
    | LoanTradingNonRecurringFeeTypeEnum_Consent ()
    | LoanTradingNonRecurringFeeTypeEnum_Facility ()
      -- ^ Calculated as a percentage of the unutilized portion
      --   of the facility.
    | LoanTradingNonRecurringFeeTypeEnum_FacilityExension ()
      -- ^ An on-going (accrual) fee paid to the Issuing Bank
      --   for a Letter of Credit. This is separate from the
      --   basic Letter of Credit Fee paid to the lender group.
    | LoanTradingNonRecurringFeeTypeEnum_Upfront ()
      -- ^ Calculated as a percentage of the utilized portion of
      --   the facility. This fee type is subject to banding
      --   rules – different portions of the utilization amount
      --   may be subject to different percentages.
    | LoanTradingNonRecurringFeeTypeEnum_Waiver ()
    deriving (Eq, Ord, Show)

-- | A list that defines the status of a settlement task.
data LoanTradingSettlementTaskStatusEnum
    = LoanTradingSettlementTaskStatusEnum_Active ()
      -- ^ Loan Market Association (UK).
    | LoanTradingSettlementTaskStatusEnum_Cleared ()
      -- ^ The Loan Syndications and Trading Association (US).
    | LoanTradingSettlementTaskStatusEnum_Cancelled ()
    deriving (Eq, Ord, Show)

-- | A list that specifies whether a trade was executed
--   during the syndication period or in the
--   post-syndication market.
data LoanTradingTypeEnum
    = LoanTradingTypeEnum_Primary ()
      -- ^ Trade is part of a syndication.
    | LoanTradingTypeEnum_Secondary ()
      -- ^ Trade was performed in the secondary
      --   (non-syndication) market.
    deriving (Eq, Ord, Show)

-- | A list that specifies type of voting rights process,
--   i.e. whether voting rights are passed along to buyer
--   or retained by seller.
data LoanTradingVotingRightsEnum
    = LoanTradingVotingRightsEnum_PassedOnToBuyer ()
      -- ^ Voting rights passed to the buyer
    | LoanTradingVotingRightsEnum_RetainedBySeller ()
      -- ^ Voting rights retained by the seller
    deriving (Eq, Ord, Show)

-- | A list of standard market rules for the treatment of
--   split of assignment fees between counterparties.
data LoanTransferFeePaidByEnum
    = LoanTransferFeePaidByEnum_BuyerSplitOneHalf ()
      -- ^ Buyer is responsible for one half of one allocation's
      --   assignment fee (regardless of the number of
      --   allocations).
    | LoanTransferFeePaidByEnum_OneFeePaidByBuyer ()
      -- ^ Buyer is responsible for one allocation's assignment
      --   fee (regardless of the number of allocations).
    | LoanTransferFeePaidByEnum_OneFeePaidBySeller ()
      -- ^ Seller is responsible for one allocation's assignment
      --   fee (regardless of the number of allocations).
    | LoanTransferFeePaidByEnum_PaidByBuyer ()
      -- ^ Fee is paid by buyer.
    | LoanTransferFeePaidByEnum_PaidBySeller ()
      -- ^ Fee is paid by seller.
    | LoanTransferFeePaidByEnum_SellerSplitOneHalf ()
      -- ^ Seller is responsible for one half of one
      --   allocation's assignment fee (regardless of the number
      --   of allocations).
    | LoanTransferFeePaidByEnum_SplitFull ()
      -- ^ Ticket owner is responsible for one allocation's
      --   assignment fee (regardless of the number of
      --   allocations).
    deriving (Eq, Ord, Show)

-- | A variant type used inside Loan
data Loan_choice
    = Loan_choice_Borrower LegalEntity
    | Loan_choice_BorrowerReference LegalEntityReference
    deriving (Eq, Ord, Show)

-- | A type to define the main publication source.
data MainPublication = MainPublication with
    mainPublicationScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type defining manual exercise, i.e. that the option
--   buyer counterparty must give notice to the option
--   seller of exercise.
data ManualExercise = ManualExercise with
    exerciseNotice : Optional ExerciseNotice
        -- ^ Definition of the party to whom notice of exercise
        --   should be given.
    fallbackExercise : Optional Bool
        -- ^ If fallback exercise is specified then the notional
        --   amount of the underlying swap, not previously
        --   exercised under the swaption, will be automatically
        --   exercised at the expiration time on the expiration
        --   date if at such time the buyer is in-the-money,
        --   provided that the difference between the settlement
        --   rate and the fixed rate under the relevant underlying
        --   swap is not less than one tenth of a percentage point
        --   (0.10% or 0.001). The term in-the-money is assumed to
        --   have the meaning defined in the 2000 ISDA
        --   Definitions, Section 17.4. In-the-money.
      deriving (Eq, Ord, Show)

-- | This indicator defines which type of assets (cash or
--   securities) is specified to apply as margin to the
--   repo transaction.
data MarginTypeEnum
    = MarginTypeEnum_Cash ()
      -- ^ When the margin type is Cash, the margin factor is
      --   applied to the cash value of the transaction.
    | MarginTypeEnum_Instrument ()
      -- ^ When the margin type is Instrument, the margin factor
      --   is applied to the instrument value for the
      --   transaction. In the “instrument” case, the haircut
      --   would be applied to the securities.
    deriving (Eq, Ord, Show)

-- | Defines the handling of an averaging date market
--   disruption for an equity derivative transaction.
data MarketDisruption = MarketDisruption with
    marketDisruptionScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A Market Disruption Event.
data MarketDisruptionEvent = MarketDisruptionEvent with
    commodityMarketDisruptionScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The specification of how market disruption events
--   will be represented.
data MarketDisruptionEventsEnum
    = MarketDisruptionEventsEnum_Applicable ()
      -- ^ Market Disruption Events are applicable.
    | MarketDisruptionEventsEnum_NotApplicable ()
      -- ^ Market Disruption Events are not applicable.
    | MarketDisruptionEventsEnum_AsSpecifiedInMasterAgreement ()
      -- ^ The Market Disruption Event(s) are determined by
      --   reference to the relevant Master Agreement.
    | MarketDisruptionEventsEnum_AsSpecifiedInConfirmation ()
      -- ^ The Market Disruption Event(s) are determined by
      --   reference to the relevant Confirmation.
    deriving (Eq, Ord, Show)

-- | An entity for defining the agreement executed between
--   the parties and intended to govern all OTC
--   derivatives transactions between those parties.
data MasterAgreement = MasterAgreement with
    masterAgreementId : [MasterAgreementId]
        -- ^ An identifier that has been created to identify the
        --   master agreement.
    masterAgreementType : MasterAgreementType
        -- ^ The agreement executed between the parties and
        --   intended to govern product-specific derivatives
        --   transactions between those parties.
    masterAgreementVersion : Optional MasterAgreementVersion
        -- ^ The version of the master agreement.
    masterAgreementDate : Optional Date
        -- ^ The date on which the master agreement was signed.
      deriving (Eq, Ord, Show)

-- | A master agreement identifier allocated by a party.
--   FpML does not define the domain values associated
--   with this element. Note that the domain values for
--   this element are not strictly an enumerated list.
data MasterAgreementId = MasterAgreementId with
    masterAgreementIdScheme : Optional NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

data MasterAgreementType = MasterAgreementType with
    masterAgreementTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data MasterAgreementVersion = MasterAgreementVersion with
    masterAgreementVersionScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | An entity for defining the master confirmation
--   agreement executed between the parties.
data MasterConfirmation = MasterConfirmation with
    masterConfirmationType : MasterConfirmationType
        -- ^ The type of master confirmation executed between the
        --   parties.
    masterConfirmationDate : Date
        -- ^ The date of the confirmation executed between the
        --   parties and intended to govern all relevant
        --   transactions between those parties.
    masterConfirmationAnnexDate : Optional Date
        -- ^ The date that an annex to the master confirmation was
        --   executed between the parties.
    masterConfirmationAnnexType : Optional MasterConfirmationAnnexType
        -- ^ The type of master confirmation annex executed
        --   between the parties.
      deriving (Eq, Ord, Show)

data MasterConfirmationAnnexType = MasterConfirmationAnnexType with
    masterConfirmationAnnexTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data MasterConfirmationType = MasterConfirmationType with
    masterConfirmationTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | An identifier used to identify matched cashflows.
data MatchId = MatchId with
    matchIdScheme : Optional NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

-- | A scheme identifying the types of metal product for a
--   physically settled metal trade.
data Material = Material with
    commodityMetalProductTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type defining a mathematical expression.
data Math = Math with
    any_ : Text
      deriving (Eq, Ord, Show)

data MatrixTerm = MatrixTerm with
    matrixTermScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data MatrixType = MatrixType with
    matrixTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A message used to notify another party that a trade
--   has matured. This can be used to report, for example,
--   that a swap has passed its final payment and can be
--   removed, or that an option has expired without being
--   executed.
data MaturityNotification = MaturityNotification with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    isCorrection : Bool
        -- ^ Indicates if this message corrects an earlier
        --   request.
    correlationAndSequence_model : Optional MaturityNotification_CorrelationAndSequence_model
    onBehalfOf_model : Optional MaturityNotification_OnBehalfOf_model
    choice_ : MaturityNotification_choice
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A record type used inside MaturityNotification
data MaturityNotification_CorrelationAndSequence_model = MaturityNotification_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside MaturityNotification
data MaturityNotification_OnBehalfOf_model = MaturityNotification_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A variant type used inside MaturityNotification
data MaturityNotification_choice
    = MaturityNotification_choice_OptionExpiry OptionExpiryBase
    | MaturityNotification_choice_TradeMaturity TradeMaturity
    deriving (Eq, Ord, Show)

-- | A type defining the basic structure of all FpML
--   messages which is refined by its derived types.
data Message
    = Message_CollateralAllocationAccepted CollateralAllocationAccepted
    | Message_EventRequestAcknowledgement EventRequestAcknowledgement
    | Message_ConsentRefused ConsentRefused
    | Message_ConsentGranted ConsentGranted
    | Message_ConfirmationStatus ConfirmationStatus
    | Message_ConfirmationDisputed ConfirmationDisputed
    | Message_ConfirmationAgreed ConfirmationAgreed
    | Message_AllocationRefused AllocationRefused
    | Message_AllocationApproved AllocationApproved
    | Message_EventStatusResponse EventStatusResponse
    | Message_Acknowledgement Acknowledgement
    | Message_NonCorrectableRequestMessage NonCorrectableRequestMessage
    | Message_TradeChangeAdviceRetracted TradeChangeAdviceRetracted
    | Message_RequestTradeReferenceInformationUpdateRetracted RequestTradeReferenceInformationUpdateRetracted
    | Message_RequestExecutionRetracted RequestExecutionRetracted
    | Message_RequestConsentRetracted RequestConsentRetracted
    | Message_RequestClearingRetracted RequestClearingRetracted
    | Message_RequestAllocationRetracted RequestAllocationRetracted
    | Message_ExecutionRetracted ExecutionRetracted
    | Message_ExecutionAdviceRetracted ExecutionAdviceRetracted
    | Message_ConfirmationRetracted ConfirmationRetracted
    | Message_VerificationStatusNotification VerificationStatusNotification
    | Message_RequestRetransmission RequestRetransmission
    | Message_RequestEventStatus RequestEventStatus
    | Message_CorrectableRequestMessage CorrectableRequestMessage
    | Message_RequestCollateralAllocation RequestCollateralAllocation
    | Message_TradeChangeAdvice TradeChangeAdvice
    | Message_RequestTradeReferenceInformationUpdate RequestTradeReferenceInformationUpdate
    | Message_RequestExecution RequestExecution
    | Message_RequestConsent RequestConsent
    | Message_RequestConfirmation RequestConfirmation
    | Message_RequestClearing RequestClearing
    | Message_RequestAllocation RequestAllocation
    | Message_MaturityNotification MaturityNotification
    | Message_ExecutionNotification ExecutionNotification
    | Message_ExecutionAdvice ExecutionAdvice
    | Message_ClearingStatus ClearingStatus
    | Message_ClearingRefused ClearingRefused
    | Message_ClearingConfirmed ClearingConfirmed
    | Message_ApprovalStatusNotification ApprovalStatusNotification
    | Message_ServiceNotification ServiceNotification
    | Message_Exception Exception
    deriving (Eq, Ord, Show)

-- | The data type used for identifying a message address.
data MessageAddress = MessageAddress with
    messageAddressScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type defining the content model for a generic
--   message header that is refined by its derived
--   classes.
data MessageHeader
    = MessageHeader_ResponseMessageHeader ResponseMessageHeader
    | MessageHeader_RequestMessageHeader RequestMessageHeader
    | MessageHeader_NotificationMessageHeader NotificationMessageHeader
    | MessageHeader_ExceptionMessageHeader ExceptionMessageHeader
    deriving (Eq, Ord, Show)

-- | The data type use for message identifiers.
data MessageId = MessageId with
    messageIdScheme : NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

-- | A type defining the characteristics of the metal
--   product being traded in a physically settled metal
--   transaction.
data Metal = Metal with
    material : Material
        -- ^ The types of metal product for a physically settled
        --   metal trade.
    shape : [CommodityMetalShape]
        -- ^ The physical shape(s) which can be delivered in
        --   Seller's option.
    brand : [CommodityMetalBrand]
        -- ^ The brand(s) of material which can be delivered in
        --   Seller's option.
    grade : [CommodityMetalGrade]
        -- ^ The grade(s) of material which can be delivered in
        --   seller's option.
      deriving (Eq, Ord, Show)

-- | The physical delivery conditions for the transaction.
data MetalDelivery = MetalDelivery with
    deliveryLocation : CommodityDeliveryPoint
        -- ^ The Delivery Point for a physically settled
        --   non-precious metal transaction.
    risk : Optional CommodityDeliveryRisk
        -- ^ "Risk of loss" may also be used, equivalently, on
        --   confirmation documents.
    totalQuantityTolerance : Decimal
        -- ^ The +/- percent tolerance in seller's option which
        --   applies to the total quantity delivered over all
        --   shipment periods.
    periodQuantityTolerance : Decimal
        -- ^ The +/- percentage quantity tolerance in seller's
        --   option which applied to each shipment period.
    title : MetalTitleEnum
        -- ^ Describes how and when title to the commodity
        --   transfers.
      deriving (Eq, Ord, Show)

-- | Physically settled leg of a physically settled Metal
--   transaction.
data MetalPhysicalLeg = MetalPhysicalLeg with
    id_ : Optional Text
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    metal : Metal
        -- ^ The specification of the Metal Product to be
        --   delivered.
    deliveryPeriods : CommodityDeliveryPeriods
        -- ^ The period during which delivery/deliveries of Metal
        --   may be scheduled.
    deliveryConditions : MetalDelivery
        -- ^ The physical delivery arrangements and requirements
        --   for a physically settled non-precious metal
        --   transaction.
    choice_ : MetalPhysicalLeg_choice
    totalPhysicalQuantity : Optional UnitQuantity
        -- ^ The Total Quantity of the commodity to be delivered.
    conversionFactor : Optional Decimal
        -- ^ If the Notional Quantity is specified in a unit that
        --   does not match the unit in which the Commodity
        --   Reference Price is quoted, the scaling or conversion
        --   factor used to convert the Commodity Reference Price
        --   unit into the Notional Quantity unit should be stated
        --   here. If there is no conversion, this element is not
        --   intended to be used.
      deriving (Eq, Ord, Show)

-- | A variant type used inside MetalPhysicalLeg
data MetalPhysicalLeg_choice
    = MetalPhysicalLeg_choice_PhysicalQuantity CommodityNotionalQuantity
      -- ^ The Quantity per Delivery Period.
    | MetalPhysicalLeg_choice_PhysicalQuantitySchedule CommodityPhysicalQuantitySchedule
      -- ^ Allows the documentation of a shaped quantity trade
      --   where the quantity changes over the life of the
      --   transaction.
    deriving (Eq, Ord, Show)

-- | Describes how and when title to the commodity
--   transfers.
data MetalTitleEnum
    = MetalTitleEnum_TransfersWithRiskOfLoss ()
      -- ^ Transfers with Risk of Loss.
    | MetalTitleEnum_DoesNotTransferWithRiskOfLoss ()
      -- ^ Does Not Transfer with Risk of Loss.
    deriving (Eq, Ord, Show)

-- | Defines how adjustments will be made to the contract
--   should one or more of the extraordinary events occur.
data MethodOfAdjustmentEnum
    = MethodOfAdjustmentEnum_CalculationAgent ()
      -- ^ The Calculation Agent has the right to adjust the
      --   terms of the trade following a corporate action.
    | MethodOfAdjustmentEnum_OptionsExchange ()
      -- ^ The trade will be adjusted in accordance with any
      --   adjustment made by the exchange on which options on
      --   the underlying are listed.
    deriving (Eq, Ord, Show)

-- | The type that indicates the type of media used to
--   store the content. MimeType is used to determine the
--   software product(s) that can read the content. MIME
--   types are described in RFC 2046.
data MimeType = MimeType with
    mimeTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type defining a currency amount.
data Money = Money with
    id_ : Optional Text
    currency : Currency
        -- ^ The currency in which an amount is denominated.
    amount : Decimal
        -- ^ The monetary quantity in currency units.
      deriving (Eq, Ord, Show)

-- | Abstract base class for all money types.
data MoneyBase
    = MoneyBase_PositiveMoney PositiveMoney
    | MoneyBase_MoneyRef MoneyRef
    | MoneyBase_NonNegativeMoney NonNegativeMoney
    | MoneyBase_CommodityNotionalAmount CommodityNotionalAmount
    | MoneyBase_FxOptionPayout FxOptionPayout
    | MoneyBase_NotionalAmount NotionalAmount
    | MoneyBase_FutureValueAmount FutureValueAmount
    | MoneyBase_Money Money
    | MoneyBase_CommoditySpread CommoditySpread
    deriving (Eq, Ord, Show)

-- | A type defining a currency amount with a reference.
data MoneyRef = MoneyRef with
    id_ : Optional Text
    currency : Currency
        -- ^ The currency in which an amount is denominated.
    amount : PositiveDecimal
        -- ^ The positive monetary quantity in currency units.
    notionalReference : NotionalReference
        -- ^ A pointer style reference to the associated notional
        --   schedule defined elsewhere in the document.
      deriving (Eq, Ord, Show)

-- | A type describing a mortgage asset.
data Mortgage = Mortgage with
    id_ : Optional Text
    instrumentId : [InstrumentId]
        -- ^ Identification of the underlying asset, using public
        --   and/or private identifiers.
    description : Optional String
        -- ^ Long name of the underlying asset.
    currency : Optional IdentifiedCurrency
        -- ^ Trading currency of the underlyer when transacted as
        --   a cash instrument.
    exchangeId : Optional ExchangeId
        -- ^ Identification of the exchange on which this asset is
        --   transacted for the purposes of calculating a
        --   contractural payoff. The term "Exchange" is assumed
        --   to have the meaning as defined in the ISDA 2002
        --   Equity Derivatives Definitions.
    clearanceSystem : Optional ClearanceSystem
        -- ^ Identification of the clearance system associated
        --   with the transaction exchange.
    definition : Optional ProductReference
        -- ^ An optional reference to a full FpML product that
        --   defines the simple product in greater detail. In case
        --   of inconsistency between the terms of the simple
        --   product and those of the detailed definition, the
        --   values in the simple product override those in the
        --   detailed definition.
    choice_1 : Optional Mortgage_choice
        -- ^ Applicable to the case of default swaps on MBS terms.
        --   For specifying the insurer name, when applicable
        --   (when the element is not present, it signifies that
        --   the insurer is Not Applicable)
    choice_2 : Optional Mortgage_choice_2
        -- ^ Specifies the issuer name of a fixed income security
        --   or convertible bond. This name can either be
        --   explicitly stated, or specified as an href into
        --   another element of the document, such as the obligor.
    seniority : Optional CreditSeniority
        -- ^ The repayment precedence of a debt instrument.
    couponType : Optional CouponType
        -- ^ Specifies if the bond has a variable coupon,
        --   step-up/down coupon or a zero-coupon.
    couponRate : Optional Decimal
        -- ^ Specifies the coupon rate (expressed in percentage)
        --   of a fixed income security or convertible bond.
    maturity : Optional Date
        -- ^ The date when the principal amount of a security
        --   becomes due and payable.
    paymentFrequency : Optional Period
        -- ^ Specifies the frequency at which the bond pays, e.g.
        --   6M.
    dayCountFraction : Optional DayCountFraction
        -- ^ The day count basis for the bond.
    originalPrincipalAmount : Optional Decimal
        -- ^ The initial issued amount of the mortgage obligation.
    pool : Optional AssetPool
        -- ^ The morgage pool that is underneath the mortgage
        --   obligation.
    sector : Optional MortgageSector
        -- ^ The sector classification of the mortgage obligation.
    tranche : Optional Token
        -- ^ The mortgage obligation tranche that is subject to
        --   the derivative transaction.
      deriving (Eq, Ord, Show)

-- | A type describing the typology of mortgage
--   obligations.
data MortgageSector = MortgageSector with
    mortgageSectorScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A variant type used inside Mortgage
data Mortgage_choice
    = Mortgage_choice_Insurer LegalEntity
    | Mortgage_choice_InsurerReference LegalEntityReference
    deriving (Eq, Ord, Show)

-- | A variant type used inside Mortgage
data Mortgage_choice_2
    = Mortgage_choice_2_IssuerName String
    | Mortgage_choice_2_IssuerPartyReference PartyReference
    deriving (Eq, Ord, Show)

-- | A type defining multiple exercises. As defining in
--   the 2000 ISDA Definitions, Section 12.4. Multiple
--   Exercise, the buyer of the option has the right to
--   exercise all or less than all the unexercised
--   notional amount of the underlying swap on one or more
--   days in the exercise period, but on any such day may
--   not exercise less than the minimum notional amount or
--   more than the maximum notional amount, and if an
--   integral multiple amount is specified, the notional
--   exercised must be equal to or, be an integral
--   multiple of, the integral multiple amount.
data MultipleExercise = MultipleExercise with
    notionalReference : [NotionalReference]
        -- ^ A pointer style reference to the associated notional
        --   schedule defined elsewhere in the document. This
        --   element has been made optional as part of its
        --   integration in the OptionBaseExtended, because not
        --   required for the options on securities.
    integralMultipleAmount : Optional Decimal
        -- ^ A notional amount which restricts the amount of
        --   notional that can be exercised when partial exercise
        --   or multiple exercise is applicable. The integral
        --   multiple amount defines a lower limit of notional
        --   that can be exercised and also defines a unit
        --   multiple of notional that can be exercised, i.e. only
        --   integer multiples of this amount can be exercised.
    choice_1 : MultipleExercise_choice
    choice_2 : Optional MultipleExercise_choice_2
      deriving (Eq, Ord, Show)

-- | A variant type used inside MultipleExercise
data MultipleExercise_choice
    = MultipleExercise_choice_MinimumNotionalAmount Decimal
      -- ^ The minimum notional amount that can be exercised on
      --   a given exercise date. See multipleExercise.
    | MultipleExercise_choice_MinimumNumberOfOptions Int
      -- ^ The minimum number of options that can be exercised
      --   on a given exercise date.
    deriving (Eq, Ord, Show)

-- | A variant type used inside MultipleExercise
data MultipleExercise_choice_2
    = MultipleExercise_choice_2_MaximumNotionalAmount Decimal
      -- ^ The maximum notional amount that can be exercised on
      --   a given exercise date.
    | MultipleExercise_choice_2_MaximumNumberOfOptions NonNegativeDecimal
      -- ^ The maximum number of options that can be exercised
      --   on a given exercise date. If the number is not
      --   specified, it means that the maximum number of
      --   options corresponds to the remaining unexercised
      --   options.
    deriving (Eq, Ord, Show)

data MutualFund = MutualFund with
    id_ : Optional Text
    instrumentId : [InstrumentId]
        -- ^ Identification of the underlying asset, using public
        --   and/or private identifiers.
    description : Optional String
        -- ^ Long name of the underlying asset.
    currency : Optional IdentifiedCurrency
        -- ^ Trading currency of the underlyer when transacted as
        --   a cash instrument.
    exchangeId : Optional ExchangeId
        -- ^ Identification of the exchange on which this asset is
        --   transacted for the purposes of calculating a
        --   contractural payoff. The term "Exchange" is assumed
        --   to have the meaning as defined in the ISDA 2002
        --   Equity Derivatives Definitions.
    clearanceSystem : Optional ClearanceSystem
        -- ^ Identification of the clearance system associated
        --   with the transaction exchange.
    definition : Optional ProductReference
        -- ^ An optional reference to a full FpML product that
        --   defines the simple product in greater detail. In case
        --   of inconsistency between the terms of the simple
        --   product and those of the detailed definition, the
        --   values in the simple product override those in the
        --   detailed definition.
    openEndedFund : Optional Bool
        -- ^ Boolean indicator to specify whether the mutual fund
        --   is an open-ended mutual fund.
    fundManager : Optional String
        -- ^ Specifies the fund manager that is in charge of the
        --   fund.
      deriving (Eq, Ord, Show)

-- | Defines the consequences of nationalisation,
--   insolvency and delisting events relating to the
--   underlying.
data NationalisationOrInsolvencyOrDelistingEventEnum
    = NationalisationOrInsolvencyOrDelistingEventEnum_NegotiatedCloseout ()
      -- ^ The parties may, but are not obliged, to terminate
      --   the transaction on mutually acceptable terms and if
      --   the terms are not agreed then the transaction
      --   continues.
    | NationalisationOrInsolvencyOrDelistingEventEnum_CancellationAndPayment ()
      -- ^ The trade is terminated.
    deriving (Eq, Ord, Show)

-- | The method of calculating payment obligations when a
--   floating rate is negative (either due to a quoted
--   negative floating rate or by operation of a spread
--   that is subtracted from the floating rate).
data NegativeInterestRateTreatmentEnum
    = NegativeInterestRateTreatmentEnum_NegativeInterestRateMethod ()
      -- ^ Negative Interest Rate Method. Per 2000 ISDA
      --   Definitions, Section 6.4 Negative Interest Rates,
      --   paragraphs (b) and (c).
    | NegativeInterestRateTreatmentEnum_ZeroInterestRateMethod ()
      -- ^ Zero Interest Rate Method. Per 2000 ISDA Definitions,
      --   Section 6.4. Negative Interest Rates, paragraphs (d)
      --   and (e).
    deriving (Eq, Ord, Show)

-- | A structure including a net and/or a gross amount and
--   possibly fees and commissions.
data NetAndGross
    = NetAndGross_Net Decimal
      -- ^ Value excluding fees and commissions.
    | NetAndGross_Items NetAndGross_items
    deriving (Eq, Ord, Show)

-- | A record type used inside NetAndGross
data NetAndGross_items = NetAndGross_items with
    gross : Decimal
        -- ^ Value including fees and commissions.
    net : Optional Decimal
        -- ^ Value excluding fees and commissions.
      deriving (Eq, Ord, Show)

data NoTouchLowerBarrierObservation
    = NoTouchLowerBarrierObservation_Items1 NoTouchLowerBarrierObservation_items
    | NoTouchLowerBarrierObservation_Items2 NoTouchLowerBarrierObservation_items_2
    deriving (Eq, Ord, Show)

-- | A record type used inside
--   NoTouchLowerBarrierObservation
data NoTouchLowerBarrierObservation_items = NoTouchLowerBarrierObservation_items with
    triggerRate : Decimal
        -- ^ The rate value (level) which was attained/breached,
        --   in order to trigger the barrier event.
    quotedCurrencyPair : QuotedCurrencyPair
        -- ^ Defines the currency pair and quote basis for an FX
        --   rate.
    minimumObservedRate : Optional ObservedRate
        -- ^ The minimum value observed during the condition
        --   period.
      deriving (Eq, Ord, Show)

-- | A record type used inside
--   NoTouchLowerBarrierObservation
data NoTouchLowerBarrierObservation_items_2 = NoTouchLowerBarrierObservation_items_2 with
    triggerPrice : PositiveMoney
        -- ^ The price value (level) which was attained/breached,
        --   in order to trigger the barrier event.
    minimumObservedPrice : Optional ObservedPrice
        -- ^ The minimum value observed during the condition
        --   period
      deriving (Eq, Ord, Show)

data NoTouchRateObservation = NoTouchRateObservation with
    observationStartDate : Date
    observationEndDate : Date
    choice_1 : NoTouchRateObservation_choice
    choice_2 : NoTouchRateObservation_choice_3
      deriving (Eq, Ord, Show)

-- | A variant type used inside NoTouchRateObservation
data NoTouchRateObservation_choice
    = NoTouchRateObservation_choice_Items NoTouchRateObservation_items
    | NoTouchRateObservation_choice_UpperBarrier NoTouchUpperBarrierObservation
    deriving (Eq, Ord, Show)

-- | A variant type used inside NoTouchRateObservation
data NoTouchRateObservation_choice_2
    = NoTouchRateObservation_choice_2_SettlementType SettlementTypeEnum
    | NoTouchRateObservation_choice_2_CashSettlement SimplePayment
    | NoTouchRateObservation_choice_2_PhysicalSettlement PhysicalSettlement
    deriving (Eq, Ord, Show)

-- | A variant type used inside NoTouchRateObservation
data NoTouchRateObservation_choice_3
    = NoTouchRateObservation_choice_3_Items NoTouchRateObservation_items_2
    | NoTouchRateObservation_choice_3_IsExercisable Bool
      -- ^ If the touch or no touch event hasn't generated an
      --   exercise, then we specify whether the option is
      --   exercisable or not.
    deriving (Eq, Ord, Show)

-- | A record type used inside NoTouchRateObservation
data NoTouchRateObservation_items = NoTouchRateObservation_items with
    lowerBarrier : NoTouchLowerBarrierObservation
    upperBarrier : Optional NoTouchUpperBarrierObservation
      deriving (Eq, Ord, Show)

-- | A record type used inside NoTouchRateObservation
data NoTouchRateObservation_items_2 = NoTouchRateObservation_items_2 with
    exerciseSide : Optional ExerciseSideEnum
    choice_ : NoTouchRateObservation_choice_2
    payment : Optional NonNegativePayment
    clearingInstructions : Optional ClearingInstructions
      deriving (Eq, Ord, Show)

data NoTouchUpperBarrierObservation
    = NoTouchUpperBarrierObservation_Items1 NoTouchUpperBarrierObservation_items
    | NoTouchUpperBarrierObservation_Items2 NoTouchUpperBarrierObservation_items_2
    deriving (Eq, Ord, Show)

-- | A record type used inside
--   NoTouchUpperBarrierObservation
data NoTouchUpperBarrierObservation_items = NoTouchUpperBarrierObservation_items with
    triggerRate : Decimal
        -- ^ The rate value (level) which was attained/breached,
        --   in order to trigger the barrier event.
    quotedCurrencyPair : QuotedCurrencyPair
        -- ^ Defines the currency pair and quote basis for an FX
        --   rate.
    maximumObservedRate : Optional ObservedRate
        -- ^ The maximum value observed during the condition
        --   period
      deriving (Eq, Ord, Show)

-- | A record type used inside
--   NoTouchUpperBarrierObservation
data NoTouchUpperBarrierObservation_items_2 = NoTouchUpperBarrierObservation_items_2 with
    triggerPrice : PositiveMoney
        -- ^ The price value (level) which was attained/breached,
        --   in order to trigger the barrier event.
    maximumObservedPrice : Optional ObservedPrice
        -- ^ The maximum value observed during the condition
        --   period
      deriving (Eq, Ord, Show)

-- | Defines treatment of non-cash dividends.
data NonCashDividendTreatmentEnum
    = NonCashDividendTreatmentEnum_PotentialAdjustmentEvent ()
      -- ^ The treatment of any non-cash dividend shall be
      --   determined in accordance with the Potential
      --   Adjustment Event provisions.
    | NonCashDividendTreatmentEnum_CashEquivalent ()
      -- ^ Any non-cash dividend shall be treated as a Declared
      --   Cash Equivalent Dividend.
    deriving (Eq, Ord, Show)

-- | A type defining the content model for a request
--   message that cannot be subsequently corrected or
--   retracted.
data NonCorrectableRequestMessage = NonCorrectableRequestMessage with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    correlationAndSequence_model : Optional NonCorrectableRequestMessage_CorrelationAndSequence_model
    onBehalfOf_model : Optional NonCorrectableRequestMessage_OnBehalfOf_model
      deriving (Eq, Ord, Show)

-- | A record type used inside
--   NonCorrectableRequestMessage
data NonCorrectableRequestMessage_CorrelationAndSequence_model = NonCorrectableRequestMessage_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside
--   NonCorrectableRequestMessage
data NonCorrectableRequestMessage_OnBehalfOf_model = NonCorrectableRequestMessage_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | Describes a currency which may be delivered instead
data NonDeliverableSubstitute = NonDeliverableSubstitute with
    currency : Currency
        -- ^ The code for the currency which can be delivered if
        --   settlement in the original non-deliverable currency
        --   is not possible.
      deriving (Eq, Ord, Show)

-- | The base class for all types which define coding
--   schemes that must be populated.
type NonEmptyLongScheme = NormalizedString

-- | The base class for all types which define coding
--   schemes that must be populated.
type NonEmptyScheme = NormalizedString

-- | A URI that cannot be empty.
type NonEmptyURI = Text

-- | A type defining a currency amount or a currency
--   amount schedule.
data NonNegativeAmountSchedule = NonNegativeAmountSchedule with
    id_ : Optional Text
    initialValue : NonNegativeDecimal
        -- ^ The non-negative initial rate or amount, as the case
        --   may be. An initial rate of 5% would be represented as
        --   0.05.
    step : [NonNegativeStep]
        -- ^ The schedule of step date and non-negative value
        --   pairs. On each step date the associated step value
        --   becomes effective. A list of steps may be ordered in
        --   the document by ascending step date. An FpML document
        --   containing an unordered list of steps is still
        --   regarded as a conformant document.
    currency : Currency
        -- ^ The currency in which an amount is denominated.
      deriving (Eq, Ord, Show)

-- | A type defining a number specified as non negative
--   decimal greater than 0 inclusive.
type NonNegativeDecimal = Decimal

-- | A type defining a non negative money amount.
data NonNegativeMoney = NonNegativeMoney with
    id_ : Optional Text
    currency : Currency
        -- ^ The currency in which an amount is denominated.
    amount : NonNegativeDecimal
        -- ^ The non negative monetary quantity in currency units.
      deriving (Eq, Ord, Show)

-- | A complex type to specify non negative payments.
data NonNegativePayment = NonNegativePayment with
    id_ : Optional Text
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    paymentDate : AdjustableOrRelativeDate
        -- ^ The payment date, which can be expressed as either an
        --   adjustable or relative date.
    paymentAmount : NonNegativeMoney
        -- ^ Non negative payment amount.
      deriving (Eq, Ord, Show)

-- | A type defining a schedule of non-negative rates or
--   amounts in terms of an initial value and then a
--   series of step date and value pairs. On each step
--   date the rate or amount changes to the new step
--   value. The series of step date and value pairs are
--   optional. If not specified, this implies that the
--   initial value remains unchanged over time.
data NonNegativeSchedule = NonNegativeSchedule with
    id_ : Optional Text
    initialValue : NonNegativeDecimal
        -- ^ The non-negative initial rate or amount, as the case
        --   may be. An initial rate of 5% would be represented as
        --   0.05.
    step : [NonNegativeStep]
        -- ^ The schedule of step date and non-negative value
        --   pairs. On each step date the associated step value
        --   becomes effective. A list of steps may be ordered in
        --   the document by ascending step date. An FpML document
        --   containing an unordered list of steps is still
        --   regarded as a conformant document.
      deriving (Eq, Ord, Show)

-- | A type defining a step date and non-negative step
--   value pair. This step definitions are used to define
--   varying rate or amount schedules, e.g. a notional
--   amortization or a step-up coupon schedule.
data NonNegativeStep = NonNegativeStep with
    id_ : Optional Text
    stepDate : Date
        -- ^ The date on which the associated stepValue becomes
        --   effective. This day may be subject to adjustment in
        --   accordance with a business day convention.
    stepValue : NonNegativeDecimal
        -- ^ The non-negative rate or amount which becomes
        --   effective on the associated stepDate. A rate of 5%
        --   would be represented as 0.05.
      deriving (Eq, Ord, Show)

-- | The details of a fixed payment. Can be used for a
--   forward transaction or as the base for a more complex
--   fixed leg component such as the fixed leg of a swap.
data NonPeriodicFixedPriceLeg = NonPeriodicFixedPriceLeg with
    id_ : Optional Text
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    fixedPrice : FixedPrice
        -- ^ Fixed price on which fixed payments are based.
    totalPrice : Optional NonNegativeMoney
        -- ^ The total amount of the fixed payment for all units
        --   of the underlying commodity.
    quantityReference : QuantityReference
        -- ^ A pointer style reference to a quantity defined on
        --   another leg.
    choice_ : NonPeriodicFixedPriceLeg_choice
      deriving (Eq, Ord, Show)

-- | A variant type used inside NonPeriodicFixedPriceLeg
data NonPeriodicFixedPriceLeg_choice
    = NonPeriodicFixedPriceLeg_choice_RelativePaymentDates CommodityRelativePaymentDates
      -- ^ The Payment Dates of the trade relative to the
      --   Calculation Periods.
    | NonPeriodicFixedPriceLeg_choice_PaymentDates AdjustableDatesOrRelativeDateOffset
      -- ^ Dates on which payments will be made.
    | NonPeriodicFixedPriceLeg_choice_MasterAgreementPaymentDates Bool
      -- ^ If present and true indicates that the Payment
      --   Date(s) are specified in the relevant master
      --   agreement.
    deriving (Eq, Ord, Show)

-- | A normalized string
type NormalizedString = Text

-- | A type defining the basic content for a message sent
--   to inform another system that some 'business event'
--   has occured. Notifications are not expected to be
--   replied to.
data NotificationMessage
    = NotificationMessage_ClearingStatus ClearingStatus
    | NotificationMessage_ClearingRefused ClearingRefused
    | NotificationMessage_ClearingConfirmed ClearingConfirmed
    | NotificationMessage_ApprovalStatusNotification ApprovalStatusNotification
    | NotificationMessage_ServiceNotification ServiceNotification
    deriving (Eq, Ord, Show)

-- | A type that refines the generic message header to
--   match the requirements of a NotificationMessage.
data NotificationMessageHeader = NotificationMessageHeader with
    messageId : MessageId
        -- ^ A unique identifier (within its coding scheme)
        --   assigned to the message by its creating party.
    inReplyTo : Optional MessageId
        -- ^ A copy of the unique message identifier (within it
        --   own coding scheme) to which this message is
        --   responding.
    sentBy : MessageAddress
        -- ^ The unique identifier (within its coding scheme) for
        --   the originator of a message instance.
    sendTo : [MessageAddress]
        -- ^ A unique identifier (within its coding scheme)
        --   indicating an intended recipent of a message.
    copyTo : [MessageAddress]
        -- ^ A unique identifier (within the specified coding
        --   scheme) giving the details of some party to whom a
        --   copy of this message will be sent for reference.
    creationTimestamp : Time
        -- ^ The date and time (on the source system) when this
        --   message instance was created.
    expiryTimestamp : Optional Time
        -- ^ The date and time (on the source system) when this
        --   message instance will be considered expired.
    implementationSpecification : Optional ImplementationSpecification
        -- ^ The version(s) of specifications that the sender
        --   asserts the message was developed for.
    partyMessageInformation : [PartyMessageInformation]
        -- ^ Additional message information that may be provided
        --   by each involved party.
      deriving (Eq, Ord, Show)

data NotifyingParty = NotifyingParty with
    buyerPartyReference : PartyReference
    sellerPartyReference : Optional PartyReference
      deriving (Eq, Ord, Show)

-- | The conditions that govern the adjustment to the
--   number of units of the equity swap.
data NotionalAdjustmentEnum
    = NotionalAdjustmentEnum_Execution ()
      -- ^ The adjustments to the number of units are governed
      --   by an execution clause.
    | NotionalAdjustmentEnum_PortfolioRebalancing ()
      -- ^ The adjustments to the number of units are governed
      --   by a portfolio rebalancing clause.
    | NotionalAdjustmentEnum_Standard ()
      -- ^ The adjustments to the number of units are not
      --   governed by any specific clause.
    deriving (Eq, Ord, Show)

-- | A complex type to specify the notional amount.
data NotionalAmount = NotionalAmount with
    id_ : Optional Text
    currency : Currency
        -- ^ The currency in which an amount is denominated.
    amount : NonNegativeDecimal
        -- ^ The non negative monetary quantity in currency units.
      deriving (Eq, Ord, Show)

-- | A reference to the notional amount.
data NotionalAmountReference = NotionalAmountReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | Indicator as to the type of transaction in accordance
--   with Articles 20(3)(a) and 21(5)(a) of Regulation
--   (EU) 600/2014.
data NotionalChangeEnum
    = NotionalChangeEnum_Increase ()
      -- ^ Transaction results in a Increase of Notional value
    | NotionalChangeEnum_Decrease ()
      -- ^ Transaction results in a Decrease of Notional value
    deriving (Eq, Ord, Show)

-- | A reference to the notional amount.
data NotionalReference = NotionalReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | How a notional is to be reported for this reporting
--   regime. E.g. for ESMA EMIR, it would be Nominal or
--   Monetary Amount
data NotionalReportingType = NotionalReportingType with
    notionalTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A reference to the number of options.
data NumberOfOptionsReference = NumberOfOptionsReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | A reference to the number of units.
data NumberOfUnitsReference = NumberOfUnitsReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | Used in both the obligations and deliverable
--   obligations of the credit default swap to represent a
--   class or type of securities which apply.
data ObligationCategoryEnum
    = ObligationCategoryEnum_Payment ()
      -- ^ ISDA term "Payment".
    | ObligationCategoryEnum_BorrowedMoney ()
      -- ^ ISDA term "Borrowed Money".
    | ObligationCategoryEnum_ReferenceObligationsOnly ()
      -- ^ ISDA term "Reference Obligations Only".
    | ObligationCategoryEnum_Bond ()
      -- ^ ISDA term "Bond".
    | ObligationCategoryEnum_Loan ()
      -- ^ ISDA term "Loan".
    | ObligationCategoryEnum_BondOrLoan ()
      -- ^ ISDA term "Bond or Loan".
    deriving (Eq, Ord, Show)

-- | A type defining the frequency at which calculation
--   period end dates occur within the regular part of the
--   calculation period schedule and thier roll date
--   convention. In case the calculation frequency is of
--   value T (term), the period is defined by the
--   swap\swapStream\calculationPerioDates\effectiveDate
--   and the
--   swap\swapStream\calculationPerioDates\terminationDate.
data ObservationFrequency = ObservationFrequency with
    id_ : Optional Text
    periodMultiplier : Int
        -- ^ A time period multiplier, e.g. 1, 2 or 3 etc. A
        --   negative value can be used when specifying an offset
        --   relative to another date, e.g. -2 days.
    period : PeriodEnum
        -- ^ A time period, e.g. a day, week, month or year of the
        --   stream. If the periodMultiplier value is 0 (zero)
        --   then period must contain the value D (day).
    periodConvention : Optional RollConventionEnum
        -- ^ Used in conjunction with a frequency and the regular
        --   period start date of an observation period,
        --   determines each observation period end date within
        --   the regular part of a observation period schedule.
      deriving (Eq, Ord, Show)

data ObservedPrice = ObservedPrice with
    price : NonNegativeMoney
        -- ^ The observed rate value which triggered the barrier
        --   event.
    date_ : Optional Date
        -- ^ The date when the rate was observed.
    time_ : Optional Text
        -- ^ The time when the rate ws observed.
    informationSource : Optional InformationSource
        -- ^ The source of the observation.
      deriving (Eq, Ord, Show)

data ObservedRate = ObservedRate with
    rate : Decimal
        -- ^ The observed rate value which triggered the barrier
        --   event.
    date_ : Optional Date
        -- ^ The date when the rate was observed.
    time_ : Optional Text
        -- ^ The time when the rate ws observed.
    informationSource : Optional InformationSource
        -- ^ The source of the observation.
      deriving (Eq, Ord, Show)

-- | A type defining an offset used in calculating a new
--   date relative to a reference date. E.g. calendar
--   days, business days, Commodity Business days, etc..
data Offset = Offset with
    id_ : Optional Text
    periodMultiplier : Int
        -- ^ A time period multiplier, e.g. 1, 2 or 3 etc. A
        --   negative value can be used when specifying an offset
        --   relative to another date, e.g. -2 days.
    period : PeriodEnum
        -- ^ A time period, e.g. a day, week, month or year of the
        --   stream. If the periodMultiplier value is 0 (zero)
        --   then period must contain the value D (day).
    dayType : Optional DayTypeEnum
        -- ^ In the case of an offset specified as a number of
        --   days, this element defines whether consideration is
        --   given as to whether a day is a good business day or
        --   not. If a day type of business days is specified then
        --   non-business days are ignored when calculating the
        --   offset. The financial business centers to use for
        --   determination of business days are implied by the
        --   context in which this element is used. This element
        --   must only be included when the offset is specified as
        --   a number of days. If the offset is zero days then the
        --   dayType element should not be included.
      deriving (Eq, Ord, Show)

-- | Allows the specification of a time that may be on a
--   day prior or subsequent to the day in question. This
--   type is intended for use with a day of the week (i.e.
--   where no actual date is specified) as part of, for
--   example, a period that runs from 23:00-07:00 on a
--   series of days and where holidays on the actual days
--   would affect the entire time period.
data OffsetPrevailingTime = OffsetPrevailingTime with
    time_ : PrevailingTime
    offset : Optional Offset
        -- ^ Indicates whether time applies to the actual day
        --   specified (in which case this element should be
        --   omitted) the day prior to that day (in which case
        --   periodMultiplier should be -1 and period should be
        --   Day) or the day subsequent to that day (in which case
        --   periodMultiplier should be 1 and period should be
        --   Day).
      deriving (Eq, Ord, Show)

-- | The physical delivery conditions for an oil product.
data OilDelivery = OilDelivery with
    choice_1 : OilDelivery_choice
    importerOfRecord : Optional PartyReference
        -- ^ Specifies which party is the Importer of Record for
        --   the purposes of paying customs duties and applicable
        --   taxes or costs related to the import of the oil
        --   product.
    choice_2 : Optional OilDelivery_choice_2
      deriving (Eq, Ord, Show)

-- | A variant type used inside OilDelivery
data OilDelivery_choice
    = OilDelivery_choice_Pipeline OilPipelineDelivery
      -- ^ Specified the delivery conditions where the oil
      --   product is to be delivered by pipeline.
    | OilDelivery_choice_Transfer OilTransferDelivery
      -- ^ Specified the delivery conditions where the oil
      --   product is to be delivered by title transfer.
    deriving (Eq, Ord, Show)

-- | A variant type used inside OilDelivery
data OilDelivery_choice_2
    = OilDelivery_choice_2_AbsoluteTolerance AbsoluteTolerance
      -- ^ Specifies the allowable quantity tolerance as an
      --   absolute quantity.
    | OilDelivery_choice_2_PercentageTolerance PercentageTolerance
      -- ^ Specifies the allowable quantity tolerance as a
      --   percentage of the quantity.
    deriving (Eq, Ord, Show)

-- | Physically settled leg of a physically settled oil
--   product transaction.
data OilPhysicalLeg = OilPhysicalLeg with
    id_ : Optional Text
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    deliveryPeriods : CommodityDeliveryPeriods
        -- ^ The different options for specifying the Delivery or
        --   Supply Periods. Unless the quantity or price is to
        --   vary periodically during the trade or physical
        --   delivery occurs on a periodic basis, periodsSchedule
        --   should be used and set to 1T.
    oil : OilProduct
        -- ^ The specification of the oil product to be delivered.
    deliveryConditions : OilDelivery
        -- ^ The physical delivery conditions for the transaction.
    deliveryQuantity : CommodityPhysicalQuantity
        -- ^ The different options for specifying the quantity.
      deriving (Eq, Ord, Show)

-- | The physical delivery conditions specific to an oil
--   product delivered by pipeline.
data OilPipelineDelivery = OilPipelineDelivery with
    pipelineName : CommodityPipeline
        -- ^ The name of pipeline by which the oil product will be
        --   delivered.
    withdrawalPoint : Optional CommodityDeliveryPoint
        -- ^ The location at which the transfer of the title to
        --   the commodity takes place.
    entryPoint : Optional CommodityDeliveryPoint
        -- ^ The point at which the oil product will enter the
        --   pipeline.
    deliverableByBarge : Bool
        -- ^ Whether or not the delivery can go to barge. For
        --   trades documented under the ISDA Master Agreement and
        --   Oil Annex, this should always be set to 'false'.
    risk : Optional CommodityDeliveryRisk
        -- ^ Specifies how the risk associated with the delivery
        --   is assigned. For trades documented under the ISDA
        --   Master Agreement and Oil Annex, this presence of this
        --   element indicates that the provisions of clause
        --   (b)(i) of the ISDA Oil Annex are being varied.
    cycle : [CommodityPipelineCycle]
        -- ^ The cycle(s) during which the oil product will be
        --   transported in the pipeline.
      deriving (Eq, Ord, Show)

-- | The specification of the oil product to be delivered.
data OilProduct = OilProduct with
    type_ : OilProductType
        -- ^ The type of oil product to be delivered.
    grade : CommodityProductGrade
        -- ^ The grade of oil product to be delivered.
      deriving (Eq, Ord, Show)

-- | The type of physical commodity product to be
--   delivered.
data OilProductType = OilProductType with
    commodityOilProductTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The physical delivery conditions specific to an oil
--   product delivered by title transfer.
data OilTransferDelivery = OilTransferDelivery with
    applicable : Bool
        -- ^ Indicates that the oil product will be delivered by
        --   title transfer. Should always be set to "true".
    deliveryLocation : Optional CommodityDeliveryPoint
        -- ^ The location at which the transfer of the title to
        --   the commodity takes place.
      deriving (Eq, Ord, Show)

data OnBehalfOf = OnBehalfOf with
    partyReference : PartyReference
        -- ^ The party for which the message reciever should work.
    accountReference : [AccountReference]
        -- ^ Identifies the account(s) related to the party when
        --   they cannot be determined from the party alone, for
        --   example in a inter-book trade.
      deriving (Eq, Ord, Show)

-- | A type for defining the common features of options.
--   Buyer/seller information is not normally used in
--   Transparency view but is optional in case the
--   information is needed for administrative purposes
--   such as Reporting Party determination.
data Option
    = Option_CommodityDigitalOption CommodityDigitalOption
    | Option_CommodityBasketOption CommodityBasketOption
    | Option_FxOption FxOption
    | Option_FxDigitalOption FxDigitalOption
    deriving (Eq, Ord, Show)

-- | A type for defining the common features of options.
data OptionBase = OptionBase ()
    deriving (Eq, Ord, Show)

-- | Base type for options starting with the 4-3 release,
--   until we refactor the schema as part of the 5-0
--   release series.
data OptionBaseExtended = OptionBaseExtended ()
    deriving (Eq, Ord, Show)

data OptionEvent = OptionEvent with
    eventIdentifier : [BusinessEventIdentifier]
    choice_1 : OptionEvent_choice
    choice_2 : OptionEvent_choice_2
      deriving (Eq, Ord, Show)

-- | A variant type used inside OptionEvent
data OptionEvent_choice
    = OptionEvent_choice_OriginalTrade Trade
      -- ^ Fully describes the original trade (prior to the
      --   exercise).
    | OptionEvent_choice_TradeIdentifier [PartyTradeIdentifier]
      -- ^ Identified the trade to which the option event
      --   applies.
    deriving (Eq, Ord, Show)

-- | A variant type used inside OptionEvent
data OptionEvent_choice_2
    = OptionEvent_choice_2_KnockIn TriggerRateObservation
      -- ^ A structure describing a barrier knock in event
    | OptionEvent_choice_2_KnockOut KnockOutRateObservation
      -- ^ A structure describing a barrier knock out event
    | OptionEvent_choice_2_Touch [TouchRateObservation]
      -- ^ A structure describing a touch event
    | OptionEvent_choice_2_NoTouch NoTouchRateObservation
      -- ^ A structure describing the outcome of an option
      --   having no touch events
    deriving (Eq, Ord, Show)

-- | A structure describing an option exercise. The
--   OptionExercise type supports partial exercise
--   (specify the number of options or amount to
--   exercise), full exercise (use fullExercise flag), as
--   well as the option to request options not to be
--   exercised.
data OptionExercise = OptionExercise with
    eventIdentifier : [BusinessEventIdentifier]
    optionSeller : Optional PartyReference
    optionBuyer : Optional PartyReference
    choice_1 : OptionExercise_choice
    choice_2 : OptionExercise_choice_2
    choice_3 : OptionExercise_choice_3
    exerciseSide : Optional ExerciseSideEnum
    choice_4 : Optional OptionExercise_choice_4
    payment : Optional NonNegativePayment
    clearingInstructions : Optional ClearingInstructions
      deriving (Eq, Ord, Show)

data OptionExerciseAmounts
    = OptionExerciseAmounts_Items1 OptionExerciseAmounts_items
    | OptionExerciseAmounts_Items2 OptionExerciseAmounts_items_2
    | OptionExerciseAmounts_Items3 OptionExerciseAmounts_items_3
    | OptionExerciseAmounts_Items4 OptionExerciseAmounts_items_4
    deriving (Eq, Ord, Show)

-- | A record type used inside OptionExerciseAmounts
data OptionExerciseAmounts_items = OptionExerciseAmounts_items with
    notionalReference : Optional NotionalReference
    exerciseInNotionalAmount : Money
        -- ^ Specifies the fixed amount by which the option should
        --   be exercised expressed as notional amount.
    outstandingNotionalAmount : Optional Money
        -- ^ Specifies the Notional amount after the Change
      deriving (Eq, Ord, Show)

-- | A record type used inside OptionExerciseAmounts
data OptionExerciseAmounts_items_2 = OptionExerciseAmounts_items_2 with
    notionalScheduleReference : Optional NotionalReference
    exerciseInNotionalSchedule : NonNegativeAmountSchedule
        -- ^ Specifies the amount by which the option should be
        --   exercised expressed as notional schedule.
    outstandingNotionalSchedule : Optional NonNegativeAmountSchedule
        -- ^ Specifies the Notional schedule after the Change
      deriving (Eq, Ord, Show)

-- | A record type used inside OptionExerciseAmounts
data OptionExerciseAmounts_items_3 = OptionExerciseAmounts_items_3 with
    numberOfOptionsReference : Optional NumberOfOptionsReference
    exerciseInNumberOfOptions : Decimal
        -- ^ Specifies the fixed amount by which the option should
        --   be exercised expressed as number of options.
    outstandingNumberOfOptions : Optional Decimal
        -- ^ Specifies the Number of Options after the Change.
      deriving (Eq, Ord, Show)

-- | A record type used inside OptionExerciseAmounts
data OptionExerciseAmounts_items_4 = OptionExerciseAmounts_items_4 with
    numberOfUnitsReference : Optional NumberOfUnitsReference
    exerciseInNumberOfUnits : Decimal
        -- ^ Specifies the fixed amount by which the option should
        --   be exercised express as number of units.
    outstandingNumberOfUnits : Optional Decimal
        -- ^ Specifies the Number of Units
      deriving (Eq, Ord, Show)

-- | A variant type used inside OptionExercise
data OptionExercise_choice
    = OptionExercise_choice_OriginalTrade Trade
      -- ^ Fully describes the original trade (prior to the
      --   exercise).
    | OptionExercise_choice_TradeIdentifier [PartyTradeIdentifier]
    deriving (Eq, Ord, Show)

-- | A variant type used inside OptionExercise
data OptionExercise_choice_2
    = OptionExercise_choice_2_Items OptionExercise_items
    | OptionExercise_choice_2_ExerciseTiming ExerciseTimingEnum
    deriving (Eq, Ord, Show)

-- | A variant type used inside OptionExercise
data OptionExercise_choice_3
    = OptionExercise_choice_3_ExerciseAction ExerciseActionEnum
    | OptionExercise_choice_3_Expiry Bool
    | OptionExercise_choice_3_FullExercise Bool
    | OptionExercise_choice_3_Items1 OptionExercise_items_2
    | OptionExercise_choice_3_Items2 OptionExercise_items_3
    | OptionExercise_choice_3_Items3 OptionExercise_items_4
    | OptionExercise_choice_3_SpecifiedExercise [OptionExerciseAmounts]
      -- ^ Specifies the Number of Units
    deriving (Eq, Ord, Show)

-- | A variant type used inside OptionExercise
data OptionExercise_choice_4
    = OptionExercise_choice_4_SettlementType SettlementTypeEnum
    | OptionExercise_choice_4_CashSettlement SimplePayment
    | OptionExercise_choice_4_PhysicalSettlement PhysicalSettlement
    deriving (Eq, Ord, Show)

-- | A record type used inside OptionExercise
data OptionExercise_items = OptionExercise_items with
    exerciseDate : Optional Date
    exerciseTime : Optional Text
      deriving (Eq, Ord, Show)

-- | A record type used inside OptionExercise
data OptionExercise_items_2 = OptionExercise_items_2 with
    exerciseInNotionalAmount : Money
        -- ^ Specifies the fixed amount by which the option should
        --   be exercised expressed as notional amount.
    outstandingNotionalAmount : Money
        -- ^ Specifies the Notional amount after the Change
      deriving (Eq, Ord, Show)

-- | A record type used inside OptionExercise
data OptionExercise_items_3 = OptionExercise_items_3 with
    exerciseInNumberOfOptions : Decimal
        -- ^ Specifies the fixed amount by which the option should
        --   be exercised expressed as number of options.
    outstandingNumberOfOptions : Decimal
        -- ^ Specifies the Number of Options after the Change.
      deriving (Eq, Ord, Show)

-- | A record type used inside OptionExercise
data OptionExercise_items_4 = OptionExercise_items_4 with
    exerciseInNumberOfUnits : Decimal
        -- ^ Specifies the fixed amount by which the option should
        --   be exercised express as number of units.
    outstandingNumberOfUnits : Decimal
        -- ^ Specifies the Number of Units
      deriving (Eq, Ord, Show)

-- | A structure describing an option expiring (i.e.
--   passing its last exercise time and becoming
--   worthless.)
data OptionExpiry = OptionExpiry with
    eventIdentifier : [BusinessEventIdentifier]
    choice_ : OptionExpiry_choice
    date_ : Date
    time_ : Text
    exerciseProcedure : Optional ExerciseProcedureOption
    actionOnExpiration : Optional ActionOnExpiration
      deriving (Eq, Ord, Show)

-- | A structure describing an option expiring.
data OptionExpiryBase = OptionExpiryBase with
    tradeIdentifier : [PartyTradeIdentifier]
    date_ : Date
    time_ : Text
      deriving (Eq, Ord, Show)

-- | A variant type used inside OptionExpiry
data OptionExpiry_choice
    = OptionExpiry_choice_OriginalTrade Trade
      -- ^ Fully describes the original trade (prior to the
      --   exercise).
    | OptionExpiry_choice_TradeIdentifier [PartyTradeIdentifier]
    deriving (Eq, Ord, Show)

-- | A type for defining option features.
data OptionFeature = OptionFeature with
    fxFeature : Optional FxFeature
        -- ^ A quanto or composite FX feature.
    strategyFeature : Optional StrategyFeature
        -- ^ A simple strategy feature.
    asian : Optional Asian
        -- ^ An option where and average price is taken on
        --   valuation.
    barrier : Optional Barrier
        -- ^ An option with a barrier feature.
    knock : Optional Knock
        -- ^ A knock feature.
    passThrough : Optional PassThrough
        -- ^ Pass through payments from the underlyer, such as
        --   dividends.
      deriving (Eq, Ord, Show)

-- | A type for defining the strike price for an option as
--   a numeric value without currency.
data OptionNumericStrike
    = OptionNumericStrike_StrikePrice Decimal
      -- ^ The price or level at which the option has been
      --   struck.
    | OptionNumericStrike_StrikePercentage Decimal
      -- ^ The price or level expressed as a percentage of the
      --   forward starting spot price.
    deriving (Eq, Ord, Show)

-- | A type for defining the strike price for an equity
--   option. The strike price is either: (i) in respect of
--   an index option transaction, the level of the
--   relevant index specified or otherwise determined in
--   the transaction; or (ii) in respect of a share option
--   transaction, the price per share specified or
--   otherwise determined in the transaction. This can be
--   expressed either as a percentage of notional amount
--   or as an absolute value.
data OptionStrike = OptionStrike with
    choice_ : OptionStrike_choice
    currency : Optional Currency
        -- ^ The currency in which an amount is denominated.
      deriving (Eq, Ord, Show)

-- | A variant type used inside OptionStrike
data OptionStrike_choice
    = OptionStrike_choice_StrikePrice Decimal
      -- ^ The price or level at which the option has been
      --   struck.
    | OptionStrike_choice_StrikePercentage Decimal
      -- ^ The price or level expressed as a percentage of the
      --   forward starting spot price.
    deriving (Eq, Ord, Show)

-- | Specifies the type of the option.
data OptionTypeEnum
    = OptionTypeEnum_Put ()
      -- ^ A put option gives the holder the right to sell the
      --   underlying asset by a certain date for a certain
      --   price.
    | OptionTypeEnum_Call ()
      -- ^ A call option gives the holder the right to buy the
      --   underlying asset by a certain date for a certain
      --   price.
    | OptionTypeEnum_Payer ()
      -- ^ A "payer" option: If you buy a "payer" option you
      --   have the right but not the obligation to enter into
      --   the underlying swap transaction as the "fixed"
      --   rate/price payer and receive float.
    | OptionTypeEnum_Receiver ()
      -- ^ A receiver option: If you buy a "receiver" option you
      --   have the right but not the obligation to enter into
      --   the underlying swap transaction as the "fixed"
      --   rate/price receiver and pay float.
    | OptionTypeEnum_Straddle ()
      -- ^ A straddle strategy.
    deriving (Eq, Ord, Show)

-- | A type that an identifier for an order.
data OrderId = OrderId with
    orderIdScheme : Optional NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

-- | A type that an order's identifier(s).
data OrderIdentifier = OrderIdentifier with
    orderId : OrderId
      deriving (Eq, Ord, Show)

-- | A characteristic of an organization used in declaring
--   an end-user exception.
data OrganizationCharacteristic = OrganizationCharacteristic with
    organizationCharacteristicScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A code that describes what type of role an
--   organization plays, for example a SwapsDealer, a
--   Major Swaps Participant, or Other
data OrganizationType = OrganizationType with
    organizationTypeScheme : Optional NonEmptyURI
    content : Token
      deriving (Eq, Ord, Show)

data OriginatingEvent = OriginatingEvent with
    originatingEventScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | Indicator as to the type of transaction in accordance
--   with Articles 20(3)(a) and 21(5)(a) of Regulation
--   (EU) 600/2014.
data OtcClassification = OtcClassification with
    otcClassificationScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | An entity for defining the an agreement executed
--   between parties.
data OtherAgreement = OtherAgreement with
    identifier : [OtherAgreementId]
        -- ^ An identifier that has been created to identify the
        --   agreement.
    type_ : OtherAgreementType
        -- ^ The agreement executed between the parties and
        --   intended to govern product-specific derivatives
        --   transactions between those parties.
    version : Optional OtherAgreementVersion
        -- ^ The version of the agreement.
    date_ : Optional Date
        -- ^ The date on which the agreement was signed.
      deriving (Eq, Ord, Show)

-- | A agreement identifier allocated by a party. FpML
--   does not define the domain values associated with
--   this element. Note that the domain values for this
--   element are not strictly an enumerated list.
data OtherAgreementId = OtherAgreementId with
    agreementIdScheme : Optional NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

data OtherAgreementType = OtherAgreementType with
    agreementTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data OtherAgreementVersion = OtherAgreementVersion with
    agreementVersionScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | Identifying information for a tradePackage (a bundle
--   of trades).
data PackageHeader = PackageHeader with
    packageIdentifier : Optional IssuerTradeId
    orderIdentifier : Optional OrderIdentifier
    packageType : [PackageType]
        -- ^ Classification of the package. FpML has defined a
        --   list of coding scheme values. Different organizations
        --   might have different naming schemes for the packages
        --   so the multiplicity of unbounded is meant to support
        --   synonyms but it does not mean that a trade has
        --   multiple package types.
    size : Optional PositiveDecimal
    originatingEvent : Optional OriginatingEvent
        -- ^ This may be used to describe why a package was
        --   created. This can be used to provide context for a
        --   newly created package that is not part of a
        --   post-trade event. For example, it can report that the
        --   package was created as a result of netting activity,
        --   or due to a transfer, an allocation process, etc.
    packageInformation : Optional PackageInformation
      deriving (Eq, Ord, Show)

-- | A type defining additional information that may be
--   recorded against a package of trades.
data PackageInformation = PackageInformation with
    relatedParty : [RelatedParty]
        -- ^ This may be used to identify one or more parties that
        --   perform a role within the transaction. If this is
        --   within a partyTradeInformation block, the related
        --   party performs the role with respect to the party
        --   identifie by the "partyReference" in the
        --   partyTradeInformation block.
    category : [TradeCategory]
        -- ^ Used to categorize trades into user-defined
        --   categories, such as house trades vs. customer trades.
    executionDateTime : Optional ExecutionDateTime
        -- ^ Trade execution date time, for example as provided by
        --   a central execution facility. Normally this refers to
        --   the original execution time of the trade, not the
        --   execution time of any post-trade events that may have
        --   affected it. However, in the case of a post trade
        --   event that reports the new version of the trade (for
        --   example, the novation trade in an novation event, or
        --   the amended trade in an amendment event), the
        --   execution date time may contain the time that the
        --   newly created or modified trade was created or
        --   modified.
    timestamps : Optional TradeProcessingTimestamps
        -- ^ Allows timing information about a trade to be
        --   recorded.
    intentToAllocate : Optional Bool
        -- ^ Specifies whether the trade is anticipated to be
        --   allocated.
    allocationStatus : Optional AllocationReportingStatus
        -- ^ Specifies whether the trade is anticipated to be
        --   allocated, has been allocated, or will not be
        --   allocated.
    intentToClear : Optional Bool
        -- ^ Specifies whether the trade is anticipated to be
        --   cleared via a derivative clearing organization
    clearingStatus : Optional ClearingStatusValue
        -- ^ Describes the status with respect to clearing (e.g.
        --   AwaitingAcceptance, Pending, Accepted, Rejected,
        --   etc.)
    executionVenueType : Optional ExecutionVenueType
        -- ^ Used to describe the type of venue where trade was
        --   executed, e.g via an execution facility or privately.
      deriving (Eq, Ord, Show)

-- | Summary information about a trade package.
data PackageSummary = PackageSummary with
    packageIdentifier : Optional IssuerTradeId
    orderIdentifier : Optional OrderIdentifier
    packageType : [PackageType]
    size : Optional PositiveDecimal
    sequenceNumber : Optional PositiveDecimal
      deriving (Eq, Ord, Show)

-- | A type that describes what thpe of package this is,
--   e.g. Butterfly.
data PackageType = PackageType with
    packageTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type defining partial exercise. As defined in the
--   2000 ISDA Definitions, Section 12.3 Partial Exercise,
--   the buyer of the option may exercise all or less than
--   all the notional amount of the underlying swap but
--   may not be less than the minimum notional amount (if
--   specified) and must be an integral multiple of the
--   integral multiple amount if specified.
data PartialExercise = PartialExercise with
    notionalReference : [NotionalReference]
        -- ^ A pointer style reference to the associated notional
        --   schedule defined elsewhere in the document. This
        --   element has been made optional as part of its
        --   integration in the OptionBaseExtended, because not
        --   required for the options on securities.
    integralMultipleAmount : Optional Decimal
        -- ^ A notional amount which restricts the amount of
        --   notional that can be exercised when partial exercise
        --   or multiple exercise is applicable. The integral
        --   multiple amount defines a lower limit of notional
        --   that can be exercised and also defines a unit
        --   multiple of notional that can be exercised, i.e. only
        --   integer multiples of this amount can be exercised.
    choice_ : PartialExercise_choice
      deriving (Eq, Ord, Show)

-- | A variant type used inside PartialExercise
data PartialExercise_choice
    = PartialExercise_choice_MinimumNotionalAmount Decimal
      -- ^ The minimum notional amount that can be exercised on
      --   a given exercise date. See multipleExercise.
    | PartialExercise_choice_MinimumNumberOfOptions Int
      -- ^ The minimum number of options that can be exercised
      --   on a given exercise date.
    deriving (Eq, Ord, Show)

-- | A type that specifies the classification of a party.
data PartyEntityClassification = PartyEntityClassification with
    partyReference : PartyReference
        -- ^ A pointer style reference to a party identifier
        --   defined elsewhere in the document. The party
        --   referenced has the classification in the associated
        --   "entityClassification" element below.
    entityClassification : EntityClassification
        -- ^ Indicates the category or classification or business
        --   role of the organization referenced by the
        --   partyTradeInformation with respect to this reporting
        --   regime, for example Financial, NonFinancial etc.
      deriving (Eq, Ord, Show)

-- | The data type used for party group classification.
data PartyGroupType = PartyGroupType with
    partyGroupTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The data type used for party identifiers.
data PartyId = PartyId with
    partyIdScheme : NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

-- | A type defining additional information that may be
--   recorded against a message.
data PartyMessageInformation = PartyMessageInformation with
    partyReference : PartyReference
        -- ^ Identifies that party that has ownership of this
        --   information.
      deriving (Eq, Ord, Show)

-- | The data type used for the legal name of an
--   organization.
data PartyName = PartyName with
    partyNameScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type to represent a portfolio name for a particular
--   party.
data PartyPortfolioName = PartyPortfolioName with
    id_ : Optional Text
    partyReference : PartyReference
        -- ^ A pointer style reference to a party identifier
        --   defined elsewhere in the document. The party
        --   referenced has allocated the trade identifier.
    portfolioName : [PortfolioName]
      deriving (Eq, Ord, Show)

-- | Reference to a party.
data PartyReference = PartyReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | A type containing a code representing how two parties
--   are related, e.g. Affiliated, Intragroup, None.
data PartyRelationshipType = PartyRelationshipType with
    partyRelationshipTypeScheme : Optional NonEmptyURI
    id_ : Optional Text
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type describing a role played by a party in one or
--   more transactions. Examples include roles such as
--   guarantor, custodian, confirmation service provider,
--   etc. This can be extended to provide custom roles.
data PartyRole = PartyRole with
    partyRoleScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type refining the role a role played by a party in
--   one or more transactions. Examples include
--   "AllPositions" and "SomePositions" for Guarantor.
--   This can be extended to provide custom types.
data PartyRoleType = PartyRoleType with
    partyRoleTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type defining one or more trade identifiers
--   allocated to the trade by a party. A link identifier
--   allows the trade to be associated with other related
--   trades, e.g. trades forming part of a larger
--   structured transaction. It is expected that for
--   external communication of trade there will be only
--   one tradeId sent in the document per party.
data PartyTradeIdentifier = PartyTradeIdentifier with
    id_ : Optional Text
    choice_1 : PartyTradeIdentifier_choice_2
    linkId : [LinkId]
        -- ^ A link identifier allowing the trade to be associated
        --   with other related trades, e.g. the linkId may
        --   contain a tradeId for an associated trade or several
        --   related trades may be given the same linkId. FpML
        --   does not define the domain values associated with
        --   this element. Note that the domain values for this
        --   element are not strictly an enumerated list.
    choice_2 : PartyTradeIdentifier_choice_3
    blockTradeId : Optional TradeIdentifier
        -- ^ The trade id of the block trade. This is used by each
        --   one of the allocated trades to reference the block
        --   trade. This element can also represent the trade id
        --   of the parent trade for N-level allocations. In the
        --   case, this element is only used to model N-level
        --   allocations in which the trade acts as block and
        --   allocated trade at the same time. This basically
        --   means the ability to allocate a block trade to
        --   multiple allocation trades, and then allocate these
        --   in turn to other allocation trades (and so on if
        --   desired).
    originatingTradeId : [TradeIdentifier]
        -- ^ The trade id of the trade(s) upon which this was
        --   based, for example the ID of the trade that was
        --   submitted for clearing if this is a cleared trade, or
        --   of the original trade if this was novated or
        --   cancelled and rebooked, or the list of trades that
        --   were netted or compressed together in the case of a
        --   compression event. The originatingEvent will explain
        --   why the trade was created; the existence and number
        --   of originatingTradeId elements should correspond to
        --   the originatingEvent, and they should be interpreted
        --   using that field. If the trade is inside a business
        --   event structure (such as a novation or a compression
        --   event) this element shuld not be populated; instead
        --   the event shoudl be used to represent the other
        --   trades.
    productComponentIdentifier : [ProductComponentIdentifier]
        -- ^ Deprecated: The USIs of the components of this trade,
        --   when this trade contains a strategy.
      deriving (Eq, Ord, Show)

-- | A reference to a partyTradeIdentifier object.
data PartyTradeIdentifierReference = PartyTradeIdentifierReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | A variant type used inside PartyTradeIdentifier
data PartyTradeIdentifier_choice
    = PartyTradeIdentifier_choice_TradeId TradeId
    | PartyTradeIdentifier_choice_VersionedTradeId VersionedTradeId
      -- ^ A trade identifier accompanied by a version number.
      --   In regulatory reporting views, this should be avoided
      --   except for internal mnessaging.
    deriving (Eq, Ord, Show)

-- | A variant type used inside PartyTradeIdentifier
data PartyTradeIdentifier_choice_2
    = PartyTradeIdentifier_choice_2_Items1 PartyTradeIdentifier_items
    | PartyTradeIdentifier_choice_2_Items2 PartyTradeIdentifier_items_2
    deriving (Eq, Ord, Show)

-- | A variant type used inside PartyTradeIdentifier
data PartyTradeIdentifier_choice_3
    = PartyTradeIdentifier_choice_3_AllocationTradeId [TradeIdentifier]
      -- ^ The trade id of the allocated trade. This is used by
      --   the block trade to reference the allocated trade.
    | PartyTradeIdentifier_choice_3_ResultingTradeId [TradeIdentifierExtended]
      -- ^ The trade id of a resulting trade (beta or gamma
      --   trade) that resulted from this trade during a
      --   clearing or similar operation (e.g. prime brokerage).
    deriving (Eq, Ord, Show)

-- | A record type used inside PartyTradeIdentifier
data PartyTradeIdentifier_items = PartyTradeIdentifier_items with
    issuer : IssuerId
    tradeId : TradeId
      deriving (Eq, Ord, Show)

-- | A record type used inside PartyTradeIdentifier
data PartyTradeIdentifier_items_2 = PartyTradeIdentifier_items_2 with
    partyReference : PartyReference
        -- ^ Reference to a party.
    accountReference : Optional AccountReference
        -- ^ Reference to an account.
    choice_ : [PartyTradeIdentifier_choice]
      deriving (Eq, Ord, Show)

-- | A type containing multiple partyTradeIdentifier.
data PartyTradeIdentifiers = PartyTradeIdentifiers with
    partyTradeIdentifier : [PartyTradeIdentifier]
      deriving (Eq, Ord, Show)

-- | A type defining party-specific additional information
--   that may be recorded against a trade.
data PartyTradeInformation = PartyTradeInformation with
    partyReference : PartyReference
        -- ^ Reference to a party.
    accountReference : Optional AccountReference
        -- ^ Reference to an account.
    relatedParty : [RelatedParty]
        -- ^ This may be used to identify one or more parties that
        --   perform a role within the transaction. If this is
        --   within a partyTradeInformation block, the related
        --   party performs the role with respect to the party
        --   identifie by the "partyReference" in the
        --   partyTradeInformation block.
    reportingRole : Optional ReportingRole
        -- ^ Identifies the role of this party in reporting this
        --   trade (e.g. originator, counterparty).
    unit : [FpmlUnit]
        -- ^ Identifies the unit/division/desk etc. that executed
        --   or supports this trade
    relatedBusinessUnit : [RelatedBusinessUnit]
        -- ^ Provides information about a unit/division/desk etc.
        --   that executed or supports this trade
    relatedPerson : [RelatedPerson]
        -- ^ Provides information about a person that executed or
        --   supports this trade
    algorithm : [Algorithm]
        -- ^ Provides information about an algorithm that executed
        --   or otherwise participated in this trade this trade
    isAccountingHedge : Optional Bool
        -- ^ Specifies whether the trade used to hedge a risk for
        --   accounting purposes for the specified party. (TODO:
        --   do we need to distinguish between asset and liability
        --   hedges?)
    category : [TradeCategory]
        -- ^ Used to categorize trades into user-defined
        --   categories, such as house trades vs. customer trades.
    trader : [Trader]
        -- ^ Identifies the person or persons who assumed the role
        --   of trader for this trade. New implementations are
        --   encouraged to use the relatedPerson structure
        --   instead.
    executionDateTime : Optional ExecutionDateTime
        -- ^ Trade execution date time, for example as provided by
        --   a central execution facility. Normally this refers to
        --   the original execution time of the trade, not the
        --   execution time of any post-trade events that may have
        --   affeted it. However, in the case of a post trade
        --   event that reports the new version of the trade (for
        --   example, the novation trade in an novation event, or
        --   the amended trade in an amendment event), the
        --   execution date time may contain the time that the
        --   newly created or modified trade was created or
        --   modified.
    timestamps : Optional TradeProcessingTimestamps
        -- ^ Allows timing information about a trade to be
        --   recorded.
    intentToAllocate : Optional Bool
        -- ^ Specifies whether the trade is anticipated to be
        --   allocated.
    allocationStatus : Optional AllocationReportingStatus
        -- ^ Specifies whether the trade is anticipated to be
        --   allocated, has been allocated, or will not be
        --   allocated.
    intentToClear : Optional Bool
        -- ^ Specifies whether the trade is anticipated to be
        --   cleared via a derivative clearing organization
    clearingStatus : Optional ClearingStatusValue
        -- ^ Describes the status with respect to clearing (e.g.
        --   AwaitingAcceptance, Pending, Accepted, Rejected,
        --   etc.)
    collateralizationType : Optional CollateralizationType
        -- ^ Specifies whether this party posts collateral. For
        --   Recordkeeping, the collateralization type refers to
        --   collateral that is posted by this firm, and One-Way
        --   is not meaningful. In other words, if the
        --   collateralization type is Full, this trade is fully
        --   collateralized by this party. For Transparency view,
        --   the options include Full, Partial, Uncollateralized,
        --   and One-Way.
    collateralPortfolio : Optional PortfolioName
        -- ^ Provides a name, code, or other identifier for the
        --   collateral portfolio to which this belongs.
    reportingRegime : [ReportingRegime]
        -- ^ Allows the organization to specify which if any
        --   relevant regulators or other supervisory bodies this
        --   is relevant for, and what reporting rules apply.
    choice_ : PartyTradeInformation_choice
    nonStandardTerms : Optional Bool
        -- ^ Indicates that the trade has price-affecting
        --   characteristics in addition to the standard real-time
        --   reportable terms. The flag indicates that the price
        --   for this trade is not to be construed as being
        --   indicative of the market for standardised trades with
        --   otherwise identical reportable terms.
    offMarketPrice : Optional Bool
        -- ^ Indicates that the price does not reflect the current
        --   market. For example, in a credit trade where the two
        --   counterparties are not of equal credit standing,
        --   there is no initial margin and one party pays
        --   collateral to the other in the form of an add-on to
        --   the price (say a price that would otherwise be 100 at
        --   the market is struck at 105 to include the
        --   collateral, resulting in a very off-market looking
        --   price.)
    pricingContext : [PricingContext]
        -- ^ Describes why the price of this trade does not
        --   reflect the current market price. For example, the
        --   trade may have been traded off-market as part of a
        --   termination or compression operation.
    largeSizeTrade : Optional Bool
        -- ^ Specifies whether the sender of this trade considers
        --   it to be a large notional trade or block trade for
        --   reporting purposes, and thus eligible for delayed
        --   public reporting. Normally this will only be
        --   applicable for off-facility trades.
    executionType : Optional ExecutionType
        -- ^ Used to describe how the trade was executed, e.g. via
        --   voice or electronically.
    executionVenueType : Optional ExecutionVenueType
        -- ^ Used to describe the type of venue where trade was
        --   executed, e.g via an execution facility or privately.
    verificationMethod : Optional VerificationMethod
        -- ^ Used to describe how the trade was or will be
        --   verified, e.g via a confirmation facility, via
        --   private electronic service, or via written
        --   documentation. This affect the timing of real-time
        --   reporting requirements. This field is provisional
        --   pending detailed confirmation of the data
        --   requirements, and may not be included in subsequent
        --   working drafts.
    confirmationMethod : Optional ConfirmationMethod
        -- ^ Used to describe how the trade was confirmed, e.g via
        --   a confirmation facility, via private electronic
        --   service, or via written documentation. This affects
        --   the process flow for confirmation messages. This
        --   field is provisional pending detailed confirmation of
        --   the data requirements, and may not be included in
        --   subsequent working drafts.
    compressedTrade : Optional Bool
        -- ^ Specifies whether this trade is a result of
        --   compression activity.
    transactionClassification_model : Optional PartyTradeInformation_TransactionClassification_model
    isDisputed : Optional Bool
        -- ^ Used to report whether the trade is in dispute
      deriving (Eq, Ord, Show)

-- | A record type used inside PartyTradeInformation
data PartyTradeInformation_TransactionClassification_model = PartyTradeInformation_TransactionClassification_model with
    isSecuritiesFinancing : Optional Bool
        -- ^ Whether the transaction falls within the scope of
        --   activity but is exempted from reporting under
        --   [Securities Financing Transactions Regulation]
    otcClassification : [OtcClassification]
        -- ^ Classification of the OTC transaction. Note: Coding
        --   scheme definition to encapsulate: Articles 20(3)(a)
        --   and 21(5)(a) of Regulation (EU) 600/2014. e.g.
        --   default="http://www.fpml.org/coding-scheme/esma-mifir-otc-classification"
    tradingWaiver : [TradingWaiver]
        -- ^ Classification of the pre-trade waiver, if any, that
        --   the transaction was executed under. Note: Coding
        --   scheme to encapsulate: Articles 4 and 9 of Regulation
        --   (EU) 600/2014. e.g.
        --   default="http://www.fpml.org/coding-scheme/esma-mifir-trading-waiver"
    shortSale : Optional ShortSale
        -- ^ Classification of the transaction as a short sale or
        --   not and, if short, of the type of transaction. Note:
        --   Coding scheme to encapsulate: Article 11 of
        --   Regulation (EU) 600/2014. e.g.
        --   default="http://www.fpml.org/coding-scheme/esma-mifir-short-sale"
    isCommodityHedge : Optional Bool
        -- ^ Whether the transaction reduces risk in an
        --   objectively measurable way. Only applicable for
        --   commodity derivative transactions.
      deriving (Eq, Ord, Show)

-- | A variant type used inside PartyTradeInformation
data PartyTradeInformation_choice
    = PartyTradeInformation_choice_Items PartyTradeInformation_items
    | PartyTradeInformation_choice_EndUserExceptionDeclaration (Optional (EndUserExceptionDeclaration))
      -- ^ Claims an end user exception and provides supporting
      --   evidence. If a relatedParty block with a role of
      --   ClearingExceptionParty is present, that related party
      --   indicates which party is claiming the end user
      --   exception.
    deriving (Eq, Ord, Show)

-- | A record type used inside PartyTradeInformation
data PartyTradeInformation_items = PartyTradeInformation_items with
    endUserException : Optional Bool
        -- ^ Specifies whether the trade is not obligated to be
        --   cleared via a derivative clearing organization, i.e.
        --   wehter there is an exemption from clearing. For
        --   historical reasons this is called "end-user
        --   exception", but this may be used to indication any
        --   exception from normal clearing mandates caused by the
        --   type of the partiees or their relationship, such as
        --   inter-affiliate trades. If a relatedParty block with
        --   a role of ClearingExceptionParty is present, that
        --   related party indicates which party is claiming the
        --   end user exception.
    endUserExceptionReason : Optional ClearingExceptionReason
        -- ^ Specifies a reason that the trade is exempted from a
        --   clearing requirement. This exemption may be an
        --   end-user exception, or another type such as in
        --   inter-affiliate trade.
      deriving (Eq, Ord, Show)

-- | Type which contains pass through payments.
data PassThrough = PassThrough with
    passThroughItem : [PassThroughItem]
        -- ^ One to many pass through payment items.
      deriving (Eq, Ord, Show)

-- | Type to represent a single pass through payment.
data PassThroughItem = PassThroughItem with
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    underlyerReference : AssetReference
        -- ^ Reference to the underlyer whose payments are being
        --   passed through.
    passThroughPercentage : Decimal
        -- ^ Percentage of payments from the underlyer which are
        --   passed through.
      deriving (Eq, Ord, Show)

-- | The specification of whether payments occur relative
--   to the calculation period start or end date, or the
--   reset date.
data PayRelativeToEnum
    = PayRelativeToEnum_CalculationPeriodStartDate ()
      -- ^ Payments will occur relative to the first day of each
      --   calculation period.
    | PayRelativeToEnum_CalculationPeriodEndDate ()
      -- ^ Payments will occur relative to the last day of each
      --   calculation period.
    | PayRelativeToEnum_LastPricingDate ()
      -- ^ Payments will occur relative to the last Pricing Date
      --   of each Calculation Period.
    | PayRelativeToEnum_ResetDate ()
      -- ^ Payments will occur relative to the reset date.
    | PayRelativeToEnum_ValuationDate ()
      -- ^ Payments will occur relative to the valuation date.
    deriving (Eq, Ord, Show)

-- | The specification of an interest rate stream payer or
--   receiver party.
data PayerReceiverEnum
    = PayerReceiverEnum_Payer ()
      -- ^ The party identified as the stream payer.
    | PayerReceiverEnum_Receiver ()
      -- ^ The party identified as the stream receiver.
    deriving (Eq, Ord, Show)

-- | A type for defining payments. In Transparency view,
--   normally the payer and receiver party references are
--   not used; however they may be provided if necessary
--   for administrative activities such as Reporting Party
--   Determination in FX.
data Payment = Payment with
    id_ : Optional Text
    href : Optional Text
        -- ^ Can be used to reference the yield curve used to
        --   estimate the discount factor.
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    paymentAmount : NonNegativeMoney
        -- ^ The currency amount of the payment.
    paymentDate : Optional AdjustableOrAdjustedDate
        -- ^ The payment date. This date is subject to adjustment
        --   in accordance with any applicable business day
        --   convention.
    paymentType : Optional PaymentType
        -- ^ A classification of the type of fee or additional
        --   payment, e.g. brokerage, upfront fee etc. FpML does
        --   not define domain values for this element.
    settlementInformation : Optional SettlementInformation
        -- ^ The information required to settle a currency payment
        --   that results from a trade.
    discountFactor : Optional Decimal
        -- ^ The value representing the discount factor used to
        --   calculate the present value of the cash flow.
    presentValueAmount : Optional Money
        -- ^ The amount representing the present value of the
        --   forecast payment.
      deriving (Eq, Ord, Show)

-- | An abstract base class for payment types.
data PaymentBase
    = PaymentBase_PendingPayment PendingPayment
    | PaymentBase_FeaturePayment FeaturePayment
    | PaymentBase_SimplePayment SimplePayment
    | PaymentBase_Premium Premium
    | PaymentBase_PaymentDetail PaymentDetail
    | PaymentBase_FxStraddlePremium FxStraddlePremium
    | PaymentBase_NonNegativePayment NonNegativePayment
    | PaymentBase_CommodityPremium CommodityPremium
    | PaymentBase_FxOptionPremium FxOptionPremium
    | PaymentBase_ClassifiablePayment ClassifiablePayment
    | PaymentBase_Payment Payment
    deriving (Eq, Ord, Show)

-- | Base type for payments.
data PaymentBaseExtended
    = PaymentBaseExtended_FxStraddlePremium FxStraddlePremium
    | PaymentBaseExtended_NonNegativePayment NonNegativePayment
    | PaymentBaseExtended_CommodityPremium CommodityPremium
    | PaymentBaseExtended_FxOptionPremium FxOptionPremium
    | PaymentBaseExtended_ClassifiablePayment ClassifiablePayment
    deriving (Eq, Ord, Show)

data PaymentDetail = PaymentDetail with
    id_ : Optional Text
    paymentDate : Optional AdjustableOrRelativeDate
        -- ^ Payment date.
    choice_ : PaymentDetail_choice
      deriving (Eq, Ord, Show)

-- | A variant type used inside PaymentDetail
data PaymentDetail_choice
    = PaymentDetail_choice_PaymentAmount Money
      -- ^ A fixed payment amount.
    | PaymentDetail_choice_Items PaymentDetail_items
    deriving (Eq, Ord, Show)

-- | A record type used inside PaymentDetail
data PaymentDetail_items = PaymentDetail_items with
    paymentRule : PaymentRule
        -- ^ A type defining the calculation rule.
    paymentAmount : Optional Money
        -- ^ A fixed payment amount.
      deriving (Eq, Ord, Show)

-- | Details on the referenced payment. e.g. Its cashflow
--   components, settlement details.
data PaymentDetails = PaymentDetails with
    paymentReference : PaymentReference
        -- ^ The reference to the identified payment strucutre.
    grossCashflow : [GrossCashflow]
        -- ^ Payment details of this cash flow component,
        --   including currency, amount and payer/payee.
    settlementInformation : Optional SettlementInformation
        -- ^ The information required to settle a currency
        --   payment.
      deriving (Eq, Ord, Show)

-- | Reference to a payment.
data PaymentReference = PaymentReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | The abstract base type from which all calculation
--   rules of the independent amount must be derived.
data PaymentRule
    = PaymentRule_PercentageRule PercentageRule
    deriving (Eq, Ord, Show)

data PaymentType = PaymentType with
    paymentTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The specification of how an FX OTC option with a
--   trigger payout will be paid if the trigger condition
--   is met. The contract will specify whether the payout
--   will occur immediately or on the original value date
--   of the option.
data PayoutEnum
    = PayoutEnum_Deferred ()
      -- ^ If the trigger is hit, the option payout will not be
      --   paid now but will be paid on the value date of the
      --   original option.
    | PayoutEnum_Immediate ()
      -- ^ If the trigger is hit, the option payout will be paid
      --   immediately (i.e., spot from the payout date).
    deriving (Eq, Ord, Show)

-- | A structure representing a pending dividend or coupon
--   payment.
data PendingPayment = PendingPayment with
    id_ : Optional Text
    paymentDate : Date
        -- ^ The date that the dividend or coupon is due.
    amount : Money
        -- ^ The amount of the dividend or coupon payment. Value
        --   of dividends or coupon between ex and pay date.
        --   Stock: if we are between ex-date and pay-date and the
        --   dividend is payable under the swap, then this should
        --   be the ex-div amount * # of securities. Bond:
        --   regardless of where we are vis-a-vis resets: (coupon
        --   % * face of bonds on swap * (bond day count fraction
        --   using days last coupon pay date of the bond through
        --   today).
    accruedInterest : Optional Money
        -- ^ Accrued interest on the dividend or coupon payment.
        --   When the TRS is structured to pay a dividend or
        --   coupon on reset after payable date, you may earn
        --   interest on these amounts. This field indicates the
        --   interest accrued on dividend/coupon from pay date to
        --   statement date. This will only apply to a handful of
        --   agreements where dividendss are held to the next
        --   reset AND you receive/pay interest on unpaid amounts.
      deriving (Eq, Ord, Show)

-- | A type defining a content model for a calculation
--   rule defined as percentage of the notional amount.
data PercentageRule = PercentageRule with
    paymentPercent : Decimal
        -- ^ A percentage of the notional amount.
    notionalAmountReference : NotionalAmountReference
        -- ^ A reference to the notional amount.
      deriving (Eq, Ord, Show)

-- | The acceptable tolerance in the delivered quantity of
--   a physical commodity product in terms of a percentage
--   of the agreed delivery quantity.
data PercentageTolerance = PercentageTolerance with
    postitive : RestrictedPercentage
        -- ^ The maximum percentage amount by which the quantity
        --   delivered can exceed the agreed quantity.
    negative : RestrictedPercentage
        -- ^ The maximum percentage amount by which the quantity
        --   delivered can be less than the agreed quantity.
    option : Optional PartyReference
        -- ^ Indicates whether the tolerance it at the seller's or
        --   buyer's option.
      deriving (Eq, Ord, Show)

-- | A type to define recurring periods or time offsets.
data Period = Period with
    id_ : Optional Text
    periodMultiplier : Int
        -- ^ A time period multiplier, e.g. 1, 2 or 3 etc. A
        --   negative value can be used when specifying an offset
        --   relative to another date, e.g. -2 days.
    period : PeriodEnum
        -- ^ A time period, e.g. a day, week, month or year of the
        --   stream. If the periodMultiplier value is 0 (zero)
        --   then period must contain the value D (day).
      deriving (Eq, Ord, Show)

-- | The specification of a time period
data PeriodEnum
    = PeriodEnum_D ()
      -- ^ Day.
    | PeriodEnum_W ()
      -- ^ Week.
    | PeriodEnum_M ()
      -- ^ Month.
    | PeriodEnum_Y ()
      -- ^ Year.
    deriving (Eq, Ord, Show)

-- | The specification of a time period containing
--   additional values such as Term.
data PeriodExtendedEnum
    = PeriodExtendedEnum_D ()
      -- ^ Day.
    | PeriodExtendedEnum_W ()
      -- ^ Week.
    | PeriodExtendedEnum_M ()
      -- ^ Month.
    | PeriodExtendedEnum_Y ()
      -- ^ Year.
    | PeriodExtendedEnum_T ()
      -- ^ Term. The period commencing on the effective date and
      --   ending on the termination date. The T period always
      --   appears in association with periodMultiplier = 1, and
      --   the notation is intended for use in contexts where
      --   the interval thus qualified (e.g. accrual period,
      --   payment period, reset period, ...) spans the entire
      --   term of the trade.
    deriving (Eq, Ord, Show)

-- | The specification of a time period containing
--   additional values such as Term.
data PeriodTimeEnum
    = PeriodTimeEnum_D ()
      -- ^ Day.
    | PeriodTimeEnum_W ()
      -- ^ Week.
    | PeriodTimeEnum_M ()
      -- ^ Month.
    | PeriodTimeEnum_Y ()
      -- ^ Year.
    | PeriodTimeEnum_Hour ()
      -- ^ Period measured in hours.
    | PeriodTimeEnum_Minute ()
      -- ^ Period measured in minutes.
    | PeriodTimeEnum_Second ()
      -- ^ Period measured in seconds.
    deriving (Eq, Ord, Show)

data PeriodicDates = PeriodicDates with
    calculationStartDate : AdjustableOrRelativeDate
    calculationEndDate : Optional AdjustableOrRelativeDate
    calculationPeriodFrequency : CalculationPeriodFrequency
        -- ^ The frequency at which calculation period end dates
        --   occur with the regular part of the calculation period
        --   schedule and their roll date convention.
    calculationPeriodDatesAdjustments : BusinessDayAdjustments
        -- ^ The business day convention to apply to each
        --   calculation period end date if it would otherwise
        --   fall on a day that is not a business day in the
        --   specified financial business centers.
      deriving (Eq, Ord, Show)

-- | A type that represents information about a person
--   connected with a trade or business process.
data Person = Person with
    id_ : Optional Text
    sequence_ : Optional Person_sequence
    personId : [PersonId]
        -- ^ An identifier assigned by a system for uniquely
        --   identifying the individual
    businessUnitReference : Optional BusinessUnitReference
        -- ^ The unit for which the indvidual works.
    contactInfo : Optional ContactInformation
        -- ^ Information on how to contact the individual using
        --   various means.
    dateOfBirth : Optional Date
        -- ^ The birth date of the person, e.g. 1970-01-01
    country : Optional CountryCode
        -- ^ The ISO 3166 standard code for the country where the
        --   individual works.
      deriving (Eq, Ord, Show)

-- | An identifier used to identify an individual person.
data PersonId = PersonId with
    personIdScheme : Optional NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

-- | Reference to an individual.
data PersonReference = PersonReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | A type describing a role played by a person in one or
--   more transactions. Examples include roles such as
--   Trader, Broker, MiddleOffice, Legal, etc. This can be
--   extended to provide custom roles.
data PersonRole = PersonRole with
    personRoleScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A variant type used inside Person
data Person_choice
    = Person_choice_MiddleName [NormalizedString]
    | Person_choice_Initial [Initial]
    deriving (Eq, Ord, Show)

-- | A record type used inside Person
data Person_sequence = Person_sequence with
    honorific : Optional NormalizedString
        -- ^ An honorific title, such as Mr., Ms., Dr. etc.
    firstName : NormalizedString
        -- ^ Given name, such as John or Mary.
    choice_ : Optional Person_choice
    surname : NormalizedString
        -- ^ Family name, such as Smith or Jones.
    suffix : Optional NormalizedString
        -- ^ Name suffix, such as Jr., III, etc.
      deriving (Eq, Ord, Show)

-- | The common components of a physically settled leg of
--   a Commodity Forward. This is an abstract type and
--   should be extended by commodity-specific types.
data PhysicalForwardLeg
    = PhysicalForwardLeg_MetalPhysicalLeg MetalPhysicalLeg
    | PhysicalForwardLeg_BullionPhysicalLeg BullionPhysicalLeg
    deriving (Eq, Ord, Show)

-- | A structure that describes how an option settles into
--   a physical trade.
data PhysicalSettlement
    = PhysicalSettlement_ResultingTradeIdentifier PartyTradeIdentifier
      -- ^ The ID of the trade that resulted from the physical
      --   settlement.
    | PhysicalSettlement_ResultingTrade Trade
      -- ^ The trade that resulted from the physical settlement.
    | PhysicalSettlement_Product Product
      -- ^ An abstract element used as a place holder for the
      --   substituting product elements.
    deriving (Eq, Ord, Show)

-- | The common components of a physically settled leg of
--   a Commodity Swap. This is an abstract type and should
--   be extended by commodity-specific types.
data PhysicalSwapLeg
    = PhysicalSwapLeg_OilPhysicalLeg OilPhysicalLeg
    | PhysicalSwapLeg_GasPhysicalLeg GasPhysicalLeg
    | PhysicalSwapLeg_EnvironmentalPhysicalLeg EnvironmentalPhysicalLeg
    | PhysicalSwapLeg_ElectricityPhysicalLeg ElectricityPhysicalLeg
    | PhysicalSwapLeg_CoalPhysicalLeg CoalPhysicalLeg
    deriving (Eq, Ord, Show)

-- | Constrains the forward point tick/pip factor to 1,
--   0.1, 0.01, 0.001, etc.
type PointValue = Decimal

-- | A type representing an arbitary grouping of trade
--   references.
data Portfolio = Portfolio with
    id_ : Optional Text
    partyPortfolioName : Optional PartyPortfolioName
        -- ^ The name of the portfolio together with the party
        --   that gave the name.
    choice_ : Portfolio_choice
    portfolio : [Portfolio]
        -- ^ An arbitary grouping of trade references (and
        --   possibly other portfolios).
      deriving (Eq, Ord, Show)

-- | A structure used to group together individual
--   messages that can be acted on at a group level.
data PortfolioConstituentReference = PortfolioConstituentReference with
    portfolioName : PortfolioName
        -- ^ An identifier that is unique for each portfolio-level
        --   request, and which can be used to group together the
        --   individual messages in the portfolio request.
    sequenceNumber : Int
        -- ^ A numeric, sequentially ascending (i.e. gapless)
        --   value (starting at 1) that can be used to identify
        --   and distinguish the individual constituents of a
        --   portfolio request. A recipient should ensure that all
        --   sequence numbers from 1 to the final sequence number
        --   (where submissionsComplete is true) have arrived
        --   before completing the portfolio request.
      deriving (Eq, Ord, Show)

-- | The data type used for portfolio names.
data PortfolioName = PortfolioName with
    id_ : Optional Text
    portfolioNameScheme : Optional NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

-- | A structure used to group together individual
--   messages that can be acted on at a group level.
data PortfolioReference = PortfolioReference with
    portfolioName : PortfolioName
        -- ^ An identifier that is unique for each portfolio-level
        --   request, and which can be used to group together the
        --   individual messages in the portfolio request.
    sequenceNumber : Int
        -- ^ A numeric, sequentially ascending (i.e. gapless)
        --   value (starting at 1) that can be used to identify
        --   and distinguish the individual constituents of a
        --   portfolio request. A recipient should ensure that all
        --   sequence numbers from 1 to the final sequence number
        --   (where submissionsComplete is true) have arrived
        --   before completing the portfolio request.
    submissionsComplete : Optional Bool
        -- ^ Indicates whether all individual requests have been
        --   submitted for this portfolio request.
      deriving (Eq, Ord, Show)

-- | A structure used to identify a portfolio in a
--   message.
data PortfolioReferenceBase = PortfolioReferenceBase with
    portfolioName : PortfolioName
        -- ^ An identifier that is unique for each portfolio-level
        --   request, and which can be used to group together the
        --   individual messages in the portfolio request.
      deriving (Eq, Ord, Show)

-- | A variant type used inside Portfolio
data Portfolio_choice
    = Portfolio_choice_TradeId [TradeId]
    | Portfolio_choice_PartyTradeIdentifier [PartyTradeIdentifier]
    deriving (Eq, Ord, Show)

-- | A type defining a number specified as positive
--   decimal greater than 0 exclusive.
type PositiveDecimal = Decimal

-- | A type defining a positive money amount
data PositiveMoney = PositiveMoney with
    id_ : Optional Text
    currency : Currency
        -- ^ The currency in which an amount is denominated.
    amount : PositiveDecimal
        -- ^ The positive monetary quantity in currency units.
      deriving (Eq, Ord, Show)

-- | Describes a postponement
data Postponement = Postponement with
    maximumNumberOfDays : Optional Int
        -- ^ The maximum number of days of postponement.
      deriving (Eq, Ord, Show)

-- | A type for defining a premium.
data Premium = Premium with
    id_ : Optional Text
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    paymentAmount : NonNegativeMoney
    paymentDate : AdjustableOrRelativeDate
        -- ^ The payment date. This date is subject to adjustment
        --   in accordance with any applicable business day
        --   convention.
    premium_model : Optional Premium_Premium_model
    paymentDiscounting_model : Optional Premium_PaymentDiscounting_model
      deriving (Eq, Ord, Show)

-- | A type that describes the option premium as quoted.
data PremiumQuote = PremiumQuote with
    value : Decimal
        -- ^ The value of the premium quote. In general this will
        --   be either a percentage or an explicit amount.
    quoteBasis : PremiumQuoteBasisEnum
        -- ^ The method by which the option premium was quoted.
      deriving (Eq, Ord, Show)

-- | The specification of how the premium for an FX OTC
--   option is quoted.
data PremiumQuoteBasisEnum
    = PremiumQuoteBasisEnum_PercentageOfCallCurrencyAmount ()
      -- ^ Premium is quoted as a percentage of the
      --   callCurrencyAmount.
    | PremiumQuoteBasisEnum_PercentageOfPutCurrencyAmount ()
      -- ^ Premium is quoted as a percentage of the
      --   putCurrencyAmount.
    | PremiumQuoteBasisEnum_CallCurrencyPerPutCurrency ()
      -- ^ Premium is quoted in the call currency as a
      --   percentage of the put currency.
    | PremiumQuoteBasisEnum_PutCurrencyPerCallCurrency ()
      -- ^ Premium is quoted in the put currency as a percentage
      --   of the call currency.
    | PremiumQuoteBasisEnum_Explicit ()
      -- ^ Premium is quoted as an explicit amount.
    deriving (Eq, Ord, Show)

-- | Premium Type for Forward Start Equity Option
data PremiumTypeEnum
    = PremiumTypeEnum_PrePaid ()
      -- ^ TODO
    | PremiumTypeEnum_PostPaid ()
      -- ^ TODO
    | PremiumTypeEnum_Variable ()
      -- ^ TODO
    | PremiumTypeEnum_Fixed ()
      -- ^ TODO
    deriving (Eq, Ord, Show)

-- | A record type used inside Premium
data Premium_PaymentDiscounting_model = Premium_PaymentDiscounting_model with
    discountFactor : Optional Decimal
        -- ^ The value representing the discount factor used to
        --   calculate the present value of the cash flow.
    presentValueAmount : Optional Money
        -- ^ The amount representing the present value of the
        --   forecast payment.
      deriving (Eq, Ord, Show)

-- | A record type used inside Premium
data Premium_Premium_model = Premium_Premium_model with
    premiumType : Optional PremiumTypeEnum
        -- ^ Forward start Premium type
    pricePerOption : Optional Money
        -- ^ The amount of premium to be paid expressed as a
        --   function of the number of options.
    percentageOfNotional : Optional Decimal
        -- ^ The amount of premium to be paid expressed as a
        --   percentage of the notional value of the transaction.
        --   A percentage of 5% would be expressed as 0.05.
      deriving (Eq, Ord, Show)

-- | A type for defining a time with respect to a
--   geographic location, for example 11:00 Phoenix, USA.
--   This type should be used where a wider range of
--   locations than those available as business centres is
--   required.
data PrevailingTime = PrevailingTime with
    hourMinuteTime : HourMinuteTime
        -- ^ A time specified in hh:mm:ss format where the second
        --   component must be '00', e.g. 11am would be
        --   represented as 11:00:00.
    location : TimezoneLocation
        -- ^ The geographic location to which the hourMinuteTime
        --   applies. The time takes into account any current day
        --   light saving changes or other adjustments i.e. it is
        --   the prevaling time at the location.
      deriving (Eq, Ord, Show)

-- | A type describing the strike price.
data Price = Price with
    commission : Optional Commission
        -- ^ This optional component specifies the commission to
        --   be charged for executing the hedge transactions.
    choice_ : Price_choice
    cleanNetPrice : Optional Decimal
        -- ^ The net price excluding accrued interest. The "Dirty
        --   Price" for bonds is put in the "netPrice" element,
        --   which includes accrued interest. Thus netPrice -
        --   cleanNetPrice = accruedInterest. The currency and
        --   price expression for this field are the same as those
        --   for the (dirty) netPrice.
    quotationCharacteristics : Optional QuotationCharacteristics
        -- ^ Allows information about how the price was quoted to
        --   be provided.
      deriving (Eq, Ord, Show)

-- | The mode of expression of a price.
data PriceExpressionEnum
    = PriceExpressionEnum_AbsoluteTerms ()
      -- ^ The price is expressed as an absolute amount.>
    | PriceExpressionEnum_PercentageOfNotional ()
      -- ^ The price is expressed in percentage of the notional
      --   amount.
    deriving (Eq, Ord, Show)

-- | A structure describing the criteria for price
--   materiality.
data PriceMateriality = PriceMateriality with
    primaryRateSource : SettlementRateOption
    secondaryRateSource : [SettlementRateOption]
    percentage : PositiveDecimal
      deriving (Eq, Ord, Show)

-- | The units in which a price is quoted.
data PriceQuoteUnits = PriceQuoteUnits with
    priceQuoteUnitsScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A record type used inside Price
data Price_EquityPrice_model = Price_EquityPrice_model with
    grossPrice : Optional ActualPrice
        -- ^ Specifies the price of the underlyer, before
        --   commissions.
    netPrice : ActualPrice
        -- ^ Specifies the price of the underlyer, net of
        --   commissions.
    accruedInterestPrice : Optional Decimal
        -- ^ Specifies the accrued interest that are part of the
        --   dirty price in the case of a fixed income security or
        --   a convertible bond. Expressed in percentage of the
        --   notional.
    fxConversion : Optional FxConversion
        -- ^ Specifies the currency conversion rate that applies
        --   to an amount. This rate can either be defined
        --   elsewhere in the document (case of a quanto swap), or
        --   explicitly described through this component.
      deriving (Eq, Ord, Show)

-- | A variant type used inside Price
data Price_choice
    = Price_choice_Items1 Price_items
    | Price_choice_AmountRelativeTo AmountReference
      -- ^ The href attribute value will be a pointer style
      --   reference to the element or component elsewhere in
      --   the document where the anchor amount is defined.
    | Price_choice_Items2 Price_items_2
    deriving (Eq, Ord, Show)

-- | A record type used inside Price
data Price_items = Price_items with
    determinationMethod : DeterminationMethod
        -- ^ Specifies the method according to which an amount or
        --   a date is determined.
    equityPrice_model : Optional Price_EquityPrice_model
      deriving (Eq, Ord, Show)

-- | A record type used inside Price
data Price_items_2 = Price_items_2 with
    grossPrice : Optional ActualPrice
        -- ^ Specifies the price of the underlyer, before
        --   commissions.
    netPrice : ActualPrice
        -- ^ Specifies the price of the underlyer, net of
        --   commissions.
    accruedInterestPrice : Optional Decimal
        -- ^ Specifies the accrued interest that are part of the
        --   dirty price in the case of a fixed income security or
        --   a convertible bond. Expressed in percentage of the
        --   notional.
    fxConversion : Optional FxConversion
        -- ^ Specifies the currency conversion rate that applies
        --   to an amount. This rate can either be defined
        --   elsewhere in the document (case of a quanto swap), or
        --   explicitly described through this component.
      deriving (Eq, Ord, Show)

-- | The reason a trade's price does not reflect the
--   current market price.
data PricingContext = PricingContext with
    pricingContextScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A scheme identifying the types of pricing model used
--   to evaluate the price of an asset. Examples include
--   Intrinsic, ClosedForm, MonteCarlo, BackwardInduction.
data PricingModel = PricingModel with
    pricingModelScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | An abstract pricing structure base type. Used as a
--   base for structures such as yield curves and
--   volatility matrices.
data PricingStructure = PricingStructure ()
    deriving (Eq, Ord, Show)

-- | Reference to a pricing structure or any derived
--   components (i.e. yield curve).
data PricingStructureReference = PricingStructureReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | A type defining which principal exchanges occur for
--   the stream.
data PrincipalExchanges = PrincipalExchanges with
    id_ : Optional Text
    initialExchange : Bool
        -- ^ A true/false flag to indicate whether there is an
        --   initial exchange of principal on the effective date.
    finalExchange : Bool
        -- ^ A true/false flag to indicate whether there is a
        --   final exchange of principal on the termination date.
    intermediateExchange : Bool
        -- ^ A true/false flag to indicate whether there are
        --   intermediate or interim exchanges of principal during
        --   the term of the swap.
      deriving (Eq, Ord, Show)

-- | Provides a lexical location (i.e. a line number and
--   character for bad XML) or an XPath location (i.e.
--   place to identify the bad location for valid XML).
data ProblemLocation = ProblemLocation with
    locationType : Optional Token
        -- ^ The value of the locationType attribute defines which
        --   type of location has been given. It may take the
        --   values 'lexical' or 'xpath'.
    content : NormalizedString
      deriving (Eq, Ord, Show)

-- | The base type which all FpML products extend.
data Product
    = Product_CommoditySwaption CommoditySwaption
    | Product_CommoditySwap CommoditySwap
    | Product_CommodityPerformanceSwap CommodityPerformanceSwap
    | Product_CommodityOption CommodityOption
    | Product_CommodityForward CommodityForward
    | Product_CommodityDigitalOption CommodityDigitalOption
    | Product_CommodityBasketOption CommodityBasketOption
    | Product_Strategy Strategy
    | Product_InstrumentTradeDetails InstrumentTradeDetails
    | Product_TermDeposit TermDeposit
    | Product_FxVolatilitySwap FxPerformanceSwap
    | Product_FxVarianceSwap FxPerformanceSwap
    | Product_FxSwap FxSwap
    | Product_FxSingleLeg FxSingleLeg
    | Product_FxOption FxOption
    | Product_FxForwardVolatilityAgreement FxForwardVolatilityAgreement
    | Product_FxFlexibleForward FxFlexibleForward
    | Product_FxDigitalOption FxDigitalOption
    deriving (Eq, Ord, Show)

-- | Deprecated: A type defining a USI for the a
--   subproduct component of a strategy.
data ProductComponentIdentifier = ProductComponentIdentifier with
    premiumProductReference : Optional ProductReference
        -- ^ Indicates which product within a strategy this ID is
        --   associated with.
    issuer : IssuerId
    tradeId : TradeId
      deriving (Eq, Ord, Show)

data ProductId = ProductId with
    productIdScheme : Optional NonEmptyURI
    content : NonEmptyLongScheme
      deriving (Eq, Ord, Show)

-- | Reference to a full FpML product.
data ProductReference = ProductReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | Summary information about the product that was
--   traded. This is intended primarily for trade
--   reporting by TRs.
data ProductSummary = ProductSummary with
    finalSettlementDate : Optional Date
    settlementType : Optional SettlementTypeEnum
    seniority : Optional CreditSeniority
        -- ^ DEPRECATED. Use instead the field within credit
        --   products: indexReferenceInformation/seniority (RPTWG
        --   decision 2017-09)
    indexFactor : Optional Decimal
        -- ^ DEPRECATED. Use instead the field within credit
        --   products: indexReferenceInformation/indexFactor
        --   (RPTWG decision 2017-09)
    admissionToTrading : Optional AdmissionToTrading
      deriving (Eq, Ord, Show)

data ProductType = ProductType with
    productTypeScheme : Optional NonEmptyURI
    content : NonEmptyLongScheme
      deriving (Eq, Ord, Show)

-- | The proposed collateral allocation.
data ProposedCollateralAllocation = ProposedCollateralAllocation with
    allocationPartyReference : Optional PartyReference
        -- ^ Reference to a party.
    allocationAccountReference : Optional AccountReference
        -- ^ Reference to an account.
    choice_ : [ProposedCollateralAllocation_choice]
      deriving (Eq, Ord, Show)

-- | A variant type used inside
--   ProposedCollateralAllocation
data ProposedCollateralAllocation_choice
    = ProposedCollateralAllocation_choice_CollateralValueAllocation CollateralValueAllocation
      -- ^ Collateral allocation by value.
    deriving (Eq, Ord, Show)

data PubliclyAvailableInformation = PubliclyAvailableInformation with
    standardPublicSources : Optional Bool
        -- ^ If this element is specified and set to 'true',
        --   indicates that ISDA defined Standard Public Sources
        --   are applicable.
    publicSource : [String]
        -- ^ A public information source, e.g. a particular
        --   newspaper or electronic news service, that may
        --   publish relevant information used in the
        --   determination of whether or not a credit event has
        --   occurred. ISDA 2003 Term: Public Source.
    specifiedNumber : Optional Int
        -- ^ The minimum number of the specified public
        --   information sources that must publish information
        --   that reasonably confirms that a credit event has
        --   occurred. The market convention is two. ISDA 2003
        --   Term: Specified Number.
      deriving (Eq, Ord, Show)

-- | Specifies whether the option is a call or a put.
data PutCallEnum
    = PutCallEnum_Put ()
      -- ^ A put option gives the holder the right to sell the
      --   underlying asset by a certain date for a certain
      --   price.
    | PutCallEnum_Call ()
      -- ^ A call option gives the holder the right to buy the
      --   underlying asset by a certain date for a certain
      --   price.
    deriving (Eq, Ord, Show)

-- | A pointer tyle reference to a Quantity defined
--   elsewhere.
data QuantityReference = QuantityReference with
    href : Text
      deriving (Eq, Ord, Show)

data QuantityUnit = QuantityUnit with
    quantityUnitScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | Determines the currency rate that the seller of the
--   equity amounts will apply at each valuation date for
--   converting the respective amounts into a currency
--   that is different from the currency denomination of
--   the underlyer.
data Quanto = Quanto with
    fxRate : [FxRate]
        -- ^ Specifies a currency conversion rate.
    fxSpotRateSource : Optional FxSpotRateSource
        -- ^ Specifies the methodology (reference source and,
        --   optionally, fixing time) to be used for determining a
        --   currency conversion rate.
      deriving (Eq, Ord, Show)

-- | A type representing a set of characteristics that
--   describe a quotation.
data QuotationCharacteristics = QuotationCharacteristics with
    measureType : Optional AssetMeasureType
        -- ^ The type of the value that is measured. This could be
        --   an NPV, a cash flow, a clean price, etc.
    quoteUnits : Optional PriceQuoteUnits
        -- ^ The optional units that the measure is expressed in.
        --   If not supplied, this is assumed to be a price/value
        --   in currency units.
    side : Optional QuotationSideEnum
        -- ^ The side (bid/mid/ask) of the measure.
    currency : Optional Currency
        -- ^ The optional currency that the measure is expressed
        --   in. If not supplied, this is defaulted from the
        --   reportingCurrency in the valuationScenarioDefinition.
    currencyType : Optional ReportingCurrencyType
        -- ^ The optional currency that the measure is expressed
        --   in. If not supplied, this is defaulted from the
        --   reportingCurrency in the valuationScenarioDefinition.
    timing : Optional QuoteTiming
        -- ^ When during a day the quote is for. Typically, if
        --   this element is supplied, the QuoteLocation needs
        --   also to be supplied.
    quoteLocation_model : Optional QuotationCharacteristics_QuoteLocation_model
    informationSource : [InformationSource]
        -- ^ The information source where a published or displayed
        --   market rate will be obtained, e.g. Telerate Page
        --   3750.
    pricingModel : Optional PricingModel
        -- ^ .
    time_ : Optional Time
        -- ^ When the quote was observed or when a calculated
        --   value was generated.
    valuationDate : Optional Date
        -- ^ When the quote was computed.
    expiryTime : Optional Time
        -- ^ When does the quote cease to be valid.
    cashflowType : Optional CashflowType
        -- ^ For cash flows, the type of the cash flows. Examples
        --   include: Coupon payment, Premium Fee, Settlement Fee,
        --   Brokerage Fee, etc.
      deriving (Eq, Ord, Show)

-- | A variant type used inside QuotationCharacteristics
data QuotationCharacteristics_QuoteLocation_model
    = QuotationCharacteristics_QuoteLocation_model_BusinessCenter BusinessCenter
      -- ^ A city or other business center.
    | QuotationCharacteristics_QuoteLocation_model_ExchangeId ExchangeId
      -- ^ The exchange (e.g. stock or futures exchange) from
      --   which the quote is obtained.
    deriving (Eq, Ord, Show)

-- | The specification of the type of quotation rate to be
--   obtained from each cash settlement reference bank.
data QuotationRateTypeEnum
    = QuotationRateTypeEnum_Bid ()
      -- ^ A bid rate.
    | QuotationRateTypeEnum_Ask ()
      -- ^ An ask rate.
    | QuotationRateTypeEnum_Mid ()
      -- ^ A mid-market rate.
    | QuotationRateTypeEnum_ExercisingPartyPays ()
      -- ^ If optional early termination is applicable to a swap
      --   transaction, the rate, which may be a bid or ask
      --   rate, which would result, if seller is in-the-money,
      --   in the higher absolute value of the cash settlement
      --   amount, or, is seller is out-of-the-money, in the
      --   lower absolute value of the cash settlement amount.
    deriving (Eq, Ord, Show)

-- | The side from which perspective a value is quoted.
data QuotationSideEnum
    = QuotationSideEnum_Bid ()
      -- ^ A value "bid" by a buyer for an asset, i.e. the value
      --   a buyer is willing to pay.
    | QuotationSideEnum_Ask ()
      -- ^ A value "asked" by a seller for an asset, i.e. the
      --   value at which a seller is willing to sell.
    | QuotationSideEnum_Mid ()
      -- ^ A value midway between the bid and the ask value.
    deriving (Eq, Ord, Show)

-- | Indicates the actual quotation style of of
--   PointsUpFront or TradedSpread that was used to quote
--   this trade.
data QuotationStyleEnum
    = QuotationStyleEnum_PointsUpFront ()
      -- ^ When quotation style is "PointsUpFront", the
      --   initialPoints element of the feeLeg should be
      --   populated.
    | QuotationStyleEnum_TradedSpread ()
      -- ^ When quotation style is "TradedSpread", the
      --   marketFixedRate element of the feeLeg should be
      --   populated.
    | QuotationStyleEnum_Price ()
      -- ^ When quotation style is "Price", the marketPrice
      --   element of the feeLeg should be populated.
    deriving (Eq, Ord, Show)

-- | How an exchange rate is quoted.
data QuoteBasisEnum
    = QuoteBasisEnum_Currency1PerCurrency2 ()
      -- ^ The amount of currency1 for one unit of currency2
    | QuoteBasisEnum_Currency2PerCurrency1 ()
      -- ^ The amount of currency2 for one unit of currency1
    deriving (Eq, Ord, Show)

-- | The type of the time of the quote.
data QuoteTiming = QuoteTiming with
    quoteTimingScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type that describes the composition of a rate that
--   has been quoted or is to be quoted. This includes the
--   two currencies and the quotation relationship between
--   the two currencies and is used as a building block
--   throughout the FX specification.
data QuotedCurrencyPair = QuotedCurrencyPair with
    currency1 : Currency
        -- ^ The first currency specified when a pair of
        --   currencies is to be evaluated.
    currency2 : Currency
        -- ^ The second currency specified when a pair of
        --   currencies is to be evaluated.
    quoteBasis : QuoteBasisEnum
        -- ^ The method by which the exchange rate is quoted.
      deriving (Eq, Ord, Show)

-- | The abstract base class for all types which define
--   interest rate streams.
data Rate
    = Rate_StubFloatingRate StubFloatingRate
    | Rate_FloatingRate FloatingRate
    | Rate_FloatingRateCalculation FloatingRateCalculation
    deriving (Eq, Ord, Show)

data RateIndex = RateIndex with
    id_ : Optional Text
    instrumentId : [InstrumentId]
        -- ^ Identification of the underlying asset, using public
        --   and/or private identifiers.
    description : Optional String
        -- ^ Long name of the underlying asset.
    currency : Optional IdentifiedCurrency
        -- ^ Trading currency of the underlyer when transacted as
        --   a cash instrument.
    exchangeId : Optional ExchangeId
        -- ^ Identification of the exchange on which this asset is
        --   transacted for the purposes of calculating a
        --   contractural payoff. The term "Exchange" is assumed
        --   to have the meaning as defined in the ISDA 2002
        --   Equity Derivatives Definitions.
    clearanceSystem : Optional ClearanceSystem
        -- ^ Identification of the clearance system associated
        --   with the transaction exchange.
    definition : Optional ProductReference
        -- ^ An optional reference to a full FpML product that
        --   defines the simple product in greater detail. In case
        --   of inconsistency between the terms of the simple
        --   product and those of the detailed definition, the
        --   values in the simple product override those in the
        --   detailed definition.
    floatingRateIndex : FloatingRateIndex
    term : Period
        -- ^ Specifies the term of the simple swap, e.g. 5Y.
    paymentFrequency : Optional Period
        -- ^ Specifies the frequency at which the index pays, e.g.
        --   6M.
    dayCountFraction : Optional DayCountFraction
        -- ^ The day count basis for the index.
      deriving (Eq, Ord, Show)

-- | A type defining parameters associated with an
--   individual observation or fixing. This type forms
--   part of the cashflow representation of a stream.
data RateObservation = RateObservation with
    id_ : Optional Text
    resetDate : Optional Date
        -- ^ The reset date.
    adjustedFixingDate : Optional Date
        -- ^ The adjusted fixing date, i.e. the actual date the
        --   rate is observed. The date should already be adjusted
        --   for any applicable business day convention.
    observedRate : Optional Decimal
        -- ^ The actual observed rate before any required rate
        --   treatment is applied, e.g. before converting a rate
        --   quoted on a discount basis to an equivalent yield. An
        --   observed rate of 5% would be represented as 0.05.
    treatedRate : Optional Decimal
        -- ^ The observed rate after any required rate treatment
        --   is applied. A treated rate of 5% would be represented
        --   as 0.05.
    observationWeight : Int
        -- ^ The number of days weighting to be associated with
        --   the rate observation, i.e. the number of days such
        --   rate is in effect. This is applicable in the case of
        --   a weighted average method of calculation where more
        --   than one reset date is established for a single
        --   calculation period.
    rateReference : Optional RateReference
        -- ^ A pointer style reference to a floating rate
        --   component defined as part of a stub calculation
        --   period amount component. It is only required when it
        --   is necessary to distinguish two rate observations for
        --   the same fixing date which could occur when linear
        --   interpolation of two different rates occurs for a
        --   stub calculation period.
    forecastRate : Optional Decimal
        -- ^ The value representing the forecast rate used to
        --   calculate the forecast future value of the accrual
        --   period.A value of 1% should be represented as 0.01
    treatedForecastRate : Optional Decimal
        -- ^ The value representing the forecast rate after
        --   applying rate treatment rules. A value of 1% should
        --   be represented as 0.01
      deriving (Eq, Ord, Show)

-- | Reference to any rate (floating, inflation) derived
--   from the abstract Rate component.
data RateReference = RateReference with
    href : Text
      deriving (Eq, Ord, Show)

data RateSourcePage = RateSourcePage with
    rateSourcePageScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The specification of methods for converting rates
--   from one basis to another.
data RateTreatmentEnum
    = RateTreatmentEnum_BondEquivalentYield ()
      -- ^ Bond Equivalent Yield. Per Annex to the 2000 ISDA
      --   Definitions (June 2000 Version), Section 7.3. Certain
      --   General Definitions Relating to Floating Rate
      --   Options, paragraph (g).
    | RateTreatmentEnum_MoneyMarketYield ()
      -- ^ Money Market Yield. Per Annex to the 2000 ISDA
      --   Definitions (June 2000 Version), Section 7.3. Certain
      --   General Definitions Relating to Floating Rate
      --   Options, paragraph (h).
    deriving (Eq, Ord, Show)

-- | The contract specifies whether which price must
--   satisfy the boundary condition.
data RealisedVarianceMethodEnum
    = RealisedVarianceMethodEnum_Previous ()
      -- ^ For a return on day T, the observed price on T-1 must
      --   be in range.
    | RealisedVarianceMethodEnum_Last ()
      -- ^ For a return on day T, the observed price on T must
      --   be in range.
    | RealisedVarianceMethodEnum_Both ()
      -- ^ For a return on day T, the observed prices on both T
      --   and T-1 must be in range
    deriving (Eq, Ord, Show)

-- | A type defining a content model for describing the
--   nature and possible location of a error within a
--   previous message.
data Reason = Reason with
    reasonCode : ReasonCode
        -- ^ A machine interpretable error code.
    location : Optional ProblemLocation
        -- ^ A value indicating the location of the problem within
        --   the subject message.
    description : Optional String
        -- ^ Plain English text describing the associated error
        --   condition
    validationRuleId : Optional Validation
        -- ^ A reference identifying a rule within a validation
        --   scheme
    additionalData : [AdditionalData]
        -- ^ Any string of additional data that may help the
        --   message processor, for example in a rejection message
        --   this might contain a code value or the text of any
        --   one of the messages (within a CDATA section).
      deriving (Eq, Ord, Show)

-- | Defines a list of machine interpretable error codes.
data ReasonCode = ReasonCode with
    reasonCodeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The abstract base class for all types which define
--   intra-document pointers.
data Reference
    = Reference_AssetReference AssetReference
    | Reference_AnyAssetReference AnyAssetReference
    | Reference_StrikePriceUnderlyingReference StrikePriceUnderlyingReference
    | Reference_StrikePriceBasketReference StrikePriceBasketReference
    | Reference_SettlementPeriodsReference SettlementPeriodsReference
    | Reference_QuantityReference QuantityReference
    | Reference_LagReference LagReference
    | Reference_CommodityNotionalAmountReference CommodityNotionalAmountReference
    | Reference_CalculationPeriodsScheduleReference CalculationPeriodsScheduleReference
    | Reference_CalculationPeriodsReference CalculationPeriodsReference
    | Reference_CalculationPeriodsDatesReference CalculationPeriodsDatesReference
    | Reference_CreditEventsReference CreditEventsReference
    | Reference_SpreadScheduleReference SpreadScheduleReference
    | Reference_ScheduleReference ScheduleReference
    | Reference_ReturnSwapNotionalAmountReference ReturnSwapNotionalAmountReference
    | Reference_ProductReference ProductReference
    | Reference_PricingStructureReference PricingStructureReference
    | Reference_PaymentReference PaymentReference
    | Reference_PartyTradeIdentifierReference PartyTradeIdentifierReference
    | Reference_PersonReference PersonReference
    | Reference_PartyReference PartyReference
    | Reference_NumberOfUnitsReference NumberOfUnitsReference
    | Reference_NumberOfOptionsReference NumberOfOptionsReference
    | Reference_NotionalReference NotionalReference
    | Reference_NotionalAmountReference NotionalAmountReference
    | Reference_LegalEntityReference LegalEntityReference
    | Reference_IdentifiedCurrencyReference IdentifiedCurrencyReference
    | Reference_DeterminationMethodReference DeterminationMethodReference
    | Reference_DateReference DateReference
    | Reference_BusinessUnitReference BusinessUnitReference
    | Reference_BusinessDayAdjustmentsReference BusinessDayAdjustmentsReference
    | Reference_BusinessCentersReference BusinessCentersReference
    | Reference_AmountReference AmountReference
    | Reference_AccountReference AccountReference
    deriving (Eq, Ord, Show)

-- | Specifies the reference amount using a scheme.
data ReferenceAmount = ReferenceAmount with
    referenceAmountScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type to describe an institution (party) identified
--   by means of a coding scheme and an optional name.
data ReferenceBank = ReferenceBank with
    referenceBankId : ReferenceBankId
        -- ^ An institution (party) identifier, e.g. a bank
        --   identifier code (BIC).
    referenceBankName : Optional String
        -- ^ The name of the institution (party). A free format
        --   string. FpML does not define usage rules for the
        --   element.
      deriving (Eq, Ord, Show)

data ReferenceBankId = ReferenceBankId with
    referenceBankIdScheme : Optional NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

data ReferenceLevel = ReferenceLevel with
    amount : Decimal
    referenceLevelUnit : ReferenceLevelUnit
      deriving (Eq, Ord, Show)

-- | CPD Reference Level: millimeters or inches of daily
--   precipitation HDD Reference Level: degree-days CDD
--   Reference Level: degree-days.
data ReferenceLevelUnit = ReferenceLevelUnit with
    weatherIndexReferenceLevelScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A code that describes the world region of a
--   counterparty. For example, NorthAmerica, Europe,
--   Asia.
data Region = Region with
    regionScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | An ID assigned by a regulator to an organization
--   registered with it. (NOTE: should this just by
--   represented by an alternate party ID?)
data RegulatorId = RegulatorId with
    regulatorIdScheme : Optional NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

data RelatedBusinessUnit = RelatedBusinessUnit with
    businessUnitReference : BusinessUnitReference
        -- ^ The unit that is related to this.
    role : BusinessUnitRole
        -- ^ The category of the relationship. The related unit
        --   performs the role specified in this field for the
        --   base party. For example, if the role is "Trader", the
        --   related unit acts acts or acted as the base party's
        --   trading unit.
      deriving (Eq, Ord, Show)

data RelatedParty = RelatedParty with
    partyReference : PartyReference
        -- ^ Reference to a party.
    accountReference : Optional AccountReference
        -- ^ Reference to an account.
    role : PartyRole
        -- ^ The category of the relationship. The related party
        --   performs the role specified in this field for the
        --   base party. For example, if the role is "Guarantor",
        --   the related party acts as a guarantor for the base
        --   party.
    type_ : Optional PartyRoleType
        -- ^ Additional definition refining the type of
        --   relationship. For example, if the "role" is
        --   Guarantor, this element may be used to specify
        --   whether all positions are guaranteed, or only a
        --   subset of them.
      deriving (Eq, Ord, Show)

data RelatedPerson = RelatedPerson with
    personReference : PersonReference
        -- ^ The individual person that is related to this.
    role : PersonRole
        -- ^ The category of the relationship. The related
        --   individual performs the role specified in this field
        --   for the base party. For example, if the role is
        --   "Trader", the related person acts acts or acted as
        --   the base party's trader.
      deriving (Eq, Ord, Show)

-- | A type defining a date (referred to as the derived
--   date) as a relative offset from another date
--   (referred to as the anchor date). If the anchor date
--   is itself an adjustable date then the offset is
--   assumed to be calculated from the adjusted anchor
--   date. A number of different scenarios can be
--   supported, namely; 1) the derived date may simply be
--   a number of calendar periods (days, weeks, months or
--   years) preceding or following the anchor date; 2) the
--   unadjusted derived date may be a number of calendar
--   periods (days, weeks, months or years) preceding or
--   following the anchor date with the resulting
--   unadjusted derived date subject to adjustment in
--   accordance with a specified business day convention,
--   i.e. the derived date must fall on a good business
--   day; 3) the derived date may be a number of business
--   days preceding or following the anchor date. Note
--   that the businessDayConvention specifies any required
--   adjustment to the unadjusted derived date. A negative
--   or positive value in the periodMultiplier indicates
--   whether the unadjusted derived precedes or follows
--   the anchor date. The businessDayConvention should
--   contain a value NONE if the day type element contains
--   a value of Business (since specifying a negative or
--   positive business days offset would already guarantee
--   that the derived date would fall on a good business
--   day in the specified business centers).
data RelativeDateOffset = RelativeDateOffset with
    id_ : Optional Text
    periodMultiplier : Int
        -- ^ A time period multiplier, e.g. 1, 2 or 3 etc. A
        --   negative value can be used when specifying an offset
        --   relative to another date, e.g. -2 days.
    period : PeriodEnum
        -- ^ A time period, e.g. a day, week, month or year of the
        --   stream. If the periodMultiplier value is 0 (zero)
        --   then period must contain the value D (day).
    dayType : Optional DayTypeEnum
        -- ^ In the case of an offset specified as a number of
        --   days, this element defines whether consideration is
        --   given as to whether a day is a good business day or
        --   not. If a day type of business days is specified then
        --   non-business days are ignored when calculating the
        --   offset. The financial business centers to use for
        --   determination of business days are implied by the
        --   context in which this element is used. This element
        --   must only be included when the offset is specified as
        --   a number of days. If the offset is zero days then the
        --   dayType element should not be included.
    businessDayConvention : BusinessDayConventionEnum
        -- ^ The convention for adjusting a date if it would
        --   otherwise fall on a day that is not a business day.
    businessCentersOrReference_model : Optional RelativeDateOffset_BusinessCentersOrReference_model
    dateRelativeTo : DateReference
        -- ^ Specifies the anchor as an href attribute. The href
        --   attribute value is a pointer style reference to the
        --   element or component elsewhere in the document where
        --   the anchor date is defined.
    adjustedDate : Optional IdentifiedDate
        -- ^ The date once the adjustment has been performed.
        --   (Note that this date may change if the business
        --   center holidays change).
      deriving (Eq, Ord, Show)

-- | A variant type used inside RelativeDateOffset
data RelativeDateOffset_BusinessCentersOrReference_model
    = RelativeDateOffset_BusinessCentersOrReference_model_BusinessCentersReference BusinessCentersReference
      -- ^ A pointer style reference to a set of financial
      --   business centers defined elsewhere in the document.
      --   This set of business centers is used to determine
      --   whether a particular day is a business day or not.
    | RelativeDateOffset_BusinessCentersOrReference_model_BusinessCenters BusinessCenters
    deriving (Eq, Ord, Show)

-- | A type describing a date when this date is defined in
--   reference to another date through one or several date
--   offsets.
data RelativeDateSequence = RelativeDateSequence with
    dateRelativeTo : DateReference
        -- ^ Specifies the anchor as an href attribute. The href
        --   attribute value is a pointer style reference to the
        --   element or component elsewhere in the document where
        --   the anchor date is defined.
    dateOffset : [DateOffset]
    businessCentersOrReference_model : Optional RelativeDateSequence_BusinessCentersOrReference_model
      deriving (Eq, Ord, Show)

-- | A variant type used inside RelativeDateSequence
data RelativeDateSequence_BusinessCentersOrReference_model
    = RelativeDateSequence_BusinessCentersOrReference_model_BusinessCentersReference BusinessCentersReference
      -- ^ A pointer style reference to a set of financial
      --   business centers defined elsewhere in the document.
      --   This set of business centers is used to determine
      --   whether a particular day is a business day or not.
    | RelativeDateSequence_BusinessCentersOrReference_model_BusinessCenters BusinessCenters
    deriving (Eq, Ord, Show)

-- | A type describing a set of dates defined as relative
--   to another set of dates.
data RelativeDates = RelativeDates with
    id_ : Optional Text
    periodMultiplier : Int
        -- ^ A time period multiplier, e.g. 1, 2 or 3 etc. A
        --   negative value can be used when specifying an offset
        --   relative to another date, e.g. -2 days.
    period : PeriodEnum
        -- ^ A time period, e.g. a day, week, month or year of the
        --   stream. If the periodMultiplier value is 0 (zero)
        --   then period must contain the value D (day).
    dayType : Optional DayTypeEnum
        -- ^ In the case of an offset specified as a number of
        --   days, this element defines whether consideration is
        --   given as to whether a day is a good business day or
        --   not. If a day type of business days is specified then
        --   non-business days are ignored when calculating the
        --   offset. The financial business centers to use for
        --   determination of business days are implied by the
        --   context in which this element is used. This element
        --   must only be included when the offset is specified as
        --   a number of days. If the offset is zero days then the
        --   dayType element should not be included.
    businessDayConvention : BusinessDayConventionEnum
        -- ^ The convention for adjusting a date if it would
        --   otherwise fall on a day that is not a business day.
    businessCentersOrReference_model : Optional RelativeDates_BusinessCentersOrReference_model
    dateRelativeTo : DateReference
        -- ^ Specifies the anchor as an href attribute. The href
        --   attribute value is a pointer style reference to the
        --   element or component elsewhere in the document where
        --   the anchor date is defined.
    adjustedDate : Optional IdentifiedDate
        -- ^ The date once the adjustment has been performed.
        --   (Note that this date may change if the business
        --   center holidays change).
    periodSkip : Optional Int
        -- ^ The number of periods in the referenced date schedule
        --   that are between each date in the relative date
        --   schedule. Thus a skip of 2 would mean that dates are
        --   relative to every second date in the referenced
        --   schedule. If present this should have a value greater
        --   than 1.
    scheduleBounds : Optional DateRange
        -- ^ The first and last dates of a schedule. This can be
        --   used to restrict the range of values in a reference
        --   series of dates.
      deriving (Eq, Ord, Show)

-- | A variant type used inside RelativeDates
data RelativeDates_BusinessCentersOrReference_model
    = RelativeDates_BusinessCentersOrReference_model_BusinessCentersReference BusinessCentersReference
      -- ^ A pointer style reference to a set of financial
      --   business centers defined elsewhere in the document.
      --   This set of business centers is used to determine
      --   whether a particular day is a business day or not.
    | RelativeDates_BusinessCentersOrReference_model_BusinessCenters BusinessCenters
    deriving (Eq, Ord, Show)

-- | A duration code for a Repo (or Securities Lending)
--   transaction. There are many business and market rules
--   that are derived from the duration of the
--   transaction.
data RepoDurationEnum
    = RepoDurationEnum_Overnight ()
      -- ^ Indicates that a contract is classified as overnight,
      --   meaning that there is one business day difference
      --   between the start and end date of the contract.
      --   Business rule: When the repo is overnight, the number
      --   of business days between the spot and forward value
      --   dates must be one. Forward leg must be specified.
    | RepoDurationEnum_Term ()
      -- ^ Indicates that a contract is a regular term contract,
      --   with a start date and an end date. Business rule:
      --   When the repo is 'Term', both spot and forward legs
      --   must be specified.
    deriving (Eq, Ord, Show)

-- | A type that can be used to hold an identifier for a
--   report instance.
data ReportId = ReportId with
    reportIdScheme : Optional NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

-- | A type that allows the specific report and section to
--   be identified.
data ReportSectionIdentification = ReportSectionIdentification with
    reportId : Optional ReportId
        -- ^ An identifier for the specific instance of this
        --   report.
    sectionNumber : Optional Int
        -- ^ A strictly ascending sequential (gapless) numeric
        --   value that can be used to identify the section of a
        --   report.
      deriving (Eq, Ord, Show)

-- | How a Boolean value is to be reported for this
--   regulator. Typically "true" or "false", but for ESMA
--   "X" is also allowed, to indicate not supplied.
data ReportingBoolean = ReportingBoolean with
    reportingBooleanScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A scheme identifying the type of currency that was
--   used to report the value of an asset. For example,
--   this could contain values like SettlementCurrency,
--   QuoteCurrency, UnitCurrency, etc.
data ReportingCurrencyType = ReportingCurrencyType with
    reportingCurrencyTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type containing a code representing the level at
--   which this is reported (e.g. Trade or Position)
data ReportingLevel = ReportingLevel with
    reportingLevelScheme : Optional NonEmptyURI
    id_ : Optional Text
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A value that explains the reason or purpose that
--   information is being reported. Examples might include
--   RealTimePublic reporting, PrimaryEconomicTerms
--   reporting, Confirmation reporting, or Snapshot
--   reporting.
data ReportingPurpose = ReportingPurpose with
    reportingPurposeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | Provides information about how the information in
--   this message is applicable to a regulatory reporting
--   process.
data ReportingRegime = ReportingRegime with
    choice_1 : ReportingRegime_choice
    reportingRole : Optional ReportingRole
        -- ^ Identifies the role of this party in reporting this
        --   trade for this regulator; roles could include
        --   ReportingParty and Voluntary reporting.
    reportingPurpose : [ReportingPurpose]
        -- ^ The reason this message is being sent, for example
        --   Snapshot, PET, Confirmation, RealTimePublic.
    mandatorilyClearable : Optional ReportingBoolean
        -- ^ Whether the particular trade type in question is
        --   required by this regulator to be cleared.
    sequence_ : Optional ReportingRegime_sequence
    exceedsClearingThreshold : Optional Bool
        -- ^ Indicates whether the counterparty exceeds the volume
        --   threshold above which trades are required to be
        --   cleared.
    relatedParty : [RelatedParty]
        -- ^ This may be used to identify one or more parties that
        --   perform a role within the transaction. If this is
        --   within a partyTradeInformation block, the related
        --   party performs the role with respect to the party
        --   identifie by the "partyReference" in the
        --   partyTradeInformation block.
    choice_2 : Optional ReportingRegime_choice_2
    tradePartyRelationshipType : Optional PartyRelationshipType
        -- ^ Indicates how the parties to the trade (the
        --   counterparties) are related to each other with
        --   respect to this reporting regime, e.g. Affiliated,
        --   Intragroup, etc..
    actionType : Optional ActionType
        -- ^ Reports a regulator-specific code for the action
        --   associated with this submission. Used, for example,
        --   to report the ESMA action type.
    preEnactmentTrade : Optional Bool
        -- ^ Reports that this trade was executed prior to the
        --   enactment of the relevant reporting regulation.
    notionalType : Optional NotionalReportingType
        -- ^ How the notional amount should be reported for the
        --   reporting regime. For example, for ESMA MiFIR it
        --   would be Nominal or MonetaryAmount.
    currencyPairClassification : Optional CurrencyPairClassification
        -- ^ Reports a regulator-specific code classifying the
        --   currency pair in the trade into risk categories such
        --   as Major Currencies or Emerging Markets.
    transmissionOfOrder : Optional Bool
      deriving (Eq, Ord, Show)

-- | A type that provides identification for reporting
--   regimes.
data ReportingRegimeIdentifier = ReportingRegimeIdentifier with
    choice_ : ReportingRegimeIdentifier_choice
    reportingRole : Optional ReportingRole
        -- ^ Identifies the role of this party in reporting this
        --   trade for this regulator; roles could include
        --   ReportingParty and Voluntary reporting.
    actionType : Optional ActionType
        -- ^ Reports a regulator-specific code for the action
        --   associated with this submission. Used, for example,
        --   to report the ESMA action type.
      deriving (Eq, Ord, Show)

-- | A variant type used inside ReportingRegimeIdentifier
data ReportingRegimeIdentifier_choice
    = ReportingRegimeIdentifier_choice_Items ReportingRegimeIdentifier_items
    | ReportingRegimeIdentifier_choice_SupervisorRegistration [SupervisorRegistration]
      -- ^ Identifies the specific regulator or other
      --   supervisory body for which this data is produced. For
      --   example, CFTC, SEC, UKFSA, ODRF, SFC, ESMA.
    deriving (Eq, Ord, Show)

-- | A record type used inside ReportingRegimeIdentifier
data ReportingRegimeIdentifier_items = ReportingRegimeIdentifier_items with
    name : ReportingRegimeName
        -- ^ Identifies the reporting regime under which this data
        --   is reported. For example, Dodd-Frank, MiFID,
        --   HongKongOTCDRepository, ODRF
    supervisorRegistration : [SupervisorRegistration]
        -- ^ Identifies the specific regulator or other
        --   supervisory body for which this data is produced. For
        --   example, CFTC, SEC, UKFSA, ODRF, SFC, ESMA.
      deriving (Eq, Ord, Show)

-- | An identifier of an reporting regime or format used
--   for regulatory reporting, for example DoddFrankAct,
--   MiFID, HongKongOTCDRepository, etc.
data ReportingRegimeName = ReportingRegimeName with
    reportingRegimeNameScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A variant type used inside ReportingRegime
data ReportingRegime_choice
    = ReportingRegime_choice_Items ReportingRegime_items
    | ReportingRegime_choice_SupervisorRegistration [SupervisorRegistration]
      -- ^ Identifies the specific regulator or other
      --   supervisory body for which this data is produced. For
      --   example, CFTC, SEC, UKFSA, ODRF, SFC, ESMA.
    deriving (Eq, Ord, Show)

-- | A variant type used inside ReportingRegime
data ReportingRegime_choice_2
    = ReportingRegime_choice_2_EntityClassification EntityClassification
      -- ^ Indicates the category or classification or business
      --   role of the organization referenced by the
      --   partyTradeInformation with respect to this reporting
      --   regime, for example Financial, NonFinancial etc.
    | ReportingRegime_choice_2_PartyEntityClassification [PartyEntityClassification]
      -- ^ Indicates the category or classification or business
      --   role of a trade party with respect to this reporting
      --   regime, for example Financial, NonFinancial, Dealer,
      --   Non-Dealer, LocalParty, etc.
    deriving (Eq, Ord, Show)

-- | A record type used inside ReportingRegime
data ReportingRegime_items = ReportingRegime_items with
    name : ReportingRegimeName
        -- ^ Identifies the reporting regime under which this data
        --   is reported. For example, Dodd-Frank, MiFID,
        --   HongKongOTCDRepository, ODRF
    supervisorRegistration : [SupervisorRegistration]
        -- ^ Identifies the specific regulator or other
        --   supervisory body for which this data is produced. For
        --   example, CFTC, SEC, UKFSA, ODRF, SFC, ESMA.
      deriving (Eq, Ord, Show)

-- | A record type used inside ReportingRegime
data ReportingRegime_sequence = ReportingRegime_sequence with
    mandatoryFacilityExecution : Bool
        -- ^ Whether the particular product must be executed on a
        --   SEF or DCM. See to Dodd-Frank section 723(a)(8).
    mandatoryFacilityExecutionException : Optional Bool
        -- ^ Specifies whether the party invoked exception to not
        --   execute the trade on facility such as SEF and DCM
        --   even though the particular product is mandated to
        --   execute on a SEF.
    mandatoryFacilityExecutionExceptionDeclaration : Optional FacilityExecutionExceptionDeclaration
        -- ^ Provides supporting evidence when a party invoked
        --   exception to not execute the trade on facility such
        --   as SEF and DCM even though the particular product is
        --   mandated to execute on a SEF.
      deriving (Eq, Ord, Show)

-- | A type containing a code representing the role of a
--   party in a report, e.g. the originator, the
--   recipient, the counterparty, etc. This is used to
--   clarify which participant's information is being
--   reported.
data ReportingRole = ReportingRole with
    reportingRoleScheme : Optional NonEmptyURI
    id_ : Optional Text
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A message requesting that a trade be split among
--   several accounts.
data RequestAllocation = RequestAllocation with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    isCorrection : Bool
        -- ^ Indicates if this message corrects an earlier
        --   request.
    correlationAndSequence_model : Optional RequestAllocation_CorrelationAndSequence_model
    onBehalfOf_model : Optional RequestAllocation_OnBehalfOf_model
    relatedParty : [RelatedParty]
        -- ^ Identifies a related party performing a role within
        --   the transaction.
    blockTradeIdentifier : TradeIdentifier
    allocations : Allocations
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A message withdrawing a request that a trade be split
--   among several accounts.
data RequestAllocationRetracted = RequestAllocationRetracted with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    correlationAndSequence_model : Optional RequestAllocationRetracted_CorrelationAndSequence_model
    onBehalfOf_model : Optional RequestAllocationRetracted_OnBehalfOf_model
    blockTradeIdentifier : Optional TradeIdentifier
    allocations : Optional Allocations
    partiesAndAccounts_model : Optional RequestAllocationRetracted_PartiesAndAccounts_model
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestAllocationRetracted
data RequestAllocationRetracted_CorrelationAndSequence_model = RequestAllocationRetracted_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestAllocationRetracted
data RequestAllocationRetracted_OnBehalfOf_model = RequestAllocationRetracted_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestAllocationRetracted
data RequestAllocationRetracted_PartiesAndAccounts_model = RequestAllocationRetracted_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestAllocation
data RequestAllocation_CorrelationAndSequence_model = RequestAllocation_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestAllocation
data RequestAllocation_OnBehalfOf_model = RequestAllocation_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A message requesting that a trade be cleared by a
--   clearing service.
data RequestClearing = RequestClearing with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    isCorrection : Bool
        -- ^ Indicates if this message corrects an earlier
        --   request.
    correlationAndSequence_model : Optional RequestClearing_CorrelationAndSequence_model
    onBehalfOf_model : Optional RequestClearing_OnBehalfOf_model
    portfolioReference_model : Optional RequestClearing_PortfolioReference_model
    choice_ : RequestClearing_choice
    eventValuation_model : Optional RequestClearing_EventValuation_model
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A message withdrawing a request that a trade be
--   cleared by a clearing service.
data RequestClearingRetracted = RequestClearingRetracted with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    correlationAndSequence_model : Optional RequestClearingRetracted_CorrelationAndSequence_model
    onBehalfOf_model : Optional RequestClearingRetracted_OnBehalfOf_model
    choice_ : Optional RequestClearingRetracted_choice
    partiesAndAccounts_model : Optional RequestClearingRetracted_PartiesAndAccounts_model
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestClearingRetracted
data RequestClearingRetracted_CorrelationAndSequence_model = RequestClearingRetracted_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestClearingRetracted
data RequestClearingRetracted_OnBehalfOf_model = RequestClearingRetracted_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestClearingRetracted
data RequestClearingRetracted_PartiesAndAccounts_model = RequestClearingRetracted_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A variant type used inside RequestClearingRetracted
data RequestClearingRetracted_choice
    = RequestClearingRetracted_choice_TradePackage TradePackage
    | RequestClearingRetracted_choice_Items RequestClearingRetracted_items
    | RequestClearingRetracted_choice_AdditionalEvent AdditionalEvent
      -- ^ The additionalEvent element is an
      --   extension/substitution point to customize FpML and
      --   add additional events.
    | RequestClearingRetracted_choice_DeClear DeClear
      -- ^ A structure describing a declear event. The deClear
      --   event allows a firm to request that a trade be
      --   removed from clearing, or a clearing service to
      --   request consent for this, or to report that it has
      --   been done.
    deriving (Eq, Ord, Show)

-- | A record type used inside RequestClearingRetracted
data RequestClearingRetracted_items = RequestClearingRetracted_items with
    originatingEvent : Optional OriginatingEvent
    trade : Trade
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestClearing
data RequestClearing_CorrelationAndSequence_model = RequestClearing_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestClearing
data RequestClearing_EventValuation_model = RequestClearing_EventValuation_model with
    quote : [BasicQuotation]
        -- ^ Pricing information for the trade.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestClearing
data RequestClearing_OnBehalfOf_model = RequestClearing_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestClearing
data RequestClearing_PortfolioReference_model = RequestClearing_PortfolioReference_model with
    portfolioReference : PortfolioReference
      deriving (Eq, Ord, Show)

-- | A variant type used inside RequestClearing
data RequestClearing_choice
    = RequestClearing_choice_TradePackage TradePackage
    | RequestClearing_choice_Items RequestClearing_items
    | RequestClearing_choice_AdditionalEvent AdditionalEvent
      -- ^ The additionalEvent element is an
      --   extension/substitution point to customize FpML and
      --   add additional events.
    | RequestClearing_choice_DeClear DeClear
      -- ^ A structure describing a declear event. The deClear
      --   event allows a firm to request that a trade be
      --   removed from clearing, or a clearing service to
      --   request consent for this, or to report that it has
      --   been done.
    deriving (Eq, Ord, Show)

-- | A record type used inside RequestClearing
data RequestClearing_items = RequestClearing_items with
    originatingEvent : Optional OriginatingEvent
    trade : Trade
      deriving (Eq, Ord, Show)

data RequestCollateralAllocation = RequestCollateralAllocation with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    isCorrection : Bool
        -- ^ Indicates if this message corrects an earlier
        --   request.
    correlationAndSequence_model : Optional RequestCollateralAllocation_CorrelationAndSequence_model
    onBehalfOf_model : Optional RequestCollateralAllocation_OnBehalfOf_model
    serviceName : Optional NormalizedString
        -- ^ The name of the service to which the message applies
    requestedAction : Optional RequestedCollateralAllocationAction
        -- ^ The type of change requested for the collateral
        --   allocation.
    collateralGiverPartyReference : PartyReference
        -- ^ The party paying the margin / issuing the allocation
        --   request.
    collateralAllocation : [ProposedCollateralAllocation]
        -- ^ Allocation details
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestCollateralAllocation
data RequestCollateralAllocation_CorrelationAndSequence_model = RequestCollateralAllocation_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestCollateralAllocation
data RequestCollateralAllocation_OnBehalfOf_model = RequestCollateralAllocation_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A message type defining the start of the confirmation
--   process. The message may be used to request the
--   confirmation of a new trade or any other event
--   supported by FpML such as novation, terminations,
--   amendments, etc.
data RequestConfirmation = RequestConfirmation with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    isCorrection : Bool
        -- ^ Indicates if this message corrects an earlier
        --   request.
    correlationAndSequence_model : Optional RequestConfirmation_CorrelationAndSequence_model
    onBehalfOf_model : Optional RequestConfirmation_OnBehalfOf_model
    choice_ : RequestConfirmation_choice
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestConfirmation
data RequestConfirmation_CorrelationAndSequence_model = RequestConfirmation_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestConfirmation
data RequestConfirmation_OnBehalfOf_model = RequestConfirmation_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A variant type used inside RequestConfirmation
data RequestConfirmation_choice
    = RequestConfirmation_choice_TradePackage TradePackage
    | RequestConfirmation_choice_Items1 RequestConfirmation_items
    | RequestConfirmation_choice_Amendment TradeAmendmentContent
    | RequestConfirmation_choice_Increase TradeNotionalChange
    | RequestConfirmation_choice_Items2 RequestConfirmation_items_2
    | RequestConfirmation_choice_Novation TradeNovationContent
    | RequestConfirmation_choice_Withdrawal Withdrawal
    | RequestConfirmation_choice_AdditionalEvent AdditionalEvent
      -- ^ The additionalEvent element is an
      --   extension/substitution point to customize FpML and
      --   add additional events.
    | RequestConfirmation_choice_OptionExercise OptionExercise
      -- ^ A structure describing an option exercise event. The
      --   optionExercise event supports partial exercise
      --   (specify the number of options or amount to
      --   exercise), full exercise (use fullExercise flag), as
      --   well as the option to request options not to be
      --   exercised.
    deriving (Eq, Ord, Show)

-- | A record type used inside RequestConfirmation
data RequestConfirmation_items = RequestConfirmation_items with
    originatingEvent : Optional OriginatingEvent
    trade : Trade
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestConfirmation
data RequestConfirmation_items_2 = RequestConfirmation_items_2 with
    terminatingEvent : Optional TerminatingEvent
        -- ^ This may be used to describe why a trade was
        --   terminated.
    termination : TradeNotionalChange
      deriving (Eq, Ord, Show)

-- | A message requesting that the sender be authorized by
--   the recipient to peform an action.
data RequestConsent = RequestConsent with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    isCorrection : Bool
        -- ^ Indicates if this message corrects an earlier
        --   request.
    correlationAndSequence_model : Optional RequestConsent_CorrelationAndSequence_model
    onBehalfOf_model : Optional RequestConsent_OnBehalfOf_model
    requestedAction : Optional RequestedAction
        -- ^ The reason the consent was requested.
    type_ : Optional ApprovalType
        -- ^ The type of approval (e.g. "pre-clearing credit").
    approver : Optional PersonId
        -- ^ The full name or identifiying ID of the relevant
        --   approver.
    approvingPartyReference : Optional PartyReference
        -- ^ A pointer style reference to a party defined
        --   elsewhere in the document. The party referenced needs
        --   to approve the specified item (e.g. trade or
        --   allocation).
    portfolioReference_model : Optional RequestConsent_PortfolioReference_model
    compression_model : Optional RequestConsent_Compression_model
    choice_ : RequestConsent_choice
    eventValuation_model : Optional RequestConsent_EventValuation_model
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A message withdrawing a request that the sender be
--   authorized by the recipient to peform an action.
data RequestConsentRetracted = RequestConsentRetracted with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    correlationAndSequence_model : Optional RequestConsentRetracted_CorrelationAndSequence_model
    onBehalfOf_model : Optional RequestConsentRetracted_OnBehalfOf_model
    type_ : Optional ApprovalType
        -- ^ The type of approval (e.g. "pre-clearing credit").
    approver : Optional PersonId
        -- ^ The full name or identifiying ID of the relevant
        --   approver.
    approvingPartyReference : Optional PartyReference
        -- ^ A pointer style reference to a party defined
        --   elsewhere in the document. The party referenced needs
        --   to approve the specified item (e.g. trade or
        --   allocation).
    choice_ : Optional RequestConsentRetracted_choice
    partiesAndAccounts_model : Optional RequestConsentRetracted_PartiesAndAccounts_model
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestConsentRetracted
data RequestConsentRetracted_CorrelationAndSequence_model = RequestConsentRetracted_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestConsentRetracted
data RequestConsentRetracted_OnBehalfOf_model = RequestConsentRetracted_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestConsentRetracted
data RequestConsentRetracted_PartiesAndAccounts_model = RequestConsentRetracted_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A variant type used inside RequestConsentRetracted
data RequestConsentRetracted_choice
    = RequestConsentRetracted_choice_TradePackage TradePackage
    | RequestConsentRetracted_choice_Items1 RequestConsentRetracted_items
    | RequestConsentRetracted_choice_Amendment TradeAmendmentContent
    | RequestConsentRetracted_choice_Increase TradeNotionalChange
    | RequestConsentRetracted_choice_Items2 RequestConsentRetracted_items_2
    | RequestConsentRetracted_choice_Novation TradeNovationContent
    | RequestConsentRetracted_choice_Withdrawal Withdrawal
    | RequestConsentRetracted_choice_AdditionalEvent AdditionalEvent
      -- ^ The additionalEvent element is an
      --   extension/substitution point to customize FpML and
      --   add additional events.
    | RequestConsentRetracted_choice_DeClear DeClear
      -- ^ A structure describing a declear event. The deClear
      --   event allows a firm to request that a trade be
      --   removed from clearing, or a clearing service to
      --   request consent for this, or to report that it has
      --   been done.
    deriving (Eq, Ord, Show)

-- | A record type used inside RequestConsentRetracted
data RequestConsentRetracted_items = RequestConsentRetracted_items with
    originatingEvent : Optional OriginatingEvent
    trade : Trade
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestConsentRetracted
data RequestConsentRetracted_items_2 = RequestConsentRetracted_items_2 with
    terminatingEvent : Optional TerminatingEvent
        -- ^ This may be used to describe why a trade was
        --   terminated.
    termination : TradeNotionalChange
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestConsent
data RequestConsent_Compression_model = RequestConsent_Compression_model with
    compressionActivity : CompressionActivity
        -- ^ Compression information for the trade.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestConsent
data RequestConsent_CorrelationAndSequence_model = RequestConsent_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestConsent
data RequestConsent_EventValuation_model = RequestConsent_EventValuation_model with
    quote : [BasicQuotation]
        -- ^ Pricing information for the trade.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestConsent
data RequestConsent_OnBehalfOf_model = RequestConsent_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestConsent
data RequestConsent_PortfolioReference_model = RequestConsent_PortfolioReference_model with
    portfolioReference : PortfolioReference
      deriving (Eq, Ord, Show)

-- | A variant type used inside RequestConsent
data RequestConsent_choice
    = RequestConsent_choice_TradePackage TradePackage
    | RequestConsent_choice_Items1 RequestConsent_items
    | RequestConsent_choice_Amendment TradeAmendmentContent
    | RequestConsent_choice_Increase TradeNotionalChange
    | RequestConsent_choice_Items2 RequestConsent_items_2
    | RequestConsent_choice_Novation TradeNovationContent
    | RequestConsent_choice_Withdrawal Withdrawal
    | RequestConsent_choice_AdditionalEvent AdditionalEvent
      -- ^ The additionalEvent element is an
      --   extension/substitution point to customize FpML and
      --   add additional events.
    | RequestConsent_choice_DeClear DeClear
      -- ^ A structure describing a declear event. The deClear
      --   event allows a firm to request that a trade be
      --   removed from clearing, or a clearing service to
      --   request consent for this, or to report that it has
      --   been done.
    deriving (Eq, Ord, Show)

-- | A record type used inside RequestConsent
data RequestConsent_items = RequestConsent_items with
    originatingEvent : Optional OriginatingEvent
    trade : Trade
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestConsent
data RequestConsent_items_2 = RequestConsent_items_2 with
    terminatingEvent : Optional TerminatingEvent
        -- ^ This may be used to describe why a trade was
        --   terminated.
    termination : TradeNotionalChange
      deriving (Eq, Ord, Show)

-- | A type defining the content model for a message
--   allowing one party to query the status of one event
--   (trade or post-trade event) previously sent to
--   another party.
data RequestEventStatus = RequestEventStatus with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    correlationAndSequence_model : Optional RequestEventStatus_CorrelationAndSequence_model
    onBehalfOf_model : Optional RequestEventStatus_OnBehalfOf_model
    businessProcess : Optional BusinessProcess
    eventIdentifier : EventIdentifier
    partiesAndAccounts_model : Optional RequestEventStatus_PartiesAndAccounts_model
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestEventStatus
data RequestEventStatus_CorrelationAndSequence_model = RequestEventStatus_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestEventStatus
data RequestEventStatus_OnBehalfOf_model = RequestEventStatus_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestEventStatus
data RequestEventStatus_PartiesAndAccounts_model = RequestEventStatus_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A message requesting that an order be executed.
data RequestExecution = RequestExecution with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    isCorrection : Bool
        -- ^ Indicates if this message corrects an earlier
        --   request.
    correlationAndSequence_model : Optional RequestExecution_CorrelationAndSequence_model
    onBehalfOf_model : Optional RequestExecution_OnBehalfOf_model
    choice_ : RequestExecution_choice
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A message withdrawing a request that an order be
--   executed.
data RequestExecutionRetracted = RequestExecutionRetracted with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    correlationAndSequence_model : Optional RequestExecutionRetracted_CorrelationAndSequence_model
    onBehalfOf_model : Optional RequestExecutionRetracted_OnBehalfOf_model
    choice_ : Optional RequestExecutionRetracted_choice
    partiesAndAccounts_model : Optional RequestExecutionRetracted_PartiesAndAccounts_model
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestExecutionRetracted
data RequestExecutionRetracted_CorrelationAndSequence_model = RequestExecutionRetracted_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestExecutionRetracted
data RequestExecutionRetracted_OnBehalfOf_model = RequestExecutionRetracted_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestExecutionRetracted
data RequestExecutionRetracted_PartiesAndAccounts_model = RequestExecutionRetracted_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A variant type used inside RequestExecutionRetracted
data RequestExecutionRetracted_choice
    = RequestExecutionRetracted_choice_TradePackage TradePackage
    | RequestExecutionRetracted_choice_Items RequestExecutionRetracted_items
    | RequestExecutionRetracted_choice_AdditionalEvent AdditionalEvent
      -- ^ The additionalEvent element is an
      --   extension/substitution point to customize FpML and
      --   add additional events.
    | RequestExecutionRetracted_choice_OptionExercise OptionExercise
      -- ^ A structure describing an option exercise event. The
      --   optionExercise event supports partial exercise
      --   (specify the number of options or amount to
      --   exercise), full exercise (use fullExercise flag), as
      --   well as the option to request options not to be
      --   exercised.
    deriving (Eq, Ord, Show)

-- | A record type used inside RequestExecutionRetracted
data RequestExecutionRetracted_items = RequestExecutionRetracted_items with
    originatingEvent : Optional OriginatingEvent
    trade : Trade
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestExecution
data RequestExecution_CorrelationAndSequence_model = RequestExecution_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestExecution
data RequestExecution_OnBehalfOf_model = RequestExecution_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A variant type used inside RequestExecution
data RequestExecution_choice
    = RequestExecution_choice_TradePackage TradePackage
    | RequestExecution_choice_Items RequestExecution_items
    | RequestExecution_choice_AdditionalEvent AdditionalEvent
      -- ^ The additionalEvent element is an
      --   extension/substitution point to customize FpML and
      --   add additional events.
    | RequestExecution_choice_OptionExercise OptionExercise
      -- ^ A structure describing an option exercise event. The
      --   optionExercise event supports partial exercise
      --   (specify the number of options or amount to
      --   exercise), full exercise (use fullExercise flag), as
      --   well as the option to request options not to be
      --   exercised.
    deriving (Eq, Ord, Show)

-- | A record type used inside RequestExecution
data RequestExecution_items = RequestExecution_items with
    originatingEvent : Optional OriginatingEvent
    trade : Trade
      deriving (Eq, Ord, Show)

-- | A type defining the basic content of a message that
--   requests the receiver to perform some business
--   operation determined by the message type and its
--   content.
data RequestMessage
    = RequestMessage_NonCorrectableRequestMessage NonCorrectableRequestMessage
    | RequestMessage_TradeChangeAdviceRetracted TradeChangeAdviceRetracted
    | RequestMessage_RequestTradeReferenceInformationUpdateRetracted RequestTradeReferenceInformationUpdateRetracted
    | RequestMessage_RequestExecutionRetracted RequestExecutionRetracted
    | RequestMessage_RequestConsentRetracted RequestConsentRetracted
    | RequestMessage_RequestClearingRetracted RequestClearingRetracted
    | RequestMessage_RequestAllocationRetracted RequestAllocationRetracted
    | RequestMessage_ExecutionRetracted ExecutionRetracted
    | RequestMessage_ExecutionAdviceRetracted ExecutionAdviceRetracted
    | RequestMessage_ConfirmationRetracted ConfirmationRetracted
    | RequestMessage_VerificationStatusNotification VerificationStatusNotification
    | RequestMessage_RequestRetransmission RequestRetransmission
    | RequestMessage_RequestEventStatus RequestEventStatus
    | RequestMessage_CorrectableRequestMessage CorrectableRequestMessage
    | RequestMessage_RequestCollateralAllocation RequestCollateralAllocation
    | RequestMessage_TradeChangeAdvice TradeChangeAdvice
    | RequestMessage_RequestTradeReferenceInformationUpdate RequestTradeReferenceInformationUpdate
    | RequestMessage_RequestExecution RequestExecution
    | RequestMessage_RequestConsent RequestConsent
    | RequestMessage_RequestConfirmation RequestConfirmation
    | RequestMessage_RequestClearing RequestClearing
    | RequestMessage_RequestAllocation RequestAllocation
    | RequestMessage_MaturityNotification MaturityNotification
    | RequestMessage_ExecutionNotification ExecutionNotification
    | RequestMessage_ExecutionAdvice ExecutionAdvice
    deriving (Eq, Ord, Show)

-- | A type refining the generic message header content to
--   make it specific to request messages.
data RequestMessageHeader = RequestMessageHeader with
    messageId : MessageId
        -- ^ A unique identifier (within its coding scheme)
        --   assigned to the message by its creating party.
    sentBy : MessageAddress
        -- ^ The unique identifier (within its coding scheme) for
        --   the originator of a message instance.
    sendTo : [MessageAddress]
        -- ^ A unique identifier (within its coding scheme)
        --   indicating an intended recipent of a message.
    copyTo : [MessageAddress]
        -- ^ A unique identifier (within the specified coding
        --   scheme) giving the details of some party to whom a
        --   copy of this message will be sent for reference.
    creationTimestamp : Time
        -- ^ The date and time (on the source system) when this
        --   message instance was created.
    expiryTimestamp : Optional Time
        -- ^ The date and time (on the source system) when this
        --   message instance will be considered expired.
    implementationSpecification : Optional ImplementationSpecification
        -- ^ The version(s) of specifications that the sender
        --   asserts the message was developed for.
    partyMessageInformation : [PartyMessageInformation]
        -- ^ Additional message information that may be provided
        --   by each involved party.
      deriving (Eq, Ord, Show)

-- | A message to request that a message be retransmitted.
--   The original message will typically be a component of
--   a group of messages, such as a portfolio or a report
--   in multiple parts.
data RequestRetransmission = RequestRetransmission with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    correlationAndSequence_model : Optional RequestRetransmission_CorrelationAndSequence_model
    onBehalfOf_model : Optional RequestRetransmission_OnBehalfOf_model
    choice_ : RequestRetransmission_choice
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestRetransmission
data RequestRetransmission_CorrelationAndSequence_model = RequestRetransmission_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside RequestRetransmission
data RequestRetransmission_OnBehalfOf_model = RequestRetransmission_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A variant type used inside RequestRetransmission
data RequestRetransmission_choice
    = RequestRetransmission_choice_PortfolioReference PortfolioConstituentReference
    | RequestRetransmission_choice_ReportIdentification ReportSectionIdentification
    deriving (Eq, Ord, Show)

-- | Defines the structure for a message requesting
--   information updates to a trade. The trade reference
--   information should contain at least one trade
--   identifier that the recipient is aware of.
data RequestTradeReferenceInformationUpdate = RequestTradeReferenceInformationUpdate with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    isCorrection : Bool
        -- ^ Indicates if this message corrects an earlier
        --   request.
    correlationAndSequence_model : Optional RequestTradeReferenceInformationUpdate_CorrelationAndSequence_model
    onBehalfOf_model : Optional RequestTradeReferenceInformationUpdate_OnBehalfOf_model
    tradeReferenceInformation : TradeReferenceInformation
        -- ^ Information about a trade.
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | Defines the structure for a message retracting a
--   request to updated information about trade.
data RequestTradeReferenceInformationUpdateRetracted = RequestTradeReferenceInformationUpdateRetracted with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    correlationAndSequence_model : Optional RequestTradeReferenceInformationUpdateRetracted_CorrelationAndSequence_model
    onBehalfOf_model : Optional RequestTradeReferenceInformationUpdateRetracted_OnBehalfOf_model
    tradeReferenceInformation : TradeReferenceInformation
        -- ^ Information about a trade.
    partiesAndAccounts_model : Optional RequestTradeReferenceInformationUpdateRetracted_PartiesAndAccounts_model
      deriving (Eq, Ord, Show)

-- | A record type used inside
--   RequestTradeReferenceInformationUpdateRetracted
data RequestTradeReferenceInformationUpdateRetracted_CorrelationAndSequence_model = RequestTradeReferenceInformationUpdateRetracted_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside
--   RequestTradeReferenceInformationUpdateRetracted
data RequestTradeReferenceInformationUpdateRetracted_OnBehalfOf_model = RequestTradeReferenceInformationUpdateRetracted_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside
--   RequestTradeReferenceInformationUpdateRetracted
data RequestTradeReferenceInformationUpdateRetracted_PartiesAndAccounts_model = RequestTradeReferenceInformationUpdateRetracted_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A record type used inside
--   RequestTradeReferenceInformationUpdate
data RequestTradeReferenceInformationUpdate_CorrelationAndSequence_model = RequestTradeReferenceInformationUpdate_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside
--   RequestTradeReferenceInformationUpdate
data RequestTradeReferenceInformationUpdate_OnBehalfOf_model = RequestTradeReferenceInformationUpdate_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

data RequestedAction = RequestedAction with
    requestedActionScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type that describes whether a trade is to be
--   cleared.
data RequestedClearingAction = RequestedClearingAction with
    requestedClearingActionScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type that describes the type of collateral
--   allocation action that is requested. The purpose is
--   to allow FCMs to specify how the allocations are to
--   be processed.
data RequestedCollateralAllocationAction = RequestedCollateralAllocationAction with
    requestedCollateralAllocationActionScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type that describes what the requester would like
--   to see done to implement the withdrawal, e.g.
--   ExpungeRecords, RetainRecords.
data RequestedWithdrawalAction = RequestedWithdrawalAction with
    requestedWithdrawalActionScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A date with a required identifier which can be
--   referenced elsewhere.
data RequiredIdentifierDate = RequiredIdentifierDate with
    id_ : Text
    content : Date
      deriving (Eq, Ord, Show)

-- | A type defining the reset frequency. In the case of a
--   weekly reset, also specifies the day of the week that
--   the reset occurs. If the reset frequency is greater
--   than the calculation period frequency the this
--   implies that more or more reset dates is established
--   for each calculation period and some form of rate
--   averaginhg is applicable. The specific averaging
--   method of calculation is specified in
--   FloatingRateCalculation. In case the reset frequency
--   is of value T (term), the period is defined by the
--   swap\swapStream\calculationPerioDates\effectiveDate
--   and the
--   swap\swapStream\calculationPerioDates\terminationDate.
data ResetFrequency = ResetFrequency with
    id_ : Optional Text
    periodMultiplier : Int
        -- ^ A time period multiplier, e.g. 1, 2 or 3 etc. If the
        --   period value is T (Term) then periodMultiplier must
        --   contain the value 1.
    period : PeriodExtendedEnum
        -- ^ A time period, e.g. a day, week, month, year or term
        --   of the stream.
    weeklyRollConvention : Optional WeeklyRollConventionEnum
        -- ^ The day of the week on which a weekly reset date
        --   occurs. This element must be included if the reset
        --   frequency is defined as weekly and not otherwise.
      deriving (Eq, Ord, Show)

-- | The specification of whether resets occur relative to
--   the first or last day of a calculation period.
data ResetRelativeToEnum
    = ResetRelativeToEnum_CalculationPeriodStartDate ()
      -- ^ Resets will occur relative to the first day of each
      --   calculation period.
    | ResetRelativeToEnum_CalculationPeriodEndDate ()
      -- ^ Resets will occur relative to the last day of each
      --   calculation period.
    deriving (Eq, Ord, Show)

-- | Describes the resource that contains the media
--   representation of a business event (i.e used for
--   stating the Publicly Available Information). For
--   example, can describe a file or a URL that represents
--   the event. This type is an extended version of a type
--   defined by RIXML (www.rixml.org).
data Resource = Resource with
    resourceId : ResourceId
        -- ^ The unique identifier of the resource within the
        --   event.
    resourceType : Optional ResourceType
        -- ^ A description of the type of the resource, e.g. a
        --   confirmation.
    language : Optional Language
        -- ^ Indicates the language of the resource, described
        --   using the ISO 639-2/T Code.
    sizeInBytes : Optional Decimal
        -- ^ Indicates the size of the resource in bytes. It could
        --   be used by the end user to estimate the download time
        --   and storage needs.
    length : Optional ResourceLength
        -- ^ Indicates the length of the resource. For example, if
        --   the resource were a PDF file, the length would be in
        --   pages.
    mimeType : MimeType
        -- ^ Indicates the type of media used to store the
        --   content. mimeType is used to determine the software
        --   product(s) that can read the content. MIME Types are
        --   described in RFC 2046.
    name : Optional NormalizedString
        -- ^ The name of the resource.
    comments : Optional String
        -- ^ Any additional comments that are deemed necessary.
        --   For example, which software version is required to
        --   open the document? Or, how does this resource relate
        --   to the others for this event?
    choice_ : Optional Resource_choice
      deriving (Eq, Ord, Show)

-- | The data type used for resource identifiers.
data ResourceId = ResourceId with
    resourceIdScheme : Optional NonEmptyURI
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

-- | The type that indicates the length of the resource.
data ResourceLength = ResourceLength with
    lengthUnit : LengthUnitEnum
        -- ^ The length unit of the resource. For example, pages
        --   (pdf, text documents) or time (audio, video files).
    lengthValue : Decimal
        -- ^ The length value of the resource.
      deriving (Eq, Ord, Show)

-- | The data type used for describing the type or purpose
--   of a resource, e.g. "Confirmation".
data ResourceType = ResourceType with
    resourceTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A variant type used inside Resource
data Resource_choice
    = Resource_choice_String String
      -- ^ Provides extra information as string. In case the
      --   extra information is in XML format, a CDATA section
      --   must be placed around the source message to prevent
      --   its interpretation as XML content.
    | Resource_choice_HexadecimalBinary Text
      -- ^ Provides extra information as binary contents coded
      --   in hexadecimal.
    | Resource_choice_Base64Binary Text
      -- ^ Provides extra information as binary contents coded
      --   in base64.
    | Resource_choice_Url NonEmptyURI
      -- ^ Indicates where the resource can be found, as a URL
      --   that references the information on a web server
      --   accessible to the message recipient.
    deriving (Eq, Ord, Show)

-- | A type refining the generic message content model to
--   make it specific to response messages.
data ResponseMessage
    = ResponseMessage_CollateralAllocationAccepted CollateralAllocationAccepted
    | ResponseMessage_EventRequestAcknowledgement EventRequestAcknowledgement
    | ResponseMessage_ConsentRefused ConsentRefused
    | ResponseMessage_ConsentGranted ConsentGranted
    | ResponseMessage_ConfirmationStatus ConfirmationStatus
    | ResponseMessage_ConfirmationDisputed ConfirmationDisputed
    | ResponseMessage_ConfirmationAgreed ConfirmationAgreed
    | ResponseMessage_AllocationRefused AllocationRefused
    | ResponseMessage_AllocationApproved AllocationApproved
    | ResponseMessage_EventStatusResponse EventStatusResponse
    | ResponseMessage_Acknowledgement Acknowledgement
    deriving (Eq, Ord, Show)

-- | A type refining the generic message header to make it
--   specific to response messages.
data ResponseMessageHeader = ResponseMessageHeader with
    messageId : MessageId
        -- ^ A unique identifier (within its coding scheme)
        --   assigned to the message by its creating party.
    inReplyTo : MessageId
        -- ^ A copy of the unique message identifier (within it
        --   own coding scheme) to which this message is
        --   responding.
    sentBy : MessageAddress
        -- ^ The unique identifier (within its coding scheme) for
        --   the originator of a message instance.
    sendTo : [MessageAddress]
        -- ^ A unique identifier (within its coding scheme)
        --   indicating an intended recipent of a message.
    copyTo : [MessageAddress]
        -- ^ A unique identifier (within the specified coding
        --   scheme) giving the details of some party to whom a
        --   copy of this message will be sent for reference.
    creationTimestamp : Time
        -- ^ The date and time (on the source system) when this
        --   message instance was created.
    expiryTimestamp : Optional Time
        -- ^ The date and time (on the source system) when this
        --   message instance will be considered expired.
    implementationSpecification : Optional ImplementationSpecification
        -- ^ The version(s) of specifications that the sender
        --   asserts the message was developed for.
    partyMessageInformation : [PartyMessageInformation]
        -- ^ Additional message information that may be provided
        --   by each involved party.
      deriving (Eq, Ord, Show)

-- | A type defining a percentage specified as decimal
--   from 0 to 1. A percentage of 5% would be represented
--   as 0.05.
type RestrictedPercentage = Decimal

data Restructuring = Restructuring with
    applicable : Bool
        -- ^ Indicates whether the restructuring provision is
        --   applicable.
    restructuringType : Optional RestructuringType
        -- ^ Specifies the type of restructuring that is
        --   applicable.
    multipleHolderObligation : Optional Bool
        -- ^ In relation to a restructuring credit event, unless
        --   multiple holder obligation is not specified
        --   restructurings are limited to multiple holder
        --   obligations. A multiple holder obligation means an
        --   obligation that is held by more than three holders
        --   that are not affiliates of each other and where at
        --   least two thirds of the holders must agree to the
        --   event that constitutes the restructuring credit
        --   event. ISDA 2003 Term: Multiple Holder Obligation.
    multipleCreditEventNotices : Optional Bool
        -- ^ Presence of this element and value set to 'true'
        --   indicates that Section 3.9 of the 2003 Credit
        --   Derivatives Definitions shall apply. Absence of this
        --   element indicates that Section 3.9 shall not apply.
        --   NOTE: Not allowed under ISDA Credit 1999.
      deriving (Eq, Ord, Show)

data RestructuringType = RestructuringType with
    restructuringScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A reference to the return swap notional amount.
data ReturnSwapNotionalAmountReference = ReturnSwapNotionalAmountReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | The type of return associated with the equity swap.
data ReturnTypeEnum
    = ReturnTypeEnum_Dividend ()
      -- ^ Dividend return swap.
    | ReturnTypeEnum_Price ()
      -- ^ Price return swap.
    | ReturnTypeEnum_Total ()
      -- ^ Total return swap.
    deriving (Eq, Ord, Show)

-- | The convention for determining the sequence of
--   calculation period end dates. It is used in
--   conjunction with a specified frequency and the
--   regular period start date of a calculation period,
--   e.g. semi-annual IMM roll dates.
data RollConventionEnum
    = RollConventionEnum_EOM ()
      -- ^ Rolls on month end dates irrespective of the length
      --   of the month and the previous roll day.
    | RollConventionEnum_FRN ()
      -- ^ Roll days are determined according to the FRN
      --   Convention or Eurodollar Convention as described in
      --   ISDA 2000 definitions.
    | RollConventionEnum_IMM ()
      -- ^ IMM Settlement Dates. The third Wednesday of the
      --   (delivery) month.
    | RollConventionEnum_IMMCAD ()
      -- ^ The last trading day/expiration day of the Canadian
      --   Derivatives Exchange (Bourse de Montreal Inc)
      --   Three-month Canadian Bankers' Acceptance Futures
      --   (Ticker Symbol BAX). The second London banking day
      --   prior to the third Wednesday of the contract month.
      --   If the determined day is a Bourse or bank holiday in
      --   Montreal or Toronto, the last trading day shall be
      --   the previous bank business day. Per Canadian
      --   Derivatives Exchange BAX contract specification.
    | RollConventionEnum_IMMAUD ()
      -- ^ The last trading day of the Sydney Futures Exchange
      --   90 Day Bank Accepted Bills Futures contract (see
      --   http://www.sfe.com.au/content/sfe/trading/con_specs.pdf).
      --   One Sydney business day preceding the second Friday
      --   of the relevant settlement month.
    | RollConventionEnum_IMMNZD ()
      -- ^ The last trading day of the Sydney Futures Exchange
      --   NZ 90 Day Bank Bill Futures contract (see
      --   http://www.sfe.com.au/content/sfe/trading/con_specs.pdf).
      --   The first Wednesday after the ninth day of the
      --   relevant settlement month.
    | RollConventionEnum_SFE ()
      -- ^ Sydney Futures Exchange 90-Day Bank Accepted Bill
      --   Futures Settlement Dates. The second Friday of the
      --   (delivery) month.
    | RollConventionEnum_NONE ()
      -- ^ The roll convention is not required. For example, in
      --   the case of a daily calculation frequency.
    | RollConventionEnum_TBILL ()
      -- ^ 13-week and 26-week U.S. Treasury Bill Auction Dates.
      --   Each Monday except for U.S. (New York) holidays when
      --   it will occur on a Tuesday.
    | RollConventionEnum_1 ()
      -- ^ Rolls on the 1st day of the month.
    | RollConventionEnum_2 ()
      -- ^ Rolls on the 2nd day of the month.
    | RollConventionEnum_3 ()
      -- ^ Rolls on the 3rd day of the month.
    | RollConventionEnum_4 ()
      -- ^ Rolls on the 4th day of the month.
    | RollConventionEnum_5 ()
      -- ^ Rolls on the 4th day of the month.
    | RollConventionEnum_6 ()
      -- ^ Rolls on the 6th day of the month.
    | RollConventionEnum_7 ()
      -- ^ Rolls on the 7th day of the month.
    | RollConventionEnum_8 ()
      -- ^ Rolls on the 8th day of the month.
    | RollConventionEnum_9 ()
      -- ^ Rolls on the 9th day of the month.
    | RollConventionEnum_10 ()
      -- ^ Rolls on the 10th day of the month.
    | RollConventionEnum_11 ()
      -- ^ Rolls on the 11th day of the month.
    | RollConventionEnum_12 ()
      -- ^ Rolls on the 12th day of the month.
    | RollConventionEnum_13 ()
      -- ^ Rolls on the 13th day of the month.
    | RollConventionEnum_14 ()
      -- ^ Rolls on the 14th day of the month.
    | RollConventionEnum_15 ()
      -- ^ Rolls on the 15th day of the month.
    | RollConventionEnum_16 ()
      -- ^ Rolls on the 16th day of the month.
    | RollConventionEnum_17 ()
      -- ^ Rolls on the 17th day of the month.
    | RollConventionEnum_18 ()
      -- ^ Rolls on the 18th day of the month.
    | RollConventionEnum_19 ()
      -- ^ Rolls on the 19th day of the month.
    | RollConventionEnum_20 ()
      -- ^ Rolls on the 20th day of the month.
    | RollConventionEnum_21 ()
      -- ^ Rolls on the 21st day of the month.
    | RollConventionEnum_22 ()
      -- ^ Rolls on the 22nd day of the month.
    | RollConventionEnum_23 ()
      -- ^ Rolls on the 23rd day of the month.
    | RollConventionEnum_24 ()
      -- ^ Rolls on the 24th day of the month.
    | RollConventionEnum_25 ()
      -- ^ Rolls on the 25th day of the month.
    | RollConventionEnum_26 ()
      -- ^ Rolls on the 26th day of the month.
    | RollConventionEnum_27 ()
      -- ^ Rolls on the 27th day of the month.
    | RollConventionEnum_28 ()
      -- ^ Rolls on the 28th day of the month.
    | RollConventionEnum_29 ()
      -- ^ Rolls on the 29th day of the month.
    | RollConventionEnum_30 ()
      -- ^ Rolls on the 30th day of the month.
    | RollConventionEnum_MON ()
      -- ^ Rolling weekly on a Monday.
    | RollConventionEnum_TUE ()
      -- ^ Rolling weekly on a Tuesday.
    | RollConventionEnum_WED ()
      -- ^ Rolling weekly on a Wednesday.
    | RollConventionEnum_THU ()
      -- ^ Rolling weekly on a Thursday.
    | RollConventionEnum_FRI ()
      -- ^ Rolling weekly on a Friday.
    | RollConventionEnum_SAT ()
      -- ^ Rolling weekly on a Saturday.
    | RollConventionEnum_SUN ()
      -- ^ Rolling weekly on a Sunday.
    deriving (Eq, Ord, Show)

-- | A type defining a rounding direction and precision to
--   be used in the rounding of a rate.
data Rounding = Rounding with
    roundingDirection : RoundingDirectionEnum
        -- ^ Specifies the rounding direction.
    precision : Int
        -- ^ Specifies the rounding precision in terms of a number
        --   of decimal places. Note how a percentage rate
        --   rounding of 5 decimal places is expressed as a
        --   rounding precision of 7 in the FpML document since
        --   the percentage is expressed as a decimal, e.g.
        --   9.876543% (or 0.09876543) being rounded to the
        --   nearest 5 decimal places is 9.87654% (or 0.0987654).
      deriving (Eq, Ord, Show)

-- | The method of rounding a fractional number.
data RoundingDirectionEnum
    = RoundingDirectionEnum_Up ()
      -- ^ A fractional number will be rounded up to the
      --   specified number of decimal places (the precision).
      --   For example, 5.21 and 5.25 rounded up to 1 decimal
      --   place are 5.3 and 5.3 respectively.
    | RoundingDirectionEnum_Down ()
      -- ^ A fractional number will be rounded down to the
      --   specified number of decimal places (the precision).
      --   For example, 5.29 and 5.25 rounded down to 1 decimal
      --   place are 5.2 and 5.2 respectively.
    | RoundingDirectionEnum_Nearest ()
      -- ^ A fractional number will be rounded either up or down
      --   to the specified number of decimal places (the
      --   precision) depending on its value. For example, 5.24
      --   would be rounded down to 5.2 and 5.25 would be
      --   rounded up to 5.3 if a precision of 1 decimal place
      --   were specified.
    deriving (Eq, Ord, Show)

-- | A type that provides three alternative ways of
--   identifying a party involved in the routing of a
--   payment. The identification may use payment system
--   identifiers only; actual name, address and other
--   reference information; or a combination of both.
data Routing
    = Routing_RoutingIds RoutingIds
      -- ^ A set of unique identifiers for a party, eachone
      --   identifying the party within a payment system. The
      --   assumption is that each party will not have more than
      --   one identifier within the same payment system.
    | Routing_RoutingExplicitDetails RoutingExplicitDetails
      -- ^ A set of details that is used to identify a party
      --   involved in the routing of a payment when the party
      --   does not have a code that identifies it within one of
      --   the recognized payment systems.
    | Routing_RoutingIdsAndExplicitDetails RoutingIdsAndExplicitDetails
      -- ^ A combination of coded payment system identifiers and
      --   details for physical addressing for a party involved
      --   in the routing of a payment.
    deriving (Eq, Ord, Show)

-- | A type that models name, address and supplementary
--   textual information for the purposes of identifying a
--   party involved in the routing of a payment.
data RoutingExplicitDetails = RoutingExplicitDetails with
    routingName : String
        -- ^ A real name that is used to identify a party involved
        --   in the routing of a payment.
    routingAddress : Optional Address
        -- ^ A physical postal address via which a payment can be
        --   routed.
    routingAccountNumber : Optional String
        -- ^ An account number via which a payment can be routed.
    routingReferenceText : [String]
        -- ^ A piece of free-format text used to assist the
        --   identification of a party involved in the routing of
        --   a payment.
      deriving (Eq, Ord, Show)

data RoutingId = RoutingId with
    routingIdCodeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type that provides for identifying a party involved
--   in the routing of a payment by means of one or more
--   standard identification codes. For example, both a
--   SWIFT BIC code and a national bank identifier may be
--   required.
data RoutingIds = RoutingIds with
    routingId : [RoutingId]
        -- ^ A unique identifier for party that is a participant
        --   in a recognized payment system.
      deriving (Eq, Ord, Show)

-- | A type that provides a combination of payment system
--   identification codes with physical postal address
--   details, for the purposes of identifying a party
--   involved in the routing of a payment.
data RoutingIdsAndExplicitDetails = RoutingIdsAndExplicitDetails with
    routingIds : [RoutingIds]
        -- ^ A set of unique identifiers for a party, eachone
        --   identifying the party within a payment system. The
        --   assumption is that each party will not have more than
        --   one identifier within the same payment system.
    routingName : String
        -- ^ A real name that is used to identify a party involved
        --   in the routing of a payment.
    routingAddress : Optional Address
        -- ^ A physical postal address via which a payment can be
        --   routed.
    routingAccountNumber : Optional String
        -- ^ An account number via which a payment can be routed.
    routingReferenceText : [String]
        -- ^ A piece of free-format text used to assist the
        --   identification of a party involved in the routing of
        --   a payment.
      deriving (Eq, Ord, Show)

-- | A type defining a schedule of rates or amounts in
--   terms of an initial value and then a series of step
--   date and value pairs. On each step date the rate or
--   amount changes to the new step value. The series of
--   step date and value pairs are optional. If not
--   specified, this implies that the initial value
--   remains unchanged over time.
data Schedule = Schedule with
    id_ : Optional Text
    initialValue : Decimal
        -- ^ The initial rate or amount, as the case may be. An
        --   initial rate of 5% would be represented as 0.05.
    step : [Step]
        -- ^ The schedule of step date and value pairs. On each
        --   step date the associated step value becomes effective
        --   A list of steps may be ordered in the document by
        --   ascending step date. An FpML document containing an
        --   unordered list of steps is still regarded as a
        --   conformant document.
      deriving (Eq, Ord, Show)

-- | Reference to a schedule of rates or amounts.
data ScheduleReference = ScheduleReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | The base class for all types which define coding
--   schemes that are allowed to be empty.
type Scheme = NormalizedString

-- | A Disruption Fallback with the sequence in which it
--   should be applied relative to other Disruption
--   Fallbacks.
data SequencedDisruptionFallback = SequencedDisruptionFallback with
    fallback : DisruptionFallback
        -- ^ Disruption fallback that applies to the trade.
    sequence_ : Int
        -- ^ Sequence in which the reference to the disruption
        --   fallback should be applied.
      deriving (Eq, Ord, Show)

-- | A type defining the content model for a
--   human-readable notification to the users of a
--   service.
data ServiceAdvisory = ServiceAdvisory with
    category : ServiceAdvisoryCategory
        -- ^ The category or type of the notification message,
        --   e.g. availability, product coverage, rules, etc.
    description : String
        -- ^ A human-readable notification.
    effectiveFrom : Optional Time
        -- ^ The time at which the information supplied by the
        --   advisory becomes effective. For example, if the
        --   advisory advises of a newly planned service outage,
        --   it will be the time the service outage begins.
    effectiveTo : Optional Time
        -- ^ The time at which the information supplied by the
        --   advisory becomes no longer effective. For example, if
        --   the advisory advises of a newly planned service
        --   outage, it will be the time the service outage ends.
      deriving (Eq, Ord, Show)

-- | A type that can be used to describe the category of
--   an advisory message, e.g.. Availability, Rules,
--   Products, etc., etc..
data ServiceAdvisoryCategory = ServiceAdvisoryCategory with
    serviceAdvisoryCategoryScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type defining the content model for a message that
--   allows a service to send a notification message to a
--   user of the service.
data ServiceNotification = ServiceNotification with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : NotificationMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    correlationAndOptionalSequence_model : Optional ServiceNotification_CorrelationAndOptionalSequence_model
    onBehalfOf_model : Optional ServiceNotification_OnBehalfOf_model
    serviceName : Optional NormalizedString
        -- ^ The name of the service to which the message applies
    choice_ : ServiceNotification_choice
      deriving (Eq, Ord, Show)

-- | A record type used inside ServiceNotification
data ServiceNotification_CorrelationAndOptionalSequence_model = ServiceNotification_CorrelationAndOptionalSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequence_model : Optional ServiceNotification_Sequence_model
      deriving (Eq, Ord, Show)

-- | A record type used inside ServiceNotification
data ServiceNotification_OnBehalfOf_model = ServiceNotification_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside ServiceNotification
data ServiceNotification_Sequence_model = ServiceNotification_Sequence_model with
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A variant type used inside ServiceNotification
data ServiceNotification_choice
    = ServiceNotification_choice_Status ServiceStatus
      -- ^ The current state of the service (e.g. Available,
      --   Unavailable).
    | ServiceNotification_choice_ProcessingStatus ServiceProcessingStatus
      -- ^ A description of the stage of processing of the
      --   service, for example
      --   EndofDayProcessingCutoffOccurred,
      --   EndOfDayProcessingCompleted. [TBD: could be combined
      --   with advisory]
    | ServiceNotification_choice_Advisory ServiceAdvisory
      -- ^ A human-readable message providing information about
      --   the service..
    deriving (Eq, Ord, Show)

-- | A type that can be used to describe the processing
--   phase of a service. For example, EndOfDay, Intraday.
data ServiceProcessingCycle = ServiceProcessingCycle with
    serviceProcessingCycleScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type that can be used to describe a stage or step
--   in processing provided by a service, for example
--   processing completed.
data ServiceProcessingEvent = ServiceProcessingEvent with
    serviceProcessingEventScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type defining the content model for report on the
--   status of the processing by a service. In the future
--   we may wish to provide some kind of scope or other
--   qualification for the event, e.g. the currencies,
--   products, or books to which it applies.
data ServiceProcessingStatus = ServiceProcessingStatus with
    cycle : Optional ServiceProcessingCycle
        -- ^ The processing cycle or phase that this message
        --   describes. For example, EndOfDay or Intraday.
    step : Optional ServiceProcessingStep
        -- ^ The stage within a processing cycle or phase that
        --   this message describes. For example, Netting or
        --   Valuation.
    event : ServiceProcessingEvent
        -- ^ The event that occurred within the cycle or step, for
        --   example "Started" or "Completed"..
      deriving (Eq, Ord, Show)

-- | A type that can be used to describe what stage of
--   processing a service is in. For example, Netting or
--   Valuation.
data ServiceProcessingStep = ServiceProcessingStep with
    serviceProcessingStep : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type that can be used to describe the availability
--   or other state of a service, e.g. Available,
--   Unavaialble.
data ServiceStatus = ServiceStatus with
    serviceStatusScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type that represents the choice of methods for
--   settling a potential currency payment resulting from
--   a trade: by means of a standard settlement
--   instruction, by netting it out with other payments,
--   or with an explicit settlement instruction.
data SettlementInformation
    = SettlementInformation_StandardSettlementStyle StandardSettlementStyleEnum
      -- ^ An optional element used to describe how a trade will
      --   settle. This defines a scheme and is used for
      --   identifying trades that are identified as settling
      --   standard and/or flagged for settlement netting.
    | SettlementInformation_SettlementInstruction SettlementInstruction
      -- ^ An explicit specification of how a currency payment
      --   is to be made, when the payment is not netted and the
      --   route is other than the recipient's standard
      --   settlement instruction.
    deriving (Eq, Ord, Show)

-- | A type that models a complete instruction for
--   settling a currency payment, including the settlement
--   method to be used, the correspondent bank, any
--   intermediary banks and the ultimate beneficary.
data SettlementInstruction = SettlementInstruction with
    settlementMethod : Optional SettlementMethod
        -- ^ The mechanism by which settlement is to be made. The
        --   scheme of domain values will include standard
        --   mechanisms such as CLS, Fedwire, Chips ABA, Chips
        --   UID, SWIFT, CHAPS and DDA.
    correspondentInformation : Optional CorrespondentInformation
        -- ^ The information required to identify the
        --   correspondent bank that will make delivery of the
        --   funds on the paying bank's behalf in the country
        --   where the payment is to be made
    intermediaryInformation : [IntermediaryInformation]
        -- ^ Information to identify an intermediary through which
        --   payment will be made by the correspondent bank to the
        --   ultimate beneficiary of the funds.
    beneficiaryBank : Optional Beneficiary
        -- ^ The bank that acts for the ultimate beneficiary of
        --   the funds in receiving payments.
    beneficiary : Beneficiary
        -- ^ The ultimate beneficiary of the funds. The
        --   beneficiary can be identified either by an account at
        --   the beneficiaryBank (qv) or by explicit
        --   routingInformation. This element provides for the
        --   latter.
    depositoryPartyReference : Optional PartyReference
        -- ^ Reference to the depository of the settlement.
    splitSettlement : [SplitSettlement]
        -- ^ The set of individual payments that are to be made
        --   when a currency payment settling a trade needs to be
        --   split between a number of ultimate beneficiaries.
        --   Each split payment may need to have its own routing
        --   information.
      deriving (Eq, Ord, Show)

data SettlementMethod = SettlementMethod with
    settlementMethodScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | Defines the Settlement Period Duration for an
--   Electricity Transaction.
data SettlementPeriodDurationEnum
    = SettlementPeriodDurationEnum_2Hours ()
      -- ^ Two-hourly duration applies.
    | SettlementPeriodDurationEnum_1Hour ()
      -- ^ Hourly duration applies.
    | SettlementPeriodDurationEnum_30Minutes ()
      -- ^ Half-hourly duration applies.
    | SettlementPeriodDurationEnum_15Minutes ()
      -- ^ Quarter-hourly duration applies.
    deriving (Eq, Ord, Show)

-- | Specifies a set of Settlement Periods associated with
--   an Electricity Transaction for delivery on an
--   Applicable Day or for a series of Applicable Days.
data SettlementPeriods = SettlementPeriods with
    id_ : Optional Text
    duration : SettlementPeriodDurationEnum
        -- ^ The length of each Settlement Period.
    applicableDay : [DayOfWeekExtEnum]
        -- ^ Specifies the Applicable Day with respect to a range
        --   of Settlement Periods. This element can only be
        --   omitted if includesHolidays is present, in which case
        --   this range of Settlement Periods will apply to days
        --   that are holidays only.
    startTime : OffsetPrevailingTime
        -- ^ Specifies the hour-ending Start Time with respect to
        --   a range of Settlement Periods.
    endTime : OffsetPrevailingTime
        -- ^ Specifies the hour-ending End Time with respect to a
        --   range of Settlement Periods. If neither startTime nor
        --   endTime contain an offset element and endTime is
        --   earlier than startTime, this indicates that the time
        --   period "wraps around" midnight. For example, if
        --   startTime is 23:00 and endTime is 01:00 then
        --   Settlement Periods apply from 22:00 to 23:00 and
        --   23:00 to 00:00 and 00:00 to 01:00 on each included
        --   day.
    timeDuration : Optional Text
        -- ^ Specifies the duration of the time window during
        --   which settlement/delivery occurs.
    choice_ : Optional SettlementPeriods_choice
      deriving (Eq, Ord, Show)

-- | A type defining the Fixed Price applicable to a range
--   or ranges of Settlement Periods.
data SettlementPeriodsFixedPrice = SettlementPeriodsFixedPrice with
    id_ : Optional Text
    price : Decimal
        -- ^ The Fixed Price.
    priceCurrency : Currency
        -- ^ The currency used to specify the digital barrier in
        --   terms of a price per unit of commodity.
    priceUnit : QuantityUnit
        -- ^ The unit of measure used to specify the digital
        --   barrier in terms of a price per unit of commodity.
    settlementPeriodsReference : [SettlementPeriodsReference]
      deriving (Eq, Ord, Show)

-- | Allows a set of Settlement Periods to reference one
--   already defined elsewhere in the trade.
data SettlementPeriodsReference = SettlementPeriodsReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | The specification of the Settlement Periods in which
--   the electricity will be delivered for a "shaped"
--   trade i.e. where different Settlement Period ranges
--   will apply to different periods of the trade.
data SettlementPeriodsSchedule = SettlementPeriodsSchedule with
    settlementPeriodsStep : [SettlementPeriodsStep]
        -- ^ The range of Settlement Periods per Calculation
        --   Period. There must be a range of Settlement Periods
        --   specified for each Calculation Period, regardless of
        --   whether the range of Settlement Periods changes or
        --   stays the same between periods.
    choice_ : SettlementPeriodsSchedule_choice
      deriving (Eq, Ord, Show)

-- | A variant type used inside SettlementPeriodsSchedule
data SettlementPeriodsSchedule_choice
    = SettlementPeriodsSchedule_choice_DeliveryPeriodsReference CalculationPeriodsReference
      -- ^ A pointer style reference to the Delivery Periods
      --   defined elsewhere.
    | SettlementPeriodsSchedule_choice_DeliveryPeriodsScheduleReference CalculationPeriodsScheduleReference
      -- ^ A pointer style reference to the Calculation Periods
      --   Schedule defined elsewhere.
    deriving (Eq, Ord, Show)

-- | A reference to the range of Settlement Periods that
--   applies to a given period of a transaction.
data SettlementPeriodsStep = SettlementPeriodsStep with
    settlementPeriodsReference : [SettlementPeriodsReference]
        -- ^ The specification of the Settlement Periods in which
        --   the electricity will be delivered. The Settlement
        --   Periods will apply for the duration of the appliable
        --   period. If more than one settlementPeriods element is
        --   present this indicates multiple ranges of Settlement
        --   Periods apply for the duration of the applicable
        --   period.
      deriving (Eq, Ord, Show)

-- | A variant type used inside SettlementPeriods
data SettlementPeriods_choice
    = SettlementPeriods_choice_ExcludeHolidays CommodityBusinessCalendar
      -- ^ Indicates that days that are holidays according to
      --   the referenced commodity business calendar should be
      --   excluded from this range of Settlement Periods, even
      --   if such day is an applicable day.
    | SettlementPeriods_choice_IncludeHolidays CommodityBusinessCalendar
      -- ^ Indicates that days that are holidays according to
      --   the referenced commodity business calendar should be
      --   included in this range of Settlement Periods, even if
      --   such day is not an applicable day.
    deriving (Eq, Ord, Show)

-- | Coding scheme that specifies the settlement price
--   default election.
data SettlementPriceDefaultElection = SettlementPriceDefaultElection with
    settlementPriceDefaultElectionScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The source from which the settlement price is to be
--   obtained, e.g. a Reuters page, Prezzo di Riferimento,
--   etc.
data SettlementPriceSource = SettlementPriceSource with
    settlementPriceSourceScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type defining the settlement rate options through a
--   scheme reflecting the terms of the Annex A to the
--   1998 FX and Currency Option Definitions.
data SettlementRateOption = SettlementRateOption with
    settlementRateOptionScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A type describing the method for obtaining a
--   settlement rate.
data SettlementRateSource
    = SettlementRateSource_InformationSource InformationSource
      -- ^ The information source where a published or displayed
      --   market rate will be obtained, e.g. Telerate Page
      --   3750.
    | SettlementRateSource_CashSettlementReferenceBanks CashSettlementReferenceBanks
      -- ^ A container for a set of reference institutions.
      --   These reference institutions may be called upon to
      --   provide rate quotations as part of the method to
      --   determine the applicable cash settlement amount. If
      --   institutions are not specified, it is assumed that
      --   reference institutions will be agreed between the
      --   parties on the exercise date, or in the case of swap
      --   transaction to which mandatory early termination is
      --   applicable, the cash settlement valuation date.
    deriving (Eq, Ord, Show)

data SettlementTerms = SettlementTerms with
    id_ : Optional Text
    settlementCurrency : Optional Currency
        -- ^ ISDA 2003 Term: Settlement Currency
      deriving (Eq, Ord, Show)

-- | Shows how the transaction is to be settled when it is
--   exercised.
data SettlementTypeEnum
    = SettlementTypeEnum_Cash ()
      -- ^ The intrinsic value of the option will be delivered
      --   by way of a cash settlement amount determined, (i) by
      --   reference to the differential between the strike
      --   price and the settlement price; or (ii) in accordance
      --   with a bilateral agreement between the parties
    | SettlementTypeEnum_Physical ()
      -- ^ The securities underlying the transaction will be
      --   delivered by (i) in the case of a call, the seller to
      --   the buyer, or (ii) in the case of a put, the buyer to
      --   the seller versus a settlement amount equivalent to
      --   the strike price per share
    | SettlementTypeEnum_Election ()
      -- ^ Allow Election of either Cash or Physical settlement
    | SettlementTypeEnum_CashOrPhysical ()
      -- ^ Allow use of either Cash or Physical settlement
      --   without prior Election
    deriving (Eq, Ord, Show)

-- | Defines the consequences of extraordinary events
--   relating to the underlying.
data ShareExtraordinaryEventEnum
    = ShareExtraordinaryEventEnum_AlternativeObligation ()
      -- ^ The trade continues such that the underlying now
      --   consists of the New Shares and/or the Other
      --   Consideration, if any, and the proceeds of any
      --   redemption, if any, that the holder of the underlying
      --   Shares would have been entitled to.
    | ShareExtraordinaryEventEnum_CancellationAndPayment ()
      -- ^ The trade is cancelled and a cancellation fee will be
      --   paid by one party to the other.
    | ShareExtraordinaryEventEnum_OptionsExchange ()
      -- ^ The trade will be adjusted by the Calculation Agent
      --   in accordance with the adjustments made by any
      --   exchange on which options on the underlying are
      --   listed.
    | ShareExtraordinaryEventEnum_CalculationAgent ()
      -- ^ The Calculation Agent will determine what adjustment
      --   is required to offset any change to the economics of
      --   the trade. If the Calculation Agent cannot achieve
      --   this, the trade goes to Cancellation and Payment with
      --   the Calculation Agent deciding on the value of the
      --   cancellation fee. Adjustments may not be made to
      --   account solely for changes in volatility, expected
      --   dividends, stock loan rate or liquidity.
    | ShareExtraordinaryEventEnum_ModifiedCalculationAgent ()
      -- ^ The Calculation Agent will determine what adjustment
      --   is required to offset any change to the economics of
      --   the trade. If the Calculation Agent cannot achieve
      --   this, the trade goes to Cancellation and Payment with
      --   the Calculation Agent deciding on the value of the
      --   cancellation fee. Adjustments to account for changes
      --   in volatility, expected dividends, stock loan rate or
      --   liquidity are allowed.
    | ShareExtraordinaryEventEnum_PartialCancellationAndPayment ()
      -- ^ Applies to Basket Transactions. The portion of the
      --   Basket made up by the affected Share will be
      --   cancelled and a cancellation fee will be paid from
      --   one party to the other. The remainder of the trade
      --   continues.
    | ShareExtraordinaryEventEnum_Component ()
      -- ^ If this is a Share-for-Combined merger event (Shares
      --   are replaced with New Shares and Other
      --   Consideration), then different treatment can be
      --   applied to each component if the parties have
      --   specified this.
    deriving (Eq, Ord, Show)

-- | TBA
data SharedAmericanExercise = SharedAmericanExercise with
    id_ : Optional Text
    commencementDate : AdjustableOrRelativeDate
        -- ^ The first day of the exercise period for an American
        --   style option.
    expirationDate : AdjustableOrRelativeDate
        -- ^ The last day within an exercise period for an
        --   American style option. For a European style option it
        --   is the only day within the exercise period.
    choice_ : Optional SharedAmericanExercise_choice
        -- ^ Choice between latest exercise time expressed as
        --   literal time, or using a determination method.
      deriving (Eq, Ord, Show)

-- | A variant type used inside SharedAmericanExercise
data SharedAmericanExercise_choice
    = SharedAmericanExercise_choice_LatestExerciseTime BusinessCenterTime
      -- ^ For a Bermuda or American style option, the latest
      --   time on an exercise business day (excluding the
      --   expiration date) within the exercise period that
      --   notice can be given by the buyer to the seller or
      --   seller's agent. Notice of exercise given after this
      --   time will be deemed to have been given on the next
      --   exercise business day.
    | SharedAmericanExercise_choice_LatestExerciseTimeDetermination DeterminationMethod
      -- ^ Latest exercise time determination method.
    deriving (Eq, Ord, Show)

-- | A short sale concluded by an investment firm on its
--   own behalf or on behalf of a client, as described in
--   Article 11.
data ShortSale = ShortSale with
    shortSaleScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data SimpleCreditDefaultSwap = SimpleCreditDefaultSwap with
    id_ : Optional Text
    instrumentId : [InstrumentId]
        -- ^ Identification of the underlying asset, using public
        --   and/or private identifiers.
    description : Optional String
        -- ^ Long name of the underlying asset.
    currency : Optional IdentifiedCurrency
        -- ^ Trading currency of the underlyer when transacted as
        --   a cash instrument.
    exchangeId : Optional ExchangeId
        -- ^ Identification of the exchange on which this asset is
        --   transacted for the purposes of calculating a
        --   contractural payoff. The term "Exchange" is assumed
        --   to have the meaning as defined in the ISDA 2002
        --   Equity Derivatives Definitions.
    clearanceSystem : Optional ClearanceSystem
        -- ^ Identification of the clearance system associated
        --   with the transaction exchange.
    definition : Optional ProductReference
        -- ^ An optional reference to a full FpML product that
        --   defines the simple product in greater detail. In case
        --   of inconsistency between the terms of the simple
        --   product and those of the detailed definition, the
        --   values in the simple product override those in the
        --   detailed definition.
    choice_ : SimpleCreditDefaultSwap_choice
    term : Period
        -- ^ Specifies the term of the simple CD swap, e.g. 5Y.
    paymentFrequency : Optional Period
        -- ^ Specifies the frequency at which the swap pays, e.g.
        --   6M.
      deriving (Eq, Ord, Show)

-- | A variant type used inside SimpleCreditDefaultSwap
data SimpleCreditDefaultSwap_choice
    = SimpleCreditDefaultSwap_choice_ReferenceEntity LegalEntity
      -- ^ The entity for which this is defined.
    | SimpleCreditDefaultSwap_choice_CreditEntityReference LegalEntityReference
      -- ^ An XML reference a credit entity defined elsewhere in
      --   the document.
    deriving (Eq, Ord, Show)

data SimpleFra = SimpleFra with
    id_ : Optional Text
    instrumentId : [InstrumentId]
        -- ^ Identification of the underlying asset, using public
        --   and/or private identifiers.
    description : Optional String
        -- ^ Long name of the underlying asset.
    currency : Optional IdentifiedCurrency
        -- ^ Trading currency of the underlyer when transacted as
        --   a cash instrument.
    exchangeId : Optional ExchangeId
        -- ^ Identification of the exchange on which this asset is
        --   transacted for the purposes of calculating a
        --   contractural payoff. The term "Exchange" is assumed
        --   to have the meaning as defined in the ISDA 2002
        --   Equity Derivatives Definitions.
    clearanceSystem : Optional ClearanceSystem
        -- ^ Identification of the clearance system associated
        --   with the transaction exchange.
    definition : Optional ProductReference
        -- ^ An optional reference to a full FpML product that
        --   defines the simple product in greater detail. In case
        --   of inconsistency between the terms of the simple
        --   product and those of the detailed definition, the
        --   values in the simple product override those in the
        --   detailed definition.
    startTerm : Period
        -- ^ Specifies the start term of the simple fra, e.g. 3M.
    endTerm : Period
        -- ^ Specifies the end term of the simple fra, e.g. 9M.
    dayCountFraction : Optional DayCountFraction
        -- ^ The day count basis for the FRA.
      deriving (Eq, Ord, Show)

data SimpleIRSwap = SimpleIRSwap with
    id_ : Optional Text
    instrumentId : [InstrumentId]
        -- ^ Identification of the underlying asset, using public
        --   and/or private identifiers.
    description : Optional String
        -- ^ Long name of the underlying asset.
    currency : Optional IdentifiedCurrency
        -- ^ Trading currency of the underlyer when transacted as
        --   a cash instrument.
    exchangeId : Optional ExchangeId
        -- ^ Identification of the exchange on which this asset is
        --   transacted for the purposes of calculating a
        --   contractural payoff. The term "Exchange" is assumed
        --   to have the meaning as defined in the ISDA 2002
        --   Equity Derivatives Definitions.
    clearanceSystem : Optional ClearanceSystem
        -- ^ Identification of the clearance system associated
        --   with the transaction exchange.
    definition : Optional ProductReference
        -- ^ An optional reference to a full FpML product that
        --   defines the simple product in greater detail. In case
        --   of inconsistency between the terms of the simple
        --   product and those of the detailed definition, the
        --   values in the simple product override those in the
        --   detailed definition.
    term : Period
        -- ^ Specifies the term of the simple swap, e.g. 5Y.
    paymentFrequency : Optional Period
        -- ^ Specifies the frequency at which the swap pays, e.g.
        --   6M.
    dayCountFraction : Optional DayCountFraction
        -- ^ The day count basis for the swap.
      deriving (Eq, Ord, Show)

-- | A complex type to specified payments in a simpler
--   fashion than the Payment type. This construct should
--   be used from the version 4.3 onwards.
data SimplePayment = SimplePayment with
    id_ : Optional Text
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    paymentAmount : NonNegativeMoney
    paymentDate : AdjustableOrRelativeDate
        -- ^ The payment date. This date is subject to adjustment
        --   in accordance with any applicable business day
        --   convention.
      deriving (Eq, Ord, Show)

-- | A type describing a single underlyer
data SingleUnderlyer = SingleUnderlyer with
    underlyingAsset : Asset
        -- ^ Define the underlying asset, either a listed security
        --   or other instrument.
    openUnits : Optional Decimal
        -- ^ The number of units (index or securities) that
        --   constitute the underlyer of the swap. In the case of
        --   a basket swap, this element is used to reference both
        --   the number of basket units, and the number of each
        --   asset components of the basket when these are
        --   expressed in absolute terms.
    dividendPayout : Optional DividendPayout
        -- ^ Specifies the dividend payout ratio associated with
        --   an equity underlyer. A basket swap can have different
        --   payout ratios across the various underlying
        --   constituents. In certain cases the actual ratio is
        --   not known on trade inception, and only general
        --   conditions are then specified. Users should note that
        --   FpML makes a distinction between the derivative
        --   contract and the underlyer of the contract. It would
        --   be better if the agreed dividend payout on a
        --   derivative contract was modelled at the level of the
        --   derivative contract, an approach which may be adopted
        --   in the next major version of FpML.
    couponPayment : Optional PendingPayment
        -- ^ The next upcoming coupon payment.
    averageDailyTradingVolume : Optional AverageDailyTradingVolumeLimit
        -- ^ The average amount of individual securities traded in
        --   a day or over a specified amount of time.
    depositoryReceipt : Optional Bool
        -- ^ A Depository Receipt is a negotiable certificate
        --   issued by a trust company or security depository.
        --   This element is used to represent whether a
        --   Depository Receipt is applicable or not to the
        --   underlyer.
      deriving (Eq, Ord, Show)

-- | The Specified Price in respect of a Transaction and a
--   Commodity Reference Price.
data SpecifiedPriceEnum
    = SpecifiedPriceEnum_Afternoon ()
      -- ^ The Specified Price shall be the Afternoon fixing
      --   reported in or by the relevant Price Source as
      --   specified in the relevant Confirmation.
    | SpecifiedPriceEnum_Ask ()
      -- ^ The Specified Price shall be the Ask price reported
      --   in or by the relevant Price Source as specified in
      --   the relevant Confirmation.
    | SpecifiedPriceEnum_Bid ()
      -- ^ The Specified Price shall be the Bid price reported
      --   in or by the relevant Price Source as specified in
      --   the relevant Confirmation.
    | SpecifiedPriceEnum_Closing ()
      -- ^ The Specified Price shall be the Closing price
      --   reported in or by the relevant Price Source as
      --   specified in the relevant Confirmation.
    | SpecifiedPriceEnum_High ()
      -- ^ The Specified Price shall be the High price reported
      --   in or by the relevant Price Source as specified in
      --   the relevant Confirmation.
    | SpecifiedPriceEnum_Index ()
      -- ^ The Specified Price shall be the Index price reported
      --   in or by the relevant Price Source as specified in
      --   the relevant Confirmation.
    | SpecifiedPriceEnum_MeanOfBidAndAsk ()
      -- ^ The Specified Price shall be the Average of the Bid
      --   and Ask prices reported in or by the relevant Price
      --   Source as specified in the relevant Confirmation.
    | SpecifiedPriceEnum_LocationalMarginal ()
      -- ^ The Specified Price shall be the Locational Marginal
      --   price reported in or by the relevant Price Source as
      --   specified in the relevant Confirmation.
    | SpecifiedPriceEnum_Low ()
      -- ^ The Specified Price shall be the Low price reported
      --   in or by the relevant Price Source as specified in
      --   the relevant Confirmation.
    | SpecifiedPriceEnum_MarginalHourly ()
      -- ^ The Specified Price shall be the Marginal Hourly
      --   price reported in or by the relevant Price Source as
      --   specified in the relevant Confirmation.
    | SpecifiedPriceEnum_MarketClearing ()
      -- ^ The Specified Price shall be the Market Clearing
      --   price reported in or by the relevant Price Source as
      --   specified in the relevant Confirmation.
    | SpecifiedPriceEnum_MeanOfHighAndLow ()
      -- ^ The Specified Price shall be the Average of the High
      --   and Low prices reported in or by the relevant Price
      --   Source as specified in the relevant Confirmation.
    | SpecifiedPriceEnum_Morning ()
      -- ^ The Specified Price shall be the Morning fixing
      --   reported in or by the relevant Price Source as
      --   specified in the relevant Confirmation.
    | SpecifiedPriceEnum_Official ()
      -- ^ The Specified Price shall be the Official price
      --   reported in or by the relevant Price Source as
      --   specified in the relevant Confirmation.
    | SpecifiedPriceEnum_Opening ()
      -- ^ The Specified Price shall be the Opening price
      --   reported in or by the relevant Price Source as
      --   specified in the relevant Confirmation.
    | SpecifiedPriceEnum_OSP ()
      -- ^ The Specified Price shall be the Official Settlement
      --   Price reported in or by the relevant Price Source as
      --   specified in the relevant Confirmation.
    | SpecifiedPriceEnum_Settlement ()
      -- ^ The Specified Price shall be the Settlement price
      --   reported in or by the relevant Price Source as
      --   specified in the relevant Confirmation.
    | SpecifiedPriceEnum_Spot ()
      -- ^ The Specified Price shall be the Spot price reported
      --   in or by the relevant Price Source as specified in
      --   the relevant Confirmation.
    | SpecifiedPriceEnum_Midpoint ()
      -- ^ The Specified Price shall be the Average of the
      --   Midpoint of prices reported in or by the relevant
      --   Price Source as specified in the relevant
      --   Confirmation.
    | SpecifiedPriceEnum_NationalSingle ()
      -- ^ The Specified Price shall be the National Single
      --   price reported in or by the relevant Price Source as
      --   specified in the relevant Confirmation.
    | SpecifiedPriceEnum_WeightedAverage ()
      -- ^ The Specified Price shall be the Volume Weighted
      --   Average of prices effective on the Pricing Date
      --   reported in or by the relevant Price Source as
      --   specified in the relevant Confirmation.
    | SpecifiedPriceEnum_UnWeightedAverage ()
      -- ^ The Specified Price shall be the Non-volume Weighted
      --   Average of prices effective on the Pricing Date
      --   reported in or by the relevant Price Source as
      --   specified in the relevant Confirmation.
    deriving (Eq, Ord, Show)

-- | A type that supports the division of a gross
--   settlement amount into a number of split settlements,
--   each requiring its own settlement instruction.
data SplitSettlement = SplitSettlement with
    splitSettlementAmount : Money
        -- ^ One of the monetary amounts in a split settlement
        --   payment.
    beneficiaryBank : Optional Routing
        -- ^ The bank that acts for the ultimate beneficiary of
        --   the funds in receiving payments.
    beneficiary : Routing
        -- ^ The ultimate beneficiary of the funds. The
        --   beneficiary can be identified either by an account at
        --   the beneficiaryBank (qv) or by explicit
        --   routingInformation. This element provides for the
        --   latter.
      deriving (Eq, Ord, Show)

-- | Adds an optional spread type element to the Schedule
--   to identify a long or short spread value.
data SpreadSchedule = SpreadSchedule with
    id_ : Optional Text
    initialValue : Decimal
        -- ^ The initial rate or amount, as the case may be. An
        --   initial rate of 5% would be represented as 0.05.
    step : [Step]
        -- ^ The schedule of step date and value pairs. On each
        --   step date the associated step value becomes effective
        --   A list of steps may be ordered in the document by
        --   ascending step date. An FpML document containing an
        --   unordered list of steps is still regarded as a
        --   conformant document.
    type_ : Optional SpreadScheduleType
      deriving (Eq, Ord, Show)

-- | Provides a reference to a spread schedule.
data SpreadScheduleReference = SpreadScheduleReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | Defines a Spread Type Scheme to identify a long or
--   short spread value.
data SpreadScheduleType = SpreadScheduleType with
    spreadScheduleTypeScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The code specification of whether a trade is settling
--   using standard settlement instructions as well as
--   whether it is a candidate for settlement netting.
data StandardSettlementStyleEnum
    = StandardSettlementStyleEnum_Standard ()
      -- ^ This trade will settle using standard pre-determined
      --   funds settlement instructions.
    | StandardSettlementStyleEnum_Net ()
      -- ^ This trade is a candidate for settlement netting.
    | StandardSettlementStyleEnum_StandardAndNet ()
      -- ^ This trade will settle using standard pre-determined
      --   funds settlement instructions and is a candidate for
      --   settlement netting.
    deriving (Eq, Ord, Show)

-- | A type defining a step date and step value pair. This
--   step definitions are used to define varying rate or
--   amount schedules, e.g. a notional amortization or a
--   step-up coupon schedule.
data Step = Step with
    id_ : Optional Text
    stepDate : Date
        -- ^ The date on which the associated stepValue becomes
        --   effective. This day may be subject to adjustment in
        --   accordance with a business day convention.
    stepValue : Decimal
        -- ^ The rate or amount which becomes effective on the
        --   associated stepDate. A rate of 5% would be
        --   represented as 0.05.
      deriving (Eq, Ord, Show)

-- | A type defining a step date and step value pair. This
--   step definitions are used to define varying rate or
--   amount schedules, e.g. a notional amortization or a
--   step-up coupon schedule.
data StepBase
    = StepBase_Step Step
    | StepBase_NonNegativeStep NonNegativeStep
    deriving (Eq, Ord, Show)

-- | The specification of whether a percentage rate
--   change, used to calculate a change in notional
--   outstanding, is expressed as a percentage of the
--   initial notional amount or the previously outstanding
--   notional amount.
data StepRelativeToEnum
    = StepRelativeToEnum_Initial ()
      -- ^ Change in notional to be applied is calculated by
      --   multiplying the percentage rate by the initial
      --   notional amount.
    | StepRelativeToEnum_Previous ()
      -- ^ Change in notional to be applied is calculated by
      --   multiplying the percentage rate by the previously
      --   outstanding notional amount.
    deriving (Eq, Ord, Show)

-- | A type defining a group of products making up a
--   single trade.
data Strategy = Strategy with
    id_ : Optional Text
    product_model : Optional Strategy_Product_model
    strategyComponentIdentifier : [StrategyComponentIdentification]
        -- ^ Provides distinct identification for a component of a
        --   strategy.
    premiumProductReference : Optional ProductReference
        -- ^ Indicates which product within a strategy represents
        --   the premium payment.
    product : [Product]
        -- ^ An abstract element used as a place holder for the
        --   substituting product elements.
      deriving (Eq, Ord, Show)

-- | Associates trade identifiers with components of a
--   strategy.
data StrategyComponentIdentification = StrategyComponentIdentification with
    tradeIdentifierReference : [PartyTradeIdentifierReference]
        -- ^ A reference to a party trade ID. If there are
        --   multiple trade IDs for a single component (e.g. USI,
        --   UTI, party-specific identifier), create a single
        --   "strategyComponentIdentifier" with a reference to the
        --   component, and multiple tradeIdentifierReferences,
        --   one referencing each applicable identifier.
    componentReference : ProductReference
        -- ^ A reference to a component of the strategy (typically
        --   a product).
      deriving (Eq, Ord, Show)

-- | A type for definining equity option simple strike or
--   calendar spread strategy features.
data StrategyFeature
    = StrategyFeature_StrikeSpread StrikeSpread
      -- ^ Definition of the upper strike in a strike spread.
    | StrategyFeature_CalendarSpread CalendarSpread
      -- ^ Definition of the later expiration date in a calendar
      --   spread.
    deriving (Eq, Ord, Show)

-- | A record type used inside Strategy
data Strategy_Product_model = Strategy_Product_model with
    primaryAssetClass : Optional AssetClass
        -- ^ A classification of the most important risk class of
        --   the trade. FpML defines a simple asset class
        --   categorization using a coding scheme.
    secondaryAssetClass : [AssetClass]
        -- ^ A classification of additional risk classes of the
        --   trade, if any. FpML defines a simple asset class
        --   categorization using a coding scheme.
    productType : [ProductType]
        -- ^ A classification of the type of product. FpML defines
        --   a simple product categorization using a coding
        --   scheme.
    productId : [ProductId]
        -- ^ A product reference identifier. The product ID is an
        --   identifier that describes the key economic
        --   characteristics of the trade type, with the exception
        --   of concepts such as size (notional, quantity, number
        --   of units) and price (fixed rate, strike, etc.) that
        --   are negotiated for each transaction. It can be used
        --   to hold identifiers such as the "UPI" (universal
        --   product identifier) required by certain regulatory
        --   reporting rules. It can also be used to hold
        --   identifiers of benchmark products or product
        --   temnplates used by certain trading systems or
        --   facilities. FpML does not define the domain values
        --   associated with this element. Note that the domain
        --   values for this element are not strictly an
        --   enumerated list.
    assetClass : [AssetClass]
        -- ^ A classification of the risk class of the trade. FpML
        --   defines a simple asset class categorization using a
        --   coding scheme.
      deriving (Eq, Ord, Show)

-- | A type that describes the set of street and building
--   number information that identifies a postal address
--   within a city.
data StreetAddress = StreetAddress with
    streetLine : [String]
        -- ^ An individual line of street and building number
        --   information, forming part of a postal address.
      deriving (Eq, Ord, Show)

-- | A type describing a single cap or floor rate.
data Strike = Strike with
    id_ : Optional Text
    strikeRate : Decimal
        -- ^ The rate for a cap or floor.
    buyer : Optional IdentifiedPayerReceiver
        -- ^ The buyer of the option
    seller : Optional IdentifiedPayerReceiver
        -- ^ The party that has sold.
      deriving (Eq, Ord, Show)

-- | A pointer style reference to a basket in the document
data StrikePriceBasketReference = StrikePriceBasketReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | A pointer style reference to a product leg in the
--   document
data StrikePriceUnderlyingReference = StrikePriceUnderlyingReference with
    href : Text
      deriving (Eq, Ord, Show)

-- | The specification of how an FX OTC option strike
--   price is quoted.
data StrikeQuoteBasisEnum
    = StrikeQuoteBasisEnum_PutCurrencyPerCallCurrency ()
      -- ^ The strike price is an amount of putCurrency per one
      --   unit of callCurrency.
    | StrikeQuoteBasisEnum_CallCurrencyPerPutCurrency ()
      -- ^ The strike price is an amount of callCurrency per one
      --   unit of putCurrency.
    deriving (Eq, Ord, Show)

-- | A type describing a schedule of cap or floor rates.
data StrikeSchedule = StrikeSchedule with
    id_ : Optional Text
    initialValue : Decimal
        -- ^ The initial rate or amount, as the case may be. An
        --   initial rate of 5% would be represented as 0.05.
    step : [Step]
        -- ^ The schedule of step date and value pairs. On each
        --   step date the associated step value becomes effective
        --   A list of steps may be ordered in the document by
        --   ascending step date. An FpML document containing an
        --   unordered list of steps is still regarded as a
        --   conformant document.
    buyer : Optional IdentifiedPayerReceiver
        -- ^ The buyer of the option
    seller : Optional IdentifiedPayerReceiver
        -- ^ The party that has sold.
      deriving (Eq, Ord, Show)

-- | A type for defining a strike spread feature.
data StrikeSpread = StrikeSpread with
    upperStrike : OptionStrike
        -- ^ Upper strike in a strike spread.
    upperStrikeNumberOfOptions : PositiveDecimal
        -- ^ Number of options at the upper strike price in a
        --   strike spread.
      deriving (Eq, Ord, Show)

-- | A string. FpML may define lenght restrictions in some
--   views.
type String = Text

-- | A type defining how a stub calculation period amount
--   is calculated and the start and end date of the stub.
--   A single floating rate tenor different to that used
--   for the regular part of the calculation periods
--   schedule may be specified, or two floating rate
--   tenors many be specified. If two floating rate tenors
--   are specified then Linear Interpolation (in
--   accordance with the 2000 ISDA Definitions, Section
--   8.3 Interpolation) is assumed to apply.
--   Alternatively, an actual known stub rate or stub
--   amount may be specified.
data Stub = Stub with
    choice_ : Stub_choice
    stubStartDate : Optional AdjustableOrRelativeDate
        -- ^ Start date of stub period. This was created to
        --   support use of the InterestRateStream within the
        --   Equity Derivative sphere, and this element is not
        --   expected to be produced in the representation of
        --   Interest Rate products.
    stubEndDate : Optional AdjustableOrRelativeDate
        -- ^ End date of stub period. This was created to support
        --   use of the InterestRateStream within the Equity
        --   Derivative sphere, and this element is not expected
        --   to be produced in the representation of Interest Rate
        --   products.
      deriving (Eq, Ord, Show)

-- | A type defining a floating rate.
data StubFloatingRate = StubFloatingRate with
    id_ : Optional Text
    floatingRateIndex : FloatingRateIndex
    indexTenor : Optional Period
        -- ^ The ISDA Designated Maturity, i.e. the tenor of the
        --   floating rate.
    floatingRateMultiplierSchedule : Optional Schedule
        -- ^ A rate multiplier or multiplier schedule to apply to
        --   the floating rate. A multiplier schedule is expressed
        --   as explicit multipliers and dates. In the case of a
        --   schedule, the step dates may be subject to adjustment
        --   in accordance with any adjustments specified in the
        --   calculationPeriodDatesAdjustments. The multiplier can
        --   be a positive or negative decimal. This element
        --   should only be included if the multiplier is not
        --   equal to 1 (one) for the term of the stream.
    spreadSchedule : [SpreadSchedule]
        -- ^ The ISDA Spread or a Spread schedule expressed as
        --   explicit spreads and dates. In the case of a
        --   schedule, the step dates may be subject to adjustment
        --   in accordance with any adjustments specified in
        --   calculationPeriodDatesAdjustments. The spread is a
        --   per annum rate, expressed as a decimal. For purposes
        --   of determining a calculation period amount, if
        --   positive the spread will be added to the floating
        --   rate and if negative the spread will be subtracted
        --   from the floating rate. A positive 10 basis point
        --   (0.1%) spread would be represented as 0.001.
    rateTreatment : Optional RateTreatmentEnum
        -- ^ The specification of any rate conversion which needs
        --   to be applied to the observed rate before being used
        --   in any calculations. The two common conversions are
        --   for securities quoted on a bank discount basis which
        --   will need to be converted to either a Money Market
        --   Yield or Bond Equivalent Yield. See the Annex to the
        --   2000 ISDA Definitions, Section 7.3. Certain General
        --   Definitions Relating to Floating Rate Options,
        --   paragraphs (g) and (h) for definitions of these
        --   terms.
    capRateSchedule : [StrikeSchedule]
        -- ^ The cap rate or cap rate schedule, if any, which
        --   applies to the floating rate. The cap rate (strike)
        --   is only required where the floating rate on a swap
        --   stream is capped at a certain level. A cap rate
        --   schedule is expressed as explicit cap rates and dates
        --   and the step dates may be subject to adjustment in
        --   accordance with any adjustments specified in
        --   calculationPeriodDatesAdjustments. The cap rate is
        --   assumed to be exclusive of any spread and is a per
        --   annum rate, expressed as a decimal. A cap rate of 5%
        --   would be represented as 0.05.
    floorRateSchedule : [StrikeSchedule]
        -- ^ The floor rate or floor rate schedule, if any, which
        --   applies to the floating rate. The floor rate (strike)
        --   is only required where the floating rate on a swap
        --   stream is floored at a certain strike level. A floor
        --   rate schedule is expressed as explicit floor rates
        --   and dates and the step dates may be subject to
        --   adjustment in accordance with any adjustments
        --   specified in calculationPeriodDatesAdjustments. The
        --   floor rate is assumed to be exclusive of any spread
        --   and is a per annum rate, expressed as a decimal. A
        --   floor rate of 5% would be represented as 0.05.
      deriving (Eq, Ord, Show)

-- | Element to define how to deal with a none standard
--   calculation period within a swap stream.
data StubPeriodTypeEnum
    = StubPeriodTypeEnum_ShortInitial ()
      -- ^ If there is a non regular period remaining it is left
      --   shorter than the streams calculation period frequency
      --   and placed at the start of the stream
    | StubPeriodTypeEnum_ShortFinal ()
      -- ^ If there is a non regular period remaining it is left
      --   shorter than the streams calculation period frequency
      --   and placed at the end of the stream
    | StubPeriodTypeEnum_LongInitial ()
      -- ^ If there is a non regular period remaining it is
      --   placed at the start of the stream and combined with
      --   the adjacent calculation period to give a long first
      --   calculation period
    | StubPeriodTypeEnum_LongFinal ()
      -- ^ If there is a non regular period remaining it is
      --   placed at the end of the stream and combined with the
      --   adjacent calculation period to give a long last
      --   calculation period
    deriving (Eq, Ord, Show)

-- | A type defining how a stub calculation period amount
--   is calculated. A single floating rate tenor different
--   to that used for the regular part of the calculation
--   periods schedule may be specified, or two floating
--   rate tenors many be specified. If two floating rate
--   tenors are specified then Linear Interpolation (in
--   accordance with the 2000 ISDA Definitions, Section
--   8.3 Interpolation) is assumed to apply.
--   Alternatively, an actual known stub rate or stub
--   amount may be specified.
data StubValue
    = StubValue_FloatingRate [StubFloatingRate]
      -- ^ The rates to be applied to the initial or final stub
      --   may be the linear interpolation of two different
      --   rates. While the majority of the time, the rate
      --   indices will be the same as that specified in the
      --   stream and only the tenor itself will be different,
      --   it is possible to specift two different rates. For
      --   example, a 2 month stub period may use the linear
      --   interpolation of a 1 month and 3 month rate. The
      --   different rates would be specified in this component.
      --   Note that a maximum of two rates can be specified. If
      --   a stub period uses the same floating rate index,
      --   including tenor, as the regular calculation periods
      --   then this should not be specified again within this
      --   component, i.e. the stub calculation period amount
      --   component may not need to be specified even if there
      --   is an initial or final stub period. If a stub period
      --   uses a different floating rate index compared to the
      --   regular calculation periods then this should be
      --   specified within this component. If specified here,
      --   they are likely to have id attributes, allowing them
      --   to be referenced from within the cashflows component.
    | StubValue_StubRate Decimal
      -- ^ An actual rate to apply for the initial or final stub
      --   period may have been agreed between the principal
      --   parties (in a similar way to how an initial rate may
      --   have been agreed for the first regular period). If an
      --   actual stub rate has been agreed then it would be
      --   included in this component. It will be a per annum
      --   rate, expressed as a decimal. A stub rate of 5% would
      --   be represented as 0.05.
    | StubValue_StubAmount Money
      -- ^ An actual amount to apply for the initial or final
      --   stub period may have been agreed between th two
      --   parties. If an actual stub amount has been agreed
      --   then it would be included in this component.
    deriving (Eq, Ord, Show)

-- | A variant type used inside Stub
data Stub_choice
    = Stub_choice_FloatingRate [StubFloatingRate]
      -- ^ The rates to be applied to the initial or final stub
      --   may be the linear interpolation of two different
      --   rates. While the majority of the time, the rate
      --   indices will be the same as that specified in the
      --   stream and only the tenor itself will be different,
      --   it is possible to specift two different rates. For
      --   example, a 2 month stub period may use the linear
      --   interpolation of a 1 month and 3 month rate. The
      --   different rates would be specified in this component.
      --   Note that a maximum of two rates can be specified. If
      --   a stub period uses the same floating rate index,
      --   including tenor, as the regular calculation periods
      --   then this should not be specified again within this
      --   component, i.e. the stub calculation period amount
      --   component may not need to be specified even if there
      --   is an initial or final stub period. If a stub period
      --   uses a different floating rate index compared to the
      --   regular calculation periods then this should be
      --   specified within this component. If specified here,
      --   they are likely to have id attributes, allowing them
      --   to be referenced from within the cashflows component.
    | Stub_choice_StubRate Decimal
      -- ^ An actual rate to apply for the initial or final stub
      --   period may have been agreed between the principal
      --   parties (in a similar way to how an initial rate may
      --   have been agreed for the first regular period). If an
      --   actual stub rate has been agreed then it would be
      --   included in this component. It will be a per annum
      --   rate, expressed as a decimal. A stub rate of 5% would
      --   be represented as 0.05.
    | Stub_choice_StubAmount Money
      -- ^ An actual amount to apply for the initial or final
      --   stub period may have been agreed between th two
      --   parties. If an actual stub amount has been agreed
      --   then it would be included in this component.
    deriving (Eq, Ord, Show)

-- | Provides information about a regulator or other
--   supervisory body that an organization is registered
--   with.
data SupervisorRegistration = SupervisorRegistration with
    supervisoryBody : SupervisoryBody
        -- ^ The regulator or other supervisory body the
        --   organization is registered with (e.g. SEC).
    registrationNumber : Optional RegulatorId
        -- ^ The ID assigned by the regulator (e.g. SEC's Central
        --   Index Key).
      deriving (Eq, Ord, Show)

-- | An identifier of an organization that supervises or
--   regulates trading activity, e.g. CFTC, SEC, FSA,
--   ODRF, etc.
data SupervisoryBody = SupervisoryBody with
    supervisoryBodyScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data SwaptionPhysicalSettlement = SwaptionPhysicalSettlement with
    clearedPhysicalSettlement : Bool
        -- ^ Specifies whether the swap resulting from physical
        --   settlement of the swaption transaction will clear
        --   through a clearing house. The meaning of Cleared
        --   Physical Settlement is defined in the 2006 ISDA
        --   Definitions, Section 15.2 (published in Supplement
        --   number 28).
    predeterminedClearingOrganizationPartyReference : Optional PartyReference
        -- ^ A reference to the clearing organization (CCP, DCO)
        --   to which the trade should be cleared.
      deriving (Eq, Ord, Show)

-- | A type that represents a telephonic contact.
data TelephoneNumber = TelephoneNumber with
    type_ : Optional TelephoneTypeEnum
        -- ^ The type of telephone number (work, personal,
        --   mobile).
    number : String
        -- ^ A telephonic contact.
      deriving (Eq, Ord, Show)

-- | The type of telephone number used to reach a contact.
data TelephoneTypeEnum
    = TelephoneTypeEnum_Work ()
      -- ^ A number used primarily for work-related calls.
      --   Includes home office numbers used primarily for work
      --   purposes.
    | TelephoneTypeEnum_Mobile ()
      -- ^ A number on a mobile telephone or pager that is often
      --   or usually used for work-related calls. This type of
      --   number can be used for urgent work related business
      --   when a work number is not sufficient to contact the
      --   person or firm.
    | TelephoneTypeEnum_Fax ()
      -- ^ A number used primarily for work-related facsimile
      --   transmissions.
    | TelephoneTypeEnum_Personal ()
      -- ^ A number used primarily for nonwork-related calls.
      --   (Normally this type of number would be used only as
      --   an emergency backup number, not as a regular course
      --   of business).
    deriving (Eq, Ord, Show)

-- | A class defining the content model for a term deposit
--   product.
data TermDeposit = TermDeposit with
    id_ : Optional Text
    product_model : Optional TermDeposit_Product_model
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    startDate : Date
        -- ^ The start date of the calculation period.
    maturityDate : Date
        -- ^ The end date of the calculation period. This date
        --   should already be adjusted for any applicable
        --   business day convention.
    fxTenor_model : Optional TermDeposit_FxTenor_model
    principal : PositiveMoney
        -- ^ The principal amount of the trade.
    fixedRate : PositiveDecimal
        -- ^ The calculation period fixed rate. A per annum rate,
        --   expressed as a decimal. A fixed rate of 5% would be
        --   represented as 0.05.
    dayCountFraction : DayCountFraction
        -- ^ The day count fraction.
    features : Optional TermDepositFeatures
        -- ^ An optional container that holds additional features
        --   of the deposit (e.g. Dual Currency feature).
    interest : Optional Money
        -- ^ The total interest of at maturity of the trade.
    payment : [Payment]
        -- ^ A known payment between two parties.
      deriving (Eq, Ord, Show)

data TermDepositFeatures = TermDepositFeatures with
    dualCurrency : DualCurrencyFeature
      deriving (Eq, Ord, Show)

-- | A variant type used inside TermDeposit
data TermDeposit_FxTenor_model
    = TermDeposit_FxTenor_model_TenorName FxTenorPeriodEnum
      -- ^ A tenor expressed with a standard business term (i.e.
      --   Spot, TomorrowNext, etc.)
    | TermDeposit_FxTenor_model_TenorPeriod Period
      -- ^ A tenor expressed as a period type and multiplier
      --   (e.g. 1D, 1Y, etc.)
    deriving (Eq, Ord, Show)

-- | A record type used inside TermDeposit
data TermDeposit_Product_model = TermDeposit_Product_model with
    primaryAssetClass : Optional AssetClass
        -- ^ A classification of the most important risk class of
        --   the trade. FpML defines a simple asset class
        --   categorization using a coding scheme.
    secondaryAssetClass : [AssetClass]
        -- ^ A classification of additional risk classes of the
        --   trade, if any. FpML defines a simple asset class
        --   categorization using a coding scheme.
    productType : [ProductType]
        -- ^ A classification of the type of product. FpML defines
        --   a simple product categorization using a coding
        --   scheme.
    productId : [ProductId]
        -- ^ A product reference identifier. The product ID is an
        --   identifier that describes the key economic
        --   characteristics of the trade type, with the exception
        --   of concepts such as size (notional, quantity, number
        --   of units) and price (fixed rate, strike, etc.) that
        --   are negotiated for each transaction. It can be used
        --   to hold identifiers such as the "UPI" (universal
        --   product identifier) required by certain regulatory
        --   reporting rules. It can also be used to hold
        --   identifiers of benchmark products or product
        --   temnplates used by certain trading systems or
        --   facilities. FpML does not define the domain values
        --   associated with this element. Note that the domain
        --   values for this element are not strictly an
        --   enumerated list.
    assetClass : [AssetClass]
        -- ^ A classification of the risk class of the trade. FpML
        --   defines a simple asset class categorization using a
        --   coding scheme.
      deriving (Eq, Ord, Show)

-- | A type that describes why a trade terminated.
data TerminatingEvent = TerminatingEvent with
    terminatingEventScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | Defines points in the day when equity option exercise
--   and valuation can occur.
data TimeTypeEnum
    = TimeTypeEnum_Close ()
      -- ^ The official closing time of the exchange on the
      --   valuation date.
    | TimeTypeEnum_Open ()
      -- ^ The official opening time of the exchange on the
      --   valuation date.
    | TimeTypeEnum_OSP ()
      -- ^ The time at which the official settlement price is
      --   determined.
    | TimeTypeEnum_SpecificTime ()
      -- ^ The time specified in the element
      --   equityExpirationTime or valuationTime (as
      --   appropriate)
    | TimeTypeEnum_XETRA ()
      -- ^ The time at which the official settlement price
      --   (following the auction by the exchange) is determined
      --   by the exchange.
    | TimeTypeEnum_DerivativesClose ()
      -- ^ The official closing time of the derivatives exchange
      --   on which a derivative contract is listed on that
      --   security underlyer.
    | TimeTypeEnum_AsSpecifiedInMasterConfirmation ()
      -- ^ The time is determined as provided in the relevant
      --   Master Confirmation.
    deriving (Eq, Ord, Show)

-- | The type or meaning of a timestamp.
data TimestampTypeScheme = TimestampTypeScheme with
    timestampScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A geophraphic location for the purposes of defining a
--   prevailing time according to the tz database.
data TimezoneLocation = TimezoneLocation with
    timezoneLocationScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A token. FpML redefines this type so that in some
--   views it can enforce that it may not be empty
type Token = Text

-- | A type defining a token of length between 1 and 60
--   characters inclusive.
type Token60 = Token

-- | The specification of, for American-style digitals,
--   whether the trigger level must be touched or not
--   touched.
data TouchConditionEnum
    = TouchConditionEnum_Touch ()
      -- ^ The spot rate must have touched the predetermined
      --   trigger rate at any time over the life of the option
      --   for the payout to occur.
    | TouchConditionEnum_Notouch ()
      -- ^ The spot rate has not touched the predetermined
      --   trigger rate at any time over the life of the option
      --   for the payout to occur.
    deriving (Eq, Ord, Show)

data TouchRateObservation = TouchRateObservation with
    observationDate : Date
        -- ^ The date on which the rate observation occurred, in
        --   order to trigger the barrier event.observationDate
    observationTime : Optional BusinessCenterTime
        -- ^ The time at which the observation occurred.
    informationSource : Optional InformationSource
    choice_1 : TouchRateObservation_choice
    triggerCondition : TriggerConditionEnum
        -- ^ The side of the trigger rate/price (level) on which a
        --   rate observation occurred, in order to trigger the
        --   barrier event.
    choice_2 : TouchRateObservation_choice_3
      deriving (Eq, Ord, Show)

-- | A variant type used inside TouchRateObservation
data TouchRateObservation_choice
    = TouchRateObservation_choice_Items1 TouchRateObservation_items
    | TouchRateObservation_choice_Items2 TouchRateObservation_items_2
    deriving (Eq, Ord, Show)

-- | A variant type used inside TouchRateObservation
data TouchRateObservation_choice_2
    = TouchRateObservation_choice_2_SettlementType SettlementTypeEnum
    | TouchRateObservation_choice_2_CashSettlement SimplePayment
    | TouchRateObservation_choice_2_PhysicalSettlement PhysicalSettlement
    deriving (Eq, Ord, Show)

-- | A variant type used inside TouchRateObservation
data TouchRateObservation_choice_3
    = TouchRateObservation_choice_3_Items TouchRateObservation_items_3
    | TouchRateObservation_choice_3_IsExercisable Bool
      -- ^ If the touch or no touch event hasn't generated an
      --   exercise, then we specify whether the option is
      --   exercisable or not.
    deriving (Eq, Ord, Show)

-- | A record type used inside TouchRateObservation
data TouchRateObservation_items = TouchRateObservation_items with
    triggerRate : Decimal
        -- ^ The rate value (level) which was attained/breached,
        --   in order to trigger the barrier event.
    quotedCurrencyPair : QuotedCurrencyPair
        -- ^ Defines the currency pair and quote basis for an FX
        --   rate.
    observedRate : Optional Decimal
        -- ^ The observed rate value which triggered the barrier
        --   event.
      deriving (Eq, Ord, Show)

-- | A record type used inside TouchRateObservation
data TouchRateObservation_items_2 = TouchRateObservation_items_2 with
    triggerPrice : PositiveMoney
        -- ^ The price value (level) which was attained/breached,
        --   in order to trigger the barrier event.
    observedPrice : Optional PositiveMoney
        -- ^ The observed price value which triggered the barrier
        --   event.
      deriving (Eq, Ord, Show)

-- | A record type used inside TouchRateObservation
data TouchRateObservation_items_3 = TouchRateObservation_items_3 with
    exerciseSide : Optional ExerciseSideEnum
    choice_ : TouchRateObservation_choice_2
    payment : Optional NonNegativePayment
    clearingInstructions : Optional ClearingInstructions
      deriving (Eq, Ord, Show)

-- | A type defining an FpML trade.
data Trade = Trade with
    id_ : Optional Text
    tradeHeader : TradeHeader
        -- ^ The information on the trade which is not product
        --   specific, e.g. trade date.
    product : Product
        -- ^ An abstract element used as a place holder for the
        --   substituting product elements.
    otherPartyPayment : [Payment]
        -- ^ Other fees or additional payments associated with the
        --   trade, e.g. broker commissions, where one or more of
        --   the parties involved are not principal parties
        --   involved in the trade.
    brokerPartyReference : [PartyReference]
        -- ^ Identifies that party (or parties) that brokered this
        --   trade.
    calculationAgent : Optional CalculationAgent
        -- ^ The ISDA calculation agent responsible for performing
        --   duties as defined in the applicable product
        --   definitions.
    calculationAgentBusinessCenter : Optional BusinessCenter
        -- ^ The city in which the office through which ISDA
        --   Calculation Agent is acting for purposes of the
        --   transaction is located The short-form confirm for a
        --   trade that is executed under a Sovereign or Asia
        --   Pacific Master Confirmation Agreement ( MCA ), does
        --   not need to specify the Calculation Agent. However,
        --   the confirm does need to specify the Calculation
        --   Agent City. This is due to the fact that the MCA sets
        --   the value for Calculation Agent but does not set the
        --   value for Calculation Agent City.
    determiningParty : [PartyReference]
        -- ^ The party referenced is the ISDA Determination Party
        --   that specified in the related Confirmation as
        --   Determination Party.
    barrierDeterminationAgent : Optional PartyReference
        -- ^ The party referenced is specified in the related
        --   Confirmation as Barrier Determination Agent.
    hedgingParty : [PartyReference]
        -- ^ The party referenced is the ISDA Hedging Party that
        --   specified in the related Confirmation as Hedging, or
        --   if no Hedging Party is specified, either party to the
        --   Transaction.
    collateral : Optional Collateral
        -- ^ Defines collateral obiligations of a Party
    documentation : Optional Documentation
        -- ^ Defines the definitions that govern the document and
        --   should include the year and type of definitions
        --   referenced, along with any relevant documentation
        --   (such as master agreement) and the date it was
        --   signed.
    governingLaw : Optional GoverningLaw
        -- ^ Identification of the law governing the transaction.
    allocations : [Allocations]
        -- ^ "Short-form" representation of allocations in which
        --   the key block economics are stated once within the
        --   trade structure, and the allocation data is contained
        --   in this allocations structure.
    approvals : Optional Approvals
        -- ^ A container for approval states in the workflow.
      deriving (Eq, Ord, Show)

-- | A structure describing a negotiated amendment.
data TradeAmendmentContent = TradeAmendmentContent with
    eventIdentifier : [BusinessEventIdentifier]
    trade : Trade
        -- ^ A full description of the amended trade (i.e. the
        --   trade after the amendment).
    agreementDate : Date
        -- ^ The date on which the change was agreed.
    executionDateTime : Optional ExecutionDateTime
        -- ^ The date and time at which the negotiated change to
        --   the terms of the original contract was agreed, such
        --   as via telephone or electronic trading system (i.e.,
        --   agreement date/time).
    effectiveDate : Date
        -- ^ The date on which the change become effective.
    reportingNotionalChange_model : Optional TradeAmendmentContent_ReportingNotionalChange_model
    payment : [Payment]
        -- ^ Describes a payment made in settlement of the change.
        --   Normally there will be a single fee, but there could
        --   be additional payments such as principal exchanges
        --   resulting from the termination.
      deriving (Eq, Ord, Show)

-- | A record type used inside TradeAmendmentContent
data TradeAmendmentContent_ReportingNotionalChange_model = TradeAmendmentContent_ReportingNotionalChange_model with
    notionalChange : Optional NotionalChangeEnum
        -- ^ Indication as to whether the transaction is an
        --   increase or decrease of notional of a derivative
        --   contract. Only applies when there is change in
        --   notional for a derivative contract
    choice_ : TradeAmendmentContent_choice
      deriving (Eq, Ord, Show)

-- | A variant type used inside TradeAmendmentContent
data TradeAmendmentContent_choice
    = TradeAmendmentContent_choice_ChangeInNotional [MoneyRef]
      -- ^ The change in notional amount for a prior report as a
      --   result of this event. The current notional will be
      --   reported in the trade itself. This corresponds to
      --   MiFIR Nominal or Monetary amount values; these can be
      --   distinguished by the esmaNotionalType indicator.
    | TradeAmendmentContent_choice_ChangeInNumberOfOptions [AmountRef]
      -- ^ The change in nominal amount from a prior report as a
      --   result of this event. The current number of options
      --   will be reported in the trade itself. This
      --   corresponds to the MiFIR "units" value.
    | TradeAmendmentContent_choice_ChangeInQuantity [UnitQuantityRef]
      -- ^ The change in quantity(s) from a prior report as a
      --   result of this event. The current quantity will be
      --   reported in the trade itself. This corresponds to the
      --   MiFIR "units" value.
    deriving (Eq, Ord, Show)

-- | A scheme used to categorize positions.
data TradeCategory = TradeCategory with
    categoryScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | Defines the structure for a message indicating that a
--   trade is being changed due to a non-negotiated event.
data TradeChangeAdvice = TradeChangeAdvice with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    isCorrection : Bool
        -- ^ Indicates if this message corrects an earlier
        --   request.
    correlationAndSequence_model : Optional TradeChangeAdvice_CorrelationAndSequence_model
    onBehalfOf_model : Optional TradeChangeAdvice_OnBehalfOf_model
    change : TradeChangeContent
        -- ^ Describes the details of the change.
    eventValuation_model : Optional TradeChangeAdvice_EventValuation_model
    paymentDetails : [PaymentDetails]
        -- ^ Details of the payments, like amount breakdowns,
        --   settlement information.
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | Defines the structure for a message retracting a
--   prior change advice.
data TradeChangeAdviceRetracted = TradeChangeAdviceRetracted with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    correlationAndSequence_model : Optional TradeChangeAdviceRetracted_CorrelationAndSequence_model
    onBehalfOf_model : Optional TradeChangeAdviceRetracted_OnBehalfOf_model
    tradeIdentifier : [PartyTradeIdentifier]
        -- ^ The qualified identifiers of the subject trade.
    change : Optional TradeChangeContent
        -- ^ Describes the details of the change being retracted.
    paymentDetails : [PaymentDetails]
        -- ^ Details of the payments, like amount breakdowns,
        --   settlement information.
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | A record type used inside TradeChangeAdviceRetracted
data TradeChangeAdviceRetracted_CorrelationAndSequence_model = TradeChangeAdviceRetracted_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside TradeChangeAdviceRetracted
data TradeChangeAdviceRetracted_OnBehalfOf_model = TradeChangeAdviceRetracted_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside TradeChangeAdvice
data TradeChangeAdvice_CorrelationAndSequence_model = TradeChangeAdvice_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside TradeChangeAdvice
data TradeChangeAdvice_EventValuation_model = TradeChangeAdvice_EventValuation_model with
    quote : [BasicQuotation]
        -- ^ Pricing information for the trade.
      deriving (Eq, Ord, Show)

-- | A record type used inside TradeChangeAdvice
data TradeChangeAdvice_OnBehalfOf_model = TradeChangeAdvice_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A structure describing a trade change.
data TradeChangeBase = TradeChangeBase with
    eventIdentifier : [BusinessEventIdentifier]
    choice_ : TradeChangeBase_choice
    resultingTrade : Optional Trade
    agreementDate : Date
        -- ^ The date on which the change was agreed.
    executionDateTime : Optional ExecutionDateTime
        -- ^ The date and time at which the negotiated change to
        --   the terms of the original contract was agreed, such
        --   as via telephone or electronic trading system (i.e.,
        --   agreement date/time).
    effectiveDate : Date
        -- ^ The date on which the change become effective.
    payment : [Payment]
        -- ^ Describes a payment made in settlement of the change.
        --   Normally there will be a single fee, but there could
        --   be additional payments such as principal exchanges
        --   resulting from the termination.
      deriving (Eq, Ord, Show)

-- | A variant type used inside TradeChangeBase
data TradeChangeBase_choice
    = TradeChangeBase_choice_TradeIdentifier [PartyTradeIdentifier]
    | TradeChangeBase_choice_OriginalTrade Trade
    deriving (Eq, Ord, Show)

-- | A structure describing a non-negotiated trade
--   resulting from a market event.
data TradeChangeContent = TradeChangeContent with
    choice_ : Optional TradeChangeContent_choice
    trade : Trade
        -- ^ A full description of the amended trade.
    effectiveDate : Date
        -- ^ The date on which the change become effective
    changeEvent : ChangeEvent
        -- ^ Abstract substitutable place holder for specific
        --   change details.
    payment : Optional Payment
        -- ^ Describes a payment made in settlement of the change.
      deriving (Eq, Ord, Show)

-- | A variant type used inside TradeChangeContent
data TradeChangeContent_choice
    = TradeChangeContent_choice_OldTradeIdentifier PartyTradeIdentifier
      -- ^ The original qualified trade identifier.
    | TradeChangeContent_choice_OldTrade Trade
      -- ^ The original trade details.
    deriving (Eq, Ord, Show)

-- | A type used to record the details of a difference
--   between two business objects/
data TradeDifference = TradeDifference with
    differenceType : DifferenceTypeEnum
        -- ^ The type of difference that exists.
    differenceSeverity : DifferenceSeverityEnum
        -- ^ An indication of the severity of the difference.
    element : String
        -- ^ The name of the element affected.
    basePath : Optional String
        -- ^ XPath to the element in the base object.
    baseValue : Optional String
        -- ^ The value of the element in the base object.
    otherPath : Optional String
        -- ^ XPath to the element in the other object.
    otherValue : Optional String
        -- ^ Value of the element in the other trade.
    missingElement : [String]
        -- ^ Element(s) that are missing in the other trade.
    extraElement : [String]
        -- ^ Element(s) that are extraneous in the other object.
    message : String
        -- ^ A human readable description of the problem.
      deriving (Eq, Ord, Show)

-- | A type defining trade related information which is
--   not product specific.
data TradeHeader = TradeHeader with
    partyTradeIdentifier : [PartyTradeIdentifier]
        -- ^ The trade reference identifier(s) allocated to the
        --   trade by the parties involved.
    partyTradeInformation : [PartyTradeInformation]
        -- ^ Additional trade information that may be provided by
        --   each involved party.
    tradeSummary : Optional TradeSummary
    productSummary : Optional ProductSummary
    originatingPackage : Optional PackageSummary
        -- ^ Information about the trade package if any that the
        --   trade originated from.
    tradeDate : IdentifiedDate
        -- ^ The trade date. This is the date the trade was
        --   originally executed. In the case of a novation, the
        --   novated part of the trade should be reported (by both
        --   the remaining party and the transferee) using a trade
        --   date corresponding to the date the novation was
        --   agreed. The remaining part of a trade should be
        --   reported (by both the transferor and the remaining
        --   party) using a trade date corresponding to the
        --   original execution date.
    clearedDate : Optional IdentifiedDate
        -- ^ If the trade was cleared (novated) through a central
        --   counterparty clearing service, this represents the
        --   date the trade was cleared (transferred to the
        --   central counterparty).
      deriving (Eq, Ord, Show)

-- | A trade reference identifier allocated by a party.
--   FpML does not define the domain values associated
--   with this element. Note that the domain values for
--   this element are not strictly an enumerated list.
data TradeId = TradeId with
    tradeIdScheme : NonEmptyURI
    id_ : Optional Text
    content : NonEmptyScheme
      deriving (Eq, Ord, Show)

-- | A type defining a trade identifier issued by the
--   indicated party.
data TradeIdentifier = TradeIdentifier with
    id_ : Optional Text
    choice_ : TradeIdentifier_choice_2
      deriving (Eq, Ord, Show)

-- | A type defining a trade identifier with a reference
--   to the party that this trade is associated with.
data TradeIdentifierExtended = TradeIdentifierExtended with
    id_ : Optional Text
    choice_ : TradeIdentifierExtended_choice_2
    associatedPartyReference : PartyReference
      deriving (Eq, Ord, Show)

-- | A variant type used inside TradeIdentifierExtended
data TradeIdentifierExtended_choice
    = TradeIdentifierExtended_choice_TradeId TradeId
    | TradeIdentifierExtended_choice_VersionedTradeId VersionedTradeId
      -- ^ A trade identifier accompanied by a version number.
      --   In regulatory reporting views, this should be avoided
      --   except for internal mnessaging.
    deriving (Eq, Ord, Show)

-- | A variant type used inside TradeIdentifierExtended
data TradeIdentifierExtended_choice_2
    = TradeIdentifierExtended_choice_2_Items1 TradeIdentifierExtended_items
    | TradeIdentifierExtended_choice_2_Items2 TradeIdentifierExtended_items_2
    deriving (Eq, Ord, Show)

-- | A record type used inside TradeIdentifierExtended
data TradeIdentifierExtended_items = TradeIdentifierExtended_items with
    issuer : IssuerId
    tradeId : TradeId
      deriving (Eq, Ord, Show)

-- | A record type used inside TradeIdentifierExtended
data TradeIdentifierExtended_items_2 = TradeIdentifierExtended_items_2 with
    partyReference : PartyReference
        -- ^ Reference to a party.
    accountReference : Optional AccountReference
        -- ^ Reference to an account.
    choice_ : [TradeIdentifierExtended_choice]
      deriving (Eq, Ord, Show)

-- | A variant type used inside TradeIdentifier
data TradeIdentifier_choice
    = TradeIdentifier_choice_TradeId TradeId
    | TradeIdentifier_choice_VersionedTradeId VersionedTradeId
      -- ^ A trade identifier accompanied by a version number.
      --   In regulatory reporting views, this should be avoided
      --   except for internal mnessaging.
    deriving (Eq, Ord, Show)

-- | A variant type used inside TradeIdentifier
data TradeIdentifier_choice_2
    = TradeIdentifier_choice_2_Items1 TradeIdentifier_items
    | TradeIdentifier_choice_2_Items2 TradeIdentifier_items_2
    deriving (Eq, Ord, Show)

-- | A record type used inside TradeIdentifier
data TradeIdentifier_items = TradeIdentifier_items with
    issuer : IssuerId
    tradeId : TradeId
      deriving (Eq, Ord, Show)

-- | A record type used inside TradeIdentifier
data TradeIdentifier_items_2 = TradeIdentifier_items_2 with
    partyReference : PartyReference
        -- ^ Reference to a party.
    accountReference : Optional AccountReference
        -- ^ Reference to an account.
    choice_ : [TradeIdentifier_choice]
      deriving (Eq, Ord, Show)

-- | A structure describing a change to the size of a
--   single leg or stream of a trade.
data TradeLegPriceChange = TradeLegPriceChange with
    choice_ : TradeLegPriceChange_choice
    priceChangeAmount : Decimal
    newPrice : Decimal
      deriving (Eq, Ord, Show)

-- | A variant type used inside TradeLegPriceChange
data TradeLegPriceChange_choice
    = TradeLegPriceChange_choice_PriceReference Reference
    | TradeLegPriceChange_choice_InstrumentId [InstrumentId]
      -- ^ Identification of the underlying asset, using public
      --   and/or private identifiers.
    deriving (Eq, Ord, Show)

-- | A structure describing a change to the size of a
--   single leg or stream of a trade.
data TradeLegSizeChange
    = TradeLegSizeChange_Items1 TradeLegSizeChange_items
    | TradeLegSizeChange_Items2 TradeLegSizeChange_items_2
    | TradeLegSizeChange_Items3 TradeLegSizeChange_items_3
    | TradeLegSizeChange_Items4 TradeLegSizeChange_items_4
    | TradeLegSizeChange_Items5 TradeLegSizeChange_items_5
    deriving (Eq, Ord, Show)

-- | A record type used inside TradeLegSizeChange
data TradeLegSizeChange_items = TradeLegSizeChange_items with
    notionalReference : Optional NotionalReference
    changeInNotionalAmount : NonNegativeMoney
    outstandingNotionalAmount : NonNegativeMoney
      deriving (Eq, Ord, Show)

-- | A record type used inside TradeLegSizeChange
data TradeLegSizeChange_items_2 = TradeLegSizeChange_items_2 with
    numberOfOptionsReference : Optional NumberOfOptionsReference
    changeInNumberOfOptions : Decimal
    outstandingNumberOfOptions : Decimal
      deriving (Eq, Ord, Show)

-- | A record type used inside TradeLegSizeChange
data TradeLegSizeChange_items_3 = TradeLegSizeChange_items_3 with
    numberOfUnitsReference : Optional NumberOfUnitsReference
    changeInNumberOfUnits : Decimal
    outstandingNumberOfUnits : Decimal
      deriving (Eq, Ord, Show)

-- | A record type used inside TradeLegSizeChange
data TradeLegSizeChange_items_4 = TradeLegSizeChange_items_4 with
    notionalScheduleReference : Optional NotionalReference
    changeInNotionalSchedule : NonNegativeAmountSchedule
    outstandingNotionalSchedule : NonNegativeAmountSchedule
      deriving (Eq, Ord, Show)

-- | A record type used inside TradeLegSizeChange
data TradeLegSizeChange_items_5 = TradeLegSizeChange_items_5 with
    knownAmountReference : Optional AmountReference
    changeInKnownAmount : NonNegativeMoney
    outstandingKnownAmount : NonNegativeMoney
      deriving (Eq, Ord, Show)

-- | A structure describing a trade maturing.
data TradeMaturity = TradeMaturity with
    tradeIdentifier : [PartyTradeIdentifier]
    date_ : Date
      deriving (Eq, Ord, Show)

-- | A structure describing a change to the size of a
--   trade.
data TradeNotionalChange = TradeNotionalChange with
    eventIdentifier : [BusinessEventIdentifier]
    choice_1 : TradeNotionalChange_choice
    resultingTrade : Optional Trade
    agreementDate : Date
        -- ^ The date on which the change was agreed.
    executionDateTime : Optional ExecutionDateTime
        -- ^ The date and time at which the negotiated change to
        --   the terms of the original contract was agreed, such
        --   as via telephone or electronic trading system (i.e.,
        --   agreement date/time).
    effectiveDate : Date
        -- ^ The date on which the change become effective.
    payment : [Payment]
        -- ^ Describes a payment made in settlement of the change.
        --   Normally there will be a single fee, but there could
        --   be additional payments such as principal exchanges
        --   resulting from the termination.
    choice_2 : TradeNotionalChange_choice_2
    priceChange : [TradeLegPriceChange]
      deriving (Eq, Ord, Show)

-- | A variant type used inside TradeNotionalChange
data TradeNotionalChange_choice
    = TradeNotionalChange_choice_TradeIdentifier [PartyTradeIdentifier]
    | TradeNotionalChange_choice_OriginalTrade Trade
    deriving (Eq, Ord, Show)

-- | A variant type used inside TradeNotionalChange
data TradeNotionalChange_choice_2
    = TradeNotionalChange_choice_2_Items1 TradeNotionalChange_items
    | TradeNotionalChange_choice_2_Items2 TradeNotionalChange_items_2
    | TradeNotionalChange_choice_2_Items3 TradeNotionalChange_items_3
    | TradeNotionalChange_choice_2_SizeChange [TradeLegSizeChange]
    deriving (Eq, Ord, Show)

-- | A record type used inside TradeNotionalChange
data TradeNotionalChange_items = TradeNotionalChange_items with
    changeInNotionalAmount : [NonNegativeMoney]
        -- ^ Specifies the fixed amount by which the Notional
        --   Amount changes. The direction of the change (increase
        --   or decrease) is specified by the event type
        --   (Termination => reduction, Increase => greater.)
    outstandingNotionalAmount : [NonNegativeMoney]
        -- ^ Specifies the Notional amount after the Change
      deriving (Eq, Ord, Show)

-- | A record type used inside TradeNotionalChange
data TradeNotionalChange_items_2 = TradeNotionalChange_items_2 with
    changeInNumberOfOptions : Decimal
        -- ^ Specifies the fixed amount by which the Number of
        --   Options changes
    outstandingNumberOfOptions : Decimal
        -- ^ Specifies the Number of Options after the Change.
      deriving (Eq, Ord, Show)

-- | A record type used inside TradeNotionalChange
data TradeNotionalChange_items_3 = TradeNotionalChange_items_3 with
    changeInNumberOfUnits : Decimal
        -- ^ Specifies the fixed amount by which the Number of
        --   Units changes
    outstandingNumberOfUnits : Decimal
        -- ^ Specifies the Number of Units
      deriving (Eq, Ord, Show)

-- | A structure describing a novation.
data TradeNovationContent = TradeNovationContent with
    eventIdentifier : [BusinessEventIdentifier]
    choice_1 : TradeNovationContent_choice_3
    transferor : PartyReference
        -- ^ A pointer style reference to a party identifier
        --   defined elsewhere in the document. In a three-way
        --   novation the party referenced is the Transferor
        --   (outgoing party) in the novation. The Transferor
        --   means a party which transfers by novation to a
        --   Transferee all of its rights, liabilities, duties and
        --   obligations with respect to a Remaining Party. In a
        --   four-way novation the party referenced is Transferor
        --   1 which transfers by novation to Transferee 1 all of
        --   its rights, liabilities, duties and obligations with
        --   respect to Transferor 2. ISDA 2004 Novation Term:
        --   Transferor (three-way novation) or Transferor 1
        --   (four-way novation).
    transferorAccount : Optional AccountReference
    transferee : PartyReference
        -- ^ A pointer style reference to a party identifier
        --   defined elsewhere in the document. In a three-way
        --   novation the party referenced is the Transferee
        --   (incoming party) in the novation. Transferee means a
        --   party which accepts by way of novation all rights,
        --   liabilities, duties and obligations of a Transferor
        --   with respect to a Remaining Party. In a four-way
        --   novation the party referenced is Transferee 1 which
        --   accepts by way of novation the rights, liabilities,
        --   duties and obligations of Transferor 1. ISDA 2004
        --   Novation Term: Transferee (three-way novation) or
        --   Transferee 1 (four-way novation).
    otherTransferee : Optional PartyReference
        -- ^ A pointer style reference to a party identifier
        --   defined elsewhere in the document. In a five-way
        --   novation the party referenced is the Transferee's
        --   legal entity that is involved in the settlement of
        --   the fee leg of the novation transaction (this might
        --   be a different legal entity than the one that assumes
        --   the novation trade). NB: this element has been added
        --   pending confirmation of the business need/context in
        --   which it would be used, and might not appear in a
        --   subsequent draft of this schema.
    transfereeAccount : Optional AccountReference
    otherTransfereeAccount : Optional AccountReference
    remainingParty : PartyReference
        -- ^ A pointer style reference to a party identifier
        --   defined elsewhere in the document. In a three-way
        --   novation the party referenced is the Remaining Party
        --   in the novation. Remaining Party means a party which
        --   consents to a Transferor's transfer by novation and
        --   the acceptance thereof by the Transferee of all of
        --   the Transferor's rights, liabilities, duties and
        --   obligations with respect to such Remaining Party
        --   under and with respect of the Novated Amount of a
        --   transaction. In a four-way novation the party
        --   referenced is Transferor 2 per the ISDA definition
        --   and acts in the role of a Transferor. Transferor 2
        --   transfers by novation to Transferee 2 all of its
        --   rights, liabilities, duties and obligations with
        --   respect to Transferor 1. ISDA 2004 Novation Term:
        --   Remaining Party (three-way novation) or Transferor 2
        --   (four-way novation).
    remainingPartyAccount : Optional AccountReference
    otherRemainingParty : Optional PartyReference
        -- ^ A pointer style reference to a party identifier
        --   defined elsewhere in the document. This element is
        --   not applicable in a three-way novation and should be
        --   omitted. In a four-way novation the party referenced
        --   is Transferee 2. Transferee 2 means a party which
        --   accepts by way of novation the rights, liabilities,
        --   duties and obligations of Transferor 2. ISDA 2004
        --   Novation Term: Transferee 2 (four-way novation).
    otherRemainingPartyAccount : Optional AccountReference
    novationDate : Date
        -- ^ Specifies the date that one party's legal obligations
        --   with regard to a trade are transferred to another
        --   party. It corresponds to the Novation Date section of
        --   the 2004 ISDA Novation Definitions, section 1.16.
    executionDateTime : Optional ExecutionDateTime
        -- ^ The date and time at which the change was agreed.
    novationTradeDate : Optional Date
        -- ^ Specifies the date the parties agree to assign or
        --   novate a Contract. If this element is not specified,
        --   the novationContractDate will be deemed to be the
        --   novationDate. It corresponds to the Novation Trade
        --   Date section of the 2004 ISDA Novation Definitions,
        --   section 1.17.
    choice_2 : TradeNovationContent_choice_4
    fullFirstCalculationPeriod : Optional Bool
        -- ^ This element corresponds to the applicability of the
        --   Full First Calculation Period as defined in the 2004
        --   ISDA Novation Definitions, section 1.20.
    firstPeriodStartDate : [FirstPeriodStartDate]
        -- ^ Element that is used to be able to make sense of the
        --   “new transaction” without requiring reference back to
        --   the “old transaction”. In the case of interest rate
        --   products there are potentially 2 “first period start
        --   dates” to reference – one with respect to each party
        --   to the new transaction. For Credit Default Swaps
        --   there is just the one with respect to the party that
        --   is the fixed rate payer.
    nonReliance : Optional Empty
        -- ^ This element corresponds to the non-Reliance section
        --   in the 2004 ISDA Novation Definitions, section 2.1
        --   (c) (i). The element appears in the instance document
        --   when non-Reliance is applicable.
    creditDerivativesNotices : Optional CreditDerivativesNotices
        -- ^ This element should be specified if one or more of
        --   either a Credit Event Notice, Notice of Publicly
        --   Available Information, Notice of Physical Settlement
        --   or Notice of Intended Physical Settlement, as
        --   applicable, has been delivered by or to the
        --   Transferor or the Remaining Party. The type of notice
        --   or notices that have been delivered should be
        --   indicated by setting the relevant boolean element
        --   value(s) to true. The absence of the element means
        --   that no Credit Event Notice, Notice of Publicly
        --   Available Information, Notice of Physical Settlement
        --   or Notice of Intended Physical Settlement, as
        --   applicable, has been delivered by or to the
        --   Transferor or the Remaining Party.
    contractualDefinitions : [ContractualDefinitions]
        -- ^ The definitions (such as those published by ISDA)
        --   that will define the terms of the novation
        --   transaction.
    contractualTermsSupplement : [ContractualTermsSupplement]
        -- ^ A contractual supplement (such as those published by
        --   ISDA) that will apply to the trade.
    payment : Optional Payment
        -- ^ Describes a payment made in settlement of the
        --   novation.
      deriving (Eq, Ord, Show)

-- | A variant type used inside TradeNovationContent
data TradeNovationContent_FeeTrade_model
    = TradeNovationContent_FeeTrade_model_FeeTradeIdentifier PartyTradeIdentifier
      -- ^ Indicates a reference to the implied trade (the "fee
      --   trade") that the associated novation fee based on.
      --   This is equivalent to the new trade that is created
      --   by the novation (between the transferee and the
      --   remaining party), but is between the transferor and
      --   the transferee.
    | TradeNovationContent_FeeTrade_model_FeeTrade Trade
      -- ^ Indicates the original trade between the transferor
      --   and the remaining party.
    deriving (Eq, Ord, Show)

-- | A variant type used inside TradeNovationContent
data TradeNovationContent_NewTrade_model
    = TradeNovationContent_NewTrade_model_NewTradeIdentifier [PartyTradeIdentifier]
      -- ^ Indicates a reference to the new trade between the
      --   transferee and the remaining party.
    | TradeNovationContent_NewTrade_model_NewTrade Trade
      -- ^ Indicates the new trade between the transferee and
      --   the remaining party.
    deriving (Eq, Ord, Show)

-- | A variant type used inside TradeNovationContent
data TradeNovationContent_NewTrade_model_2
    = TradeNovationContent_NewTrade_model_2_NewTradeIdentifier [PartyTradeIdentifier]
      -- ^ Indicates a reference to the new trade between the
      --   transferee and the remaining party.
    | TradeNovationContent_NewTrade_model_2_NewTrade Trade
      -- ^ Indicates the new trade between the transferee and
      --   the remaining party.
    deriving (Eq, Ord, Show)

-- | A variant type used inside TradeNovationContent
data TradeNovationContent_choice
    = TradeNovationContent_choice_OldTradeIdentifier [PartyTradeIdentifier]
      -- ^ Indicates a reference to the original trade between
      --   the transferor and the remaining party.
    | TradeNovationContent_choice_OldTrade Trade
      -- ^ Indicates the original trade between the transferor
      --   and the remaining party.
    deriving (Eq, Ord, Show)

-- | A variant type used inside TradeNovationContent
data TradeNovationContent_choice_2
    = TradeNovationContent_choice_2_FeeTradeIdentifier PartyTradeIdentifier
      -- ^ Indicates a reference to the implied trade (the "fee
      --   trade") that the associated novation fee based on.
      --   This is equivalent to the new trade that is created
      --   by the novation (between the transferee and the
      --   remaining party), but is between the transferor and
      --   the transferee.
    | TradeNovationContent_choice_2_FeeTrade Trade
      -- ^ Indicates the original trade between the transferor
      --   and the remaining party.
    deriving (Eq, Ord, Show)

-- | A variant type used inside TradeNovationContent
data TradeNovationContent_choice_3
    = TradeNovationContent_choice_3_NewTradeIdentifier [PartyTradeIdentifier]
      -- ^ Indicates a reference to the new trade between the
      --   transferee and the remaining party.
    | TradeNovationContent_choice_3_NewTrade Trade
      -- ^ Indicates the new trade between the transferee and
      --   the remaining party.
    | TradeNovationContent_choice_3_Items1 TradeNovationContent_items
    | TradeNovationContent_choice_3_Items2 TradeNovationContent_items_2
    deriving (Eq, Ord, Show)

-- | A variant type used inside TradeNovationContent
data TradeNovationContent_choice_4
    = TradeNovationContent_choice_4_Items1 TradeNovationContent_items_3
    | TradeNovationContent_choice_4_Items2 TradeNovationContent_items_4
    | TradeNovationContent_choice_4_Items3 TradeNovationContent_items_5
    | TradeNovationContent_choice_4_NovationAmount [TradeLegSizeChange]
    deriving (Eq, Ord, Show)

-- | A record type used inside TradeNovationContent
data TradeNovationContent_items = TradeNovationContent_items with
    choice_ : TradeNovationContent_choice
    feeTrade_model : Optional TradeNovationContent_FeeTrade_model
    newTrade_model : Optional TradeNovationContent_NewTrade_model
      deriving (Eq, Ord, Show)

-- | A record type used inside TradeNovationContent
data TradeNovationContent_items_2 = TradeNovationContent_items_2 with
    choice_ : TradeNovationContent_choice_2
    newTrade_model : Optional TradeNovationContent_NewTrade_model_2
      deriving (Eq, Ord, Show)

-- | A record type used inside TradeNovationContent
data TradeNovationContent_items_3 = TradeNovationContent_items_3 with
    novatedAmount : [Money]
        -- ^ The amount which represents the portion of the Old
        --   Contract being novated.
    remainingAmount : [Money]
        -- ^ The amount which represents the portion of the Old
        --   Contract not being novated.
      deriving (Eq, Ord, Show)

-- | A record type used inside TradeNovationContent
data TradeNovationContent_items_4 = TradeNovationContent_items_4 with
    novatedNumberOfOptions : Decimal
        -- ^ The number of options which represent the portion of
        --   the Old Contract being novated.
    remainingNumberOfOptions : Optional Decimal
        -- ^ The number of options which represent the portion of
        --   the Old Contract not being novated.
      deriving (Eq, Ord, Show)

-- | A record type used inside TradeNovationContent
data TradeNovationContent_items_5 = TradeNovationContent_items_5 with
    novatedNumberOfUnits : Decimal
        -- ^ The number of options which represent the portion of
        --   the Old Contract being novated.
    remainingNumberOfUnits : Optional Decimal
        -- ^ The number of options which represent the portion of
        --   the Old Contract not being novated.
      deriving (Eq, Ord, Show)

-- | A bundle of trades collected together into a single
--   unit for reporting.
data TradePackage = TradePackage with
    packageHeader : Optional PackageHeader
    choice_ : TradePackage_choice
    approvals : Optional Approvals
        -- ^ A container for approval states in the workflow.
      deriving (Eq, Ord, Show)

-- | A record type used inside TradePackage
data TradePackage_TradeReferenceInformation_model = TradePackage_TradeReferenceInformation_model with
    tradeReferenceInformation : TradeReferenceInformation
        -- ^ Information about a trade.
      deriving (Eq, Ord, Show)

-- | A variant type used inside TradePackage
data TradePackage_choice
    = TradePackage_choice_Trade [Trade]
    | TradePackage_choice_TradeReferenceInformation_model [TradePackage_TradeReferenceInformation_model]
    | TradePackage_choice_TradeIdentifier [TradeIdentifier]
    deriving (Eq, Ord, Show)

-- | Allows timing information about when a trade was
--   processed and reported to be recorded.
data TradeProcessingTimestamps = TradeProcessingTimestamps with
    orderEntered : Optional Time
        -- ^ When an order was first generated, as recorded for
        --   the first time when it was first entered by a person
        --   or generated by a trading algorithm (i.e., the first
        --   record of the order).
    orderSubmitted : Optional Time
        -- ^ The time when an order is submitted by a market
        --   participant to an execution facility, as recorded
        --   based on the timestamp of the message that was sent
        --   by the participant. If the participant records this
        --   time (i.e. it is in the participant's party trade
        --   information), it will be the time the message was
        --   sent. If the execution facility records this time
        --   (i.e. it is in the facility's party trade
        --   information), it will be the time the message was
        --   received.
    publiclyReported : Optional Time
        -- ^ When the public report of this was created or
        --   received by this party. If the participant records
        --   this time (i.e. it is in the participant's party
        --   trade information), it will be the time the message
        --   was sent. If the execution records this time (i.e. it
        --   is in the facility's party trade information), it
        --   will be the time the message was received.
    publicReportAccepted : Optional Time
        -- ^ When the public report of this was most recently
        --   corrected or corrections were sent or received by
        --   this party.
    publicReportUpdated : Optional Time
        -- ^ When the public report of this was first accepted for
        --   submission to a regulator.
    nonpubliclyReported : Optional Time
        -- ^ When the non-public report of this was created or
        --   received by this party.
    nonpublicReportAccepted : Optional Time
        -- ^ When the non-public report of this was first accepted
        --   for submission to a regulator.
    nonpublicReportUpdated : Optional Time
        -- ^ When the non-public report of this was most recently
        --   corrected or corrections were received by this party.
    submittedForConfirmation : Optional Time
        -- ^ When this trade was supplied to a confirmation
        --   service or counterparty for confirmation.
    updatedForConfirmation : Optional Time
        -- ^ When the most recent correction to this trade was
        --   supplied to a confirmation service or counterparty
        --   for confirmation.
    confirmed : Optional Time
        -- ^ When this trade was confirmed.
    submittedForClearing : Optional Time
        -- ^ When this trade was supplied to a clearing service
        --   for clearing.
    updatedForClearing : Optional Time
        -- ^ When the most recent correction to this trade was
        --   supplied to a clearing service for clearing.
    cleared : Optional Time
        -- ^ When this trade was cleared.
    allocationsSubmitted : Optional Time
        -- ^ When allocations for this trade were submitted or
        --   received by this party.
    allocationsUpdated : Optional Time
        -- ^ When allocations for this trade were most recently
        --   corrected.
    allocationsCompleted : Optional Time
        -- ^ When allocations for this trade were completely
        --   processed.
    timestamp : [TradeTimestamp]
        -- ^ Other timestamps for this trade. This is provisional
        --   in Recordkeeping and Transparency view and may be
        --   reviewed in a subsequent draft.
      deriving (Eq, Ord, Show)

-- | Defines a type that allows trade identifiers and/or
--   trade information to be represented for a trade.
data TradeReferenceInformation = TradeReferenceInformation with
    choice_ : Optional TradeReferenceInformation_choice
    partyTradeIdentifier : [PartyTradeIdentifier]
        -- ^ This allows the acknowledging party to supply
        --   additional trade identifiers for a trade underlying a
        --   request relating to a business event.
    partyTradeInformation : [PartyTradeInformation]
        -- ^ This allows the acknowledging party to supply
        --   additional trade information about a trade underlying
        --   a request relating to a business event.
    productType : Optional ProductType
    productId : Optional ProductId
      deriving (Eq, Ord, Show)

-- | A variant type used inside TradeReferenceInformation
data TradeReferenceInformation_choice
    = TradeReferenceInformation_choice_OriginatingEvent OriginatingEvent
      -- ^ This may be used to describe why a trade was created.
      --   This can be used to provide context for a newly
      --   created trade that is not part of a post-trade event.
      --   For example, it can report that the trade was created
      --   as a result of netting activity, or due to a
      --   transfer, an allocation process, etc. Omitting this
      --   implies that the trade record was created as a result
      --   of a negotiated new trade.
    | TradeReferenceInformation_choice_TerminatingEvent TerminatingEvent
      -- ^ This may be used to describe why a trade was
      --   terminated.
    deriving (Eq, Ord, Show)

-- | Summary information about the trade.
data TradeSummary = TradeSummary with
    isPackageTrade : Optional Bool
    isPrimeBrokerTrade : Optional Bool
    reportingLevel : Optional ReportingLevel
      deriving (Eq, Ord, Show)

-- | A generic trade timestamp
data TradeTimestamp = TradeTimestamp with
    type_ : TimestampTypeScheme
    value : Time
      deriving (Eq, Ord, Show)

-- | A structure that contains a business event.
data TradeWrapper
    = TradeWrapper_Items TradeWrapper_items
    | TradeWrapper_TradeReferenceInformation TradeReferenceInformation
      -- ^ Information about a trade.
    | TradeWrapper_TradePackage TradePackage
    deriving (Eq, Ord, Show)

-- | A record type used inside TradeWrapper
data TradeWrapper_items = TradeWrapper_items with
    originatingEvent : Optional OriginatingEvent
        -- ^ This may be used to describe why a trade was created.
        --   This can be used to provide context for a newly
        --   created trade that is not part of a post-trade event.
        --   For example, it can report that the trade was created
        --   as a result of netting activity, or due to a
        --   transfer, an allocation process, etc. Omitting this
        --   implies that the trade record was created as a result
        --   of a negotiated new trade.
    trade : Trade
      deriving (Eq, Ord, Show)

data Trader = Trader with
    traderScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | Indication as to whether the transaction was executed
--   under a pre-trade waiver in accordance with Articles
--   4 and 9 of Regulation (EU) 600/2014.
data TradingWaiver = TradingWaiver with
    tradingWaiverScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A characteristic of a transaction used in declaring
--   an end-user exception.
data TransactionCharacteristic = TransactionCharacteristic with
    transactionCharacteristicScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | Trigger point at which feature is effective.
data Trigger = Trigger with
    choice_ : Trigger_choice
    triggerType : Optional TriggerTypeEnum
        -- ^ The Triggering condition.
    triggerTimeType : Optional TriggerTimeTypeEnum
        -- ^ The valuation time type of knock condition.
      deriving (Eq, Ord, Show)

-- | The specification of whether a payout will occur on
--   an option depending upon whether the spot rate is at
--   or above or at or below the trigger rate.
data TriggerConditionEnum
    = TriggerConditionEnum_AtOrAbove ()
      -- ^ The spot rate must be greater than or equal to the
      --   trigger rate.
    | TriggerConditionEnum_AtOrBelow ()
      -- ^ The spot rate must be less than or equal to the
      --   trigger rate.
    | TriggerConditionEnum_Above ()
      -- ^ DEPRECATE: The spot rate must be greater than or
      --   equal to the trigger rate.
    | TriggerConditionEnum_Below ()
      -- ^ DEPRECATE: The spot rate must be less than or equal
      --   to the trigger rate.
    deriving (Eq, Ord, Show)

-- | Observation point for trigger.
data TriggerEvent = TriggerEvent with
    schedule : [AveragingSchedule]
        -- ^ A Equity Derivative schedule.
    triggerDates : Optional DateList
        -- ^ The trigger Dates.
    trigger : Trigger
        -- ^ The trigger level.
    featurePayment : Optional FeaturePayment
        -- ^ The feature payment.
      deriving (Eq, Ord, Show)

data TriggerRateObservation = TriggerRateObservation with
    observationDate : Date
        -- ^ The date on which the rate observation occurred, in
        --   order to trigger the barrier event.observationDate
    observationTime : Optional BusinessCenterTime
        -- ^ The time at which the observation occurred.
    informationSource : Optional InformationSource
    choice_ : TriggerRateObservation_choice
    triggerCondition : TriggerConditionEnum
        -- ^ The side of the trigger rate/price (level) on which a
        --   rate observation occurred, in order to trigger the
        --   barrier event.
      deriving (Eq, Ord, Show)

-- | A variant type used inside TriggerRateObservation
data TriggerRateObservation_choice
    = TriggerRateObservation_choice_Items1 TriggerRateObservation_items
    | TriggerRateObservation_choice_Items2 TriggerRateObservation_items_2
    deriving (Eq, Ord, Show)

-- | A record type used inside TriggerRateObservation
data TriggerRateObservation_items = TriggerRateObservation_items with
    triggerRate : Decimal
        -- ^ The rate value (level) which was attained/breached,
        --   in order to trigger the barrier event.
    quotedCurrencyPair : QuotedCurrencyPair
        -- ^ Defines the currency pair and quote basis for an FX
        --   rate.
    observedRate : Optional Decimal
        -- ^ The observed rate value which triggered the barrier
        --   event.
      deriving (Eq, Ord, Show)

-- | A record type used inside TriggerRateObservation
data TriggerRateObservation_items_2 = TriggerRateObservation_items_2 with
    triggerPrice : PositiveMoney
        -- ^ The price value (level) which was attained/breached,
        --   in order to trigger the barrier event.
    observedPrice : Optional PositiveMoney
        -- ^ The observed price value which triggered the barrier
        --   event.
      deriving (Eq, Ord, Show)

-- | The time of day which would be considered for valuing
--   the knock event.
data TriggerTimeTypeEnum
    = TriggerTimeTypeEnum_Closing ()
      -- ^ The close of trading on a day would be considered for
      --   valuation.
    | TriggerTimeTypeEnum_Anytime ()
      -- ^ At any time during the Knock Determination period
      --   (continuous barrier).
    deriving (Eq, Ord, Show)

-- | The specification of whether an option will trigger
--   or expire depending upon whether the spot rate is
--   above or below the barrier rate.
data TriggerTypeEnum
    = TriggerTypeEnum_EqualOrLess ()
      -- ^ The underlyer price must be equal to or less than the
      --   Trigger level.
    | TriggerTypeEnum_EqualOrGreater ()
      -- ^ The underlyer price must be equal to or greater than
      --   the Trigger level.
    | TriggerTypeEnum_Equal ()
      -- ^ The underlyer price must be equal to the Trigger
      --   level.
    | TriggerTypeEnum_Less ()
      -- ^ The underlyer price must be less than the Trigger
      --   level.
    | TriggerTypeEnum_Greater ()
      -- ^ The underlyer price must be greater than the Trigger
      --   level.
    deriving (Eq, Ord, Show)

-- | A variant type used inside Trigger
data Trigger_choice
    = Trigger_choice_Level Decimal
      -- ^ The trigger level.
    | Trigger_choice_LevelPercentage Decimal
      -- ^ The trigger level percentage.
    | Trigger_choice_CreditEvents CreditEvents
    | Trigger_choice_CreditEventsReference CreditEventsReference
    deriving (Eq, Ord, Show)

-- | A type describing the whole set of possible
--   underlyers: single underlyers or multiple underlyers,
--   each of these having either security or index
--   components.
data Underlyer
    = Underlyer_SingleUnderlyer SingleUnderlyer
      -- ^ Describes the swap's underlyer when it has only one
      --   asset component.
    | Underlyer_Basket Basket
      -- ^ Describes the swap's underlyer when it has multiple
      --   asset components.
    deriving (Eq, Ord, Show)

-- | A type describing interest payments associated with
--   and underlyer, such as financing
data UnderlyerInterestLeg = UnderlyerInterestLeg with
    id_ : Optional Text
    legIdentifier : [LegIdentifier]
        -- ^ Version aware identification of this leg.
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    effectiveDate : Optional AdjustableOrRelativeDate
        -- ^ Specifies the effective date of this leg of the swap.
        --   When defined in relation to a date specified
        --   somewhere else in the document (through the
        --   relativeDate component), this element will typically
        --   point to the effective date of the other leg of the
        --   swap.
    terminationDate : Optional AdjustableOrRelativeDate
        -- ^ Specifies the termination date of this leg of the
        --   swap. When defined in relation to a date specified
        --   somewhere else in the document (through the
        --   relativeDate component), this element will typically
        --   point to the termination date of the other leg of the
        --   swap.
    choice_ : UnderlyerInterestLeg_choice
      deriving (Eq, Ord, Show)

-- | A variant type used inside UnderlyerInterestLeg
data UnderlyerInterestLeg_choice
    = UnderlyerInterestLeg_choice_FixedRate (Optional (Decimal))
      -- ^ The calculation period fixed rate. A per annum rate,
      --   expressed as a decimal. A fixed rate of 5% would be
      --   represented as 0.05.
    | UnderlyerInterestLeg_choice_SpreadSchedule [SpreadSchedule]
      -- ^ The ISDA Spread or a Spread schedule expressed as
      --   explicit spreads and dates. In the case of a
      --   schedule, the step dates may be subject to adjustment
      --   in accordance with any adjustments specified in
      --   calculationPeriodDatesAdjustments. The spread is a
      --   per annum rate, expressed as a decimal. For purposes
      --   of determining a calculation period amount, if
      --   positive the spread will be added to the floating
      --   rate and if negative the spread will be subtracted
      --   from the floating rate. A positive 10 basis point
      --   (0.1%) spread would be represented as 0.001.
    deriving (Eq, Ord, Show)

-- | Defines stock loan information where this is required
--   per underlyer. You must not duplicate infromation
--   within dividend conditions at transaction level
data UnderlyerLoanRate = UnderlyerLoanRate with
    lossOfStockBorrow : Optional Bool
        -- ^ If true, then loss of stock borrow is applicable.
    maximumStockLoanRate : Optional RestrictedPercentage
        -- ^ Specifies the maximum stock loan rate for Loss of
        --   Stock Borrow.
    increasedCostOfStockBorrow : Optional Bool
        -- ^ If true, then increased cost of stock borrow is
        --   applicable.
    initialStockLoanRate : Optional RestrictedPercentage
        -- ^ Specifies the initial stock loan rate for Increased
        --   Cost of Stock Borrow.
      deriving (Eq, Ord, Show)

-- | Abstract base class for all underlying assets.
data UnderlyingAsset
    = UnderlyingAsset_SimpleIRSwap SimpleIRSwap
    | UnderlyingAsset_SimpleFra SimpleFra
    | UnderlyingAsset_SimpleCreditDefaultSwap SimpleCreditDefaultSwap
    | UnderlyingAsset_RateIndex RateIndex
    | UnderlyingAsset_MutualFund MutualFund
    | UnderlyingAsset_Mortgage Mortgage
    | UnderlyingAsset_Loan Loan
    | UnderlyingAsset_FxRateAsset FxRateAsset
    | UnderlyingAsset_Future Future
    | UnderlyingAsset_ExchangeTradedContract ExchangeTradedContract
    | UnderlyingAsset_ExchangeTradedOption ExchangeTradedOption
    | UnderlyingAsset_Index Index
    | UnderlyingAsset_ExchangeTradedFund ExchangeTradedFund
    | UnderlyingAsset_EquityAsset EquityAsset
    | UnderlyingAsset_Deposit Deposit
    | UnderlyingAsset_Bond Bond
    | UnderlyingAsset_ConvertibleBond ConvertibleBond
    deriving (Eq, Ord, Show)

data UnderlyingAssetTranche = UnderlyingAssetTranche with
    loanTrancheScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A quantity and associated unit.
data UnitQuantity = UnitQuantity with
    id_ : Optional Text
    quantityUnit : QuantityUnit
        -- ^ Quantity Unit is the unit of measure applicable for
        --   the quantity on the Transaction.
    quantity : NonNegativeDecimal
        -- ^ Amount of commodity per quantity frequency.
      deriving (Eq, Ord, Show)

-- | A type defining a quantity and unit with a reference.
data UnitQuantityRef = UnitQuantityRef with
    id_ : Optional Text
    quantityUnit : QuantityUnit
        -- ^ Quantity Unit is the unit of measure applicable for
        --   the quantity on the Transaction.
    quantity : NonNegativeDecimal
        -- ^ Amount of commodity per quantity frequency.
    quantityReference : Optional NotionalReference
      deriving (Eq, Ord, Show)

-- | A type holding a structure that is unvalidated
data UnprocessedElementWrapper = UnprocessedElementWrapper with
    any_ : Text
      deriving (Eq, Ord, Show)

-- | A reference identifying a rule within a validation
--   scheme.
data Validation = Validation with
    validationScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The ISDA defined methodology for determining the
--   final price of the reference obligation for purposes
--   of cash settlement.
data ValuationMethodEnum
    = ValuationMethodEnum_Market ()
    | ValuationMethodEnum_Highest ()
    | ValuationMethodEnum_AverageMarket ()
    | ValuationMethodEnum_AverageHighest ()
    | ValuationMethodEnum_BlendedMarket ()
    | ValuationMethodEnum_BlendedHighest ()
    | ValuationMethodEnum_AverageBlendedMarket ()
    | ValuationMethodEnum_AverageBlendedHighest ()
    deriving (Eq, Ord, Show)

-- | How a valuation for a trade was determined
data ValuationTypeEnum
    = ValuationTypeEnum_Model ()
      -- ^ The valuation was calculated based on a pricing model
      --   incorporating trade economics and a model of market
      --   conditions.
    | ValuationTypeEnum_Market ()
      -- ^ The valuation was determined based on values for
      --   similar products quoted on the open market.
    deriving (Eq, Ord, Show)

data Velocity = Velocity with
    periodMultiplier : Int
    period : PeriodTimeEnum
      deriving (Eq, Ord, Show)

-- | A type used to represent the type of mechanism that
--   can be used to verify a trade.
data VerificationMethod = VerificationMethod with
    verificationMethodScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The verification status of the position as reported
--   by the sender (Verified, Disputed).
data VerificationStatus = VerificationStatus with
    verificationStatusScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

data VerificationStatusNotification = VerificationStatusNotification with
    fpmlVersion : Text
        -- ^ Indicate which version of the FpML Schema an FpML
        --   message adheres to.
    expectedBuild : Optional Int
        -- ^ This optional attribute can be supplied by a message
        --   creator in an FpML instance to specify which build
        --   number of the schema was used to define the message
        --   when it was generated.
    actualBuild : Optional Int
        -- ^ The specific build number of this schema version.
        --   This attribute is not included in an instance
        --   document. Instead, it is supplied by the XML parser
        --   when the document is validated against the FpML
        --   schema and indicates the build number of the schema
        --   file. Every time FpML publishes a change to the
        --   schema, validation rules, or examples within a
        --   version (e.g., version 4.2) the actual build number
        --   is incremented. If no changes have been made between
        --   releases within a version (i.e. from Trial
        --   Recommendation to Recommendation) the actual build
        --   number stays the same.
    header : RequestMessageHeader
    validation : [Validation]
        -- ^ A list of validation sets the sender asserts the
        --   document is valid with respect to.
    correlationAndSequence_model : Optional VerificationStatusNotification_CorrelationAndSequence_model
    onBehalfOf_model : Optional VerificationStatusNotification_OnBehalfOf_model
    status : VerificationStatus
    reason : [Reason]
        -- ^ The reason for any dispute or change in verification
        --   status.
    partyTradeIdentifier : PartyTradeIdentifier
    partiesAndAccounts_model : Optional VerificationStatusNotification_PartiesAndAccounts_model
      deriving (Eq, Ord, Show)

-- | A record type used inside
--   VerificationStatusNotification
data VerificationStatusNotification_CorrelationAndSequence_model = VerificationStatusNotification_CorrelationAndSequence_model with
    parentCorrelationId : Optional CorrelationId
        -- ^ An optional identifier used to correlate between
        --   related processes
    correlationId : CorrelationId
        -- ^ A qualified identifier used to correlate between
        --   messages
    sequenceNumber : Int
        -- ^ A numeric value that can be used to order messages
        --   with the same correlation identifier from the same
        --   sender.
      deriving (Eq, Ord, Show)

-- | A record type used inside
--   VerificationStatusNotification
data VerificationStatusNotification_OnBehalfOf_model = VerificationStatusNotification_OnBehalfOf_model with
    onBehalfOf : OnBehalfOf
        -- ^ Indicates which party (or parties) (and accounts) a
        --   trade or event is being processed for. Normally there
        --   will only be a maximum of 2 parties, but in the case
        --   of a novation there could be a transferor,
        --   transferee, remaining party, and other remaining
        --   party. Also, in the context of a trade package there
        --   could be several parties for which limit check is
        --   requested, necessitating multiple onBehalfOf
        --   elements. Except for these cases, there should be no
        --   more than two onBehalfOf references in a message.
      deriving (Eq, Ord, Show)

-- | A record type used inside
--   VerificationStatusNotification
data VerificationStatusNotification_PartiesAndAccounts_model = VerificationStatusNotification_PartiesAndAccounts_model with
    party : [FpmlParty]
        -- ^ A legal entity or a subdivision of a legal entity.
    account : [Account]
        -- ^ Optional account information used to precisely define
        --   the origination and destination of financial
        --   instruments.
      deriving (Eq, Ord, Show)

-- | Contract Id with Version Support
data VersionedContractId = VersionedContractId with
    contractId : FpmlContractId
    version : Int
        -- ^ The version number
    effectiveDate : Optional IdentifiedDate
        -- ^ Optionally it is possible to specify a version
        --   effective date when a versionId is supplied.
      deriving (Eq, Ord, Show)

-- | Trade Id with Version Support
data VersionedTradeId = VersionedTradeId with
    tradeId : TradeId
    version : Int
        -- ^ The version number
    effectiveDate : Optional IdentifiedDate
        -- ^ Optionally it is possible to specify a version
        --   effective date when a versionId is supplied.
      deriving (Eq, Ord, Show)

-- | The schedule of Calculation Period First Days and
--   Lasts Days. If there is only one First Day - Last Day
--   pair then the First is equal to the Effective Date
--   and the Last Day is equal to the Termination Date.
data WeatherCalculationPeriod = WeatherCalculationPeriod with
    calculationPeriodFirstDay : IdentifiedDate
    calculationPeriodEndDay : IdentifiedDate
      deriving (Eq, Ord, Show)

-- | The schedule of Calculation Period First Days and
--   Lasts Days. If there is only one First Day - Last Day
--   pair then the First is equal to the Effective Date
--   and the Last Day is equal to the Termination Date.
data WeatherCalculationPeriods = WeatherCalculationPeriods with
    id_ : Optional Text
    calculationPeriod : [WeatherCalculationPeriod]
      deriving (Eq, Ord, Show)

-- | A type defining the Weather Index Level or Weather
--   Index Strike Level.
data WeatherIndex = WeatherIndex with
    id_ : Optional Text
    quantity : Decimal
        -- ^ This is the Reference Level. The CDD, HDD or HDD
        --   Reference Level is specified as the number of (amount
        --   of) Weather Index Units specified by the parties in
        --   the related Confirmation.
    unit : QuantityUnit
        -- ^ Weather Index Unit derived from one of the following
        --   variable methods of determination: Cooling Degree Day
        --   (CDD), Heating Degree Day (HDD), Critical
        --   Precipitation Day (CPD) as defined in Section 11.15
        --   of the 2005 ISDA Commodity Definitions and User
        --   Guide.
      deriving (Eq, Ord, Show)

data WeatherIndexData = WeatherIndexData with
    referenceLevel : ReferenceLevel
        -- ^ Reference level is the number of degree-days (in the
        --   case of HDD and CDD) or inches/millimeters (in the
        --   case of CPD) on which the differential is calculated.
        --   In the case of HDD it is the number of degree-days
        --   below this reference level. In the case of CDD it is
        --   the number of degree days above this reference level.
        --   In the case of CPD it is number of inches/millimeters
        --   above this reference level.
    dataProvider : DataProvider
        -- ^ The provider of either temperature data or
        --   precipitation data specified by the parties in the
        --   related Confirmation.
    finalEditedData : Bool
        -- ^ If specified by the parties to apply in the related
        --   Confirmation, Final Edited Data means that the
        --   parties will have recourse to Primary Disruption
        --   Fallbacks even if relevant data is available from the
        --   Data Provider, so long as such data is not published
        --   in its final edited form. Otherwise the parties will
        --   have recourse to Primary Disruption Fallbacks only if
        --   relevant data is unavailable from the Data Provider
        --   on a relevant day.
    weatherStation : WeatherStation
        -- ^ The source or sources of weather index data specified
        --   by the parties in the related Confirmation. Examples
        --   include: AU-CBM (the Commonwealth Bureau of
        --   Meteorology in Australia) and CM-SMI (the Swiss
        --   Meteorological Institute).
    weatherStationFallback : WeatherStation
        -- ^ If weather index data is not available for the
        --   weather station specified by the parties in the
        --   related Confirmation, the first alternative Weather
        --   Index Station.
    weatherStationSecondFallback : WeatherStation
        -- ^ If weather index data is neither available for the
        --   weather station specified by the parties in the
        --   related Confirmation nor the first alternative
        --   Weather Index Station, the second alternative Weather
        --   Index Station.
    alternativeDataProvider : Bool
        -- ^ A provider of either temperature data or
        --   precipitation data specified by the parties in the
        --   related Confirmation. If the parties fail to specify
        --   an Alternative Data Provider, the "Fallback Data"
        --   Disruption Fallback will not apply.
    synopticDataFallback : Bool
        -- ^ If the parties specify "Not Applicable", the
        --   "Synoptic Data" Disruption Fallback will not apply.
        --   Synoptic Data means that maximum and/or minimum
        --   temperature or daily precipitation at the location
        --   for the Missing Data Day will be the maxium and/or
        --   minimum temperature or daily precipitation for that
        --   day at the Location (Weather Index Station) which has
        --   not been subject to ultimate quality control,
        --   integrity or verification process.
    adjustmentToFallbackWeatherStation : Optional Bool
        -- ^ The Weather Index Station from which data with which
        --   to apply the "Adjustement to Fallback Station Data"
        --   terms. See Section 11.20 of the 2005 ISDA Commodity
        --   Definitions.
    primaryDisruptionFallbacks : Optional DisruptionFallback
        -- ^ A list of actions available to the parties should a
        --   Primary Disruption Event occur. A Primary Disruption
        --   Event means if maximum or minimum temperature or
        --   precipitation data for a Missing Data Day is required
        --   to determine a Payment Amount then the maximum and/or
        --   minimum temperature or the daily precipitation for
        --   that day will be determined in accordance with the
        --   first applicable Primary Disruption Fallback.
    secondaryDisruptionFallbacks : Optional DisruptionFallback
        -- ^ A list of actions available to the parties should a
        --   Secondary Disruption Event occur. A Primary
        --   Disruption Event means if maximum or minimum
        --   temperature or precipitation data for a Missing Data
        --   Day is required to determine a Payment Amount then
        --   the maximum and/or minimum temperature or the daily
        --   precipitation for that day will be determined in
        --   accordance with the first applicable Secondary
        --   Disruption Fallback.
      deriving (Eq, Ord, Show)

-- | A weather leg of a Commodity Swap defines Weather
--   Index Swap transactions. Weather Index Swap
--   transactions are OTC derivative transactions which
--   settle financially based on an index calculated from
--   observations of temperature, precipitation and other
--   weather-related measurements at weather stations
--   throughout the world. Sub-Annex C of the 2005 ISDA
--   Commodity Definitions provides definitions and terms
--   for a number of types of weather indices. These
--   indices include: HDD (heating degree days), CDD
--   (cooling degree days), CPD (critical precipitation
--   days). Weather Index Swap transactions result in a
--   cash flow to one of the two counterparties each
--   Calculation Period depending on the relationship
--   between the Settlement Level and the Weather Index
--   Level. A Weather Index swap transaction always
--   consists of a commodity swap element as a parent to
--   two weatherLeg elements.
data WeatherLeg = WeatherLeg with
    id_ : Optional Text
    payerPartyReference : PartyReference
        -- ^ A reference to the party responsible for making the
        --   payments defined by this structure.
    payerAccountReference : Optional AccountReference
        -- ^ A reference to the account responsible for making the
        --   payments defined by this structure.
    receiverPartyReference : PartyReference
        -- ^ A reference to the party that receives the payments
        --   corresponding to this structure.
    receiverAccountReference : Optional AccountReference
        -- ^ A reference to the account that receives the payments
        --   corresponding to this structure.
    weatherIndexLevel : WeatherIndex
        -- ^ Defining the Weather Index Level or Weather Index
        --   Strike Level.
    choice_ : WeatherLeg_choice
    weatherNotionalAmount : NonNegativeMoney
        -- ^ Defines the price per weather index unit.
    calculation : WeatherLegCalculation
        -- ^ Defines details relevant to the calculation of the
        --   aggregate weather index amount.
    paymentDates : CommodityRelativePaymentDates
        -- ^ The Payment Dates of the trade relative to the
        --   Calculation Periods or Calculation Date
    weatherIndexData : WeatherIndexData
        -- ^ Specifies where the data (e.g. CPD) have been
        --   collected, an actual physical reference point
        --   (weather station) and various fall back arrangements.
      deriving (Eq, Ord, Show)

-- | A type to capture details of the calculation of the
--   Payment Amount on a Weather Index Transaction.
data WeatherLegCalculation = WeatherLegCalculation with
    settlementLevel : WeatherSettlementLevelEnum
        -- ^ The Settlement Level means either the cumulative
        --   number of Weather Index Units for each day in the
        --   Calculation Period (Cumulative) or the cumulative
        --   number of Weather Index Units for each day in the
        --   Calculation Period divided by the number of days in
        --   the Calculation Period (Average) or the maximum
        --   number of Weather Index Units for any day in the
        --   Calculation Period (Maximum) or the minimum number of
        --   Weather Index Units for any day in the Calculation
        --   Period.
    referenceLevelEqualsZero : Bool
        -- ^ If Reference Level Equals Zero is specified to be
        --   applicable then CPD means, for any day during the
        --   Calculation Period, (A) 1 if the Daily Precipitation
        --   for that day is greater than or equal to the CPD
        --   Reference Level or (B) zero if the the Daily
        --   Precipitation for that day is less than the CPD
        --   Reference Level. If Reference Level Equals Zero is
        --   specified not to be applicable then CPD means, for
        --   any day during the Calculation Period, (A) 1 if the
        --   Daily Precipitation for that day is greater than the
        --   CPD Reference Level or 0 if the Daily Precipitation
        --   for that day is less than or equal to the CPD
        --   Reference Level.
    calculationDate : Period
        -- ^ The number of days following the final day of the
        --   Calculation Period specified in the Confirmation on
        --   which is is practicable to provide the notice that
        --   the Calculation Agent is required to give for that
        --   Settlement Date or Payment Date.
    businessDays : BusinessCenter
        -- ^ A day on which commmercial banks settle payments and
        --   are open for general business in the place(s)
        --   specified in the Confirmation. See Section 1.3 of the
        --   ISDA 2005 Commodity Definitions.
    dataCorrection : Bool
        -- ^ The date payment often revised after its publication,
        --   this indicates if the payment date could be
        --   recalculated.
    correctionPeriod : Optional Period
        -- ^ If 'dataCorrection'=true, this indicates how long
        --   after the initial publication of the data corrections
        --   can be made.
    maximumPaymentAmount : Optional NonNegativeMoney
        -- ^ The maximum total payment amount that will be paid in
        --   any particular transaction.
    maximumTransactionPaymentAmount : Optional NonNegativeMoney
        -- ^ The maximum payment amount that will be paid in any
        --   particular Calculation Period.
    rounding : Optional Rounding
        -- ^ Rounding direction and precision for price values.
      deriving (Eq, Ord, Show)

-- | A variant type used inside WeatherLeg
data WeatherLeg_choice
    = WeatherLeg_choice_WeatherCalculationPeriods WeatherCalculationPeriods
    | WeatherLeg_choice_WeatherCalculationPeriodsReference CalculationPeriodsReference
    deriving (Eq, Ord, Show)

data WeatherSettlementLevelEnum
    = WeatherSettlementLevelEnum_Cumulative ()
      -- ^ The cumulative number of Weather Index Units for each
      --   day in the Calculation Period.
    | WeatherSettlementLevelEnum_Average ()
      -- ^ The cumulative number of Weather Index Units for each
      --   day in the Calculation Period divided by the number
      --   of days in the Calculation Period.
    | WeatherSettlementLevelEnum_Mximum ()
      -- ^ The maximum number of Weather Index Units for any day
      --   in the Calculation Period.
    | WeatherSettlementLevelEnum_Minimum ()
      -- ^ The minimum number of Weather Index Units for any day
      --   in the Calculation Period.
    deriving (Eq, Ord, Show)

-- | Weather Station.
data WeatherStation
    = WeatherStation_WeatherStationCity BusinessCenter
    | WeatherStation_WeatherStationAirport WeatherStationAirport
    | WeatherStation_WeatherStationWBAN WeatherStationWBAN
    | WeatherStation_WeatherStationWMO WeatherStationWMO
    deriving (Eq, Ord, Show)

-- | A code identifying a Weather Station Airport (based
--   on the the IATA standard).
data WeatherStationAirport = WeatherStationAirport with
    weatherStationAirportScheme : Optional NonEmptyURI
    id_ : Optional Text
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A code identifying a Weather Station WBAN.
data WeatherStationWBAN = WeatherStationWBAN with
    weatherStationWBANScheme : Optional NonEmptyURI
    id_ : Optional Text
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A code identifying a Weather Index WMO.
data WeatherStationWMO = WeatherStationWMO with
    weatherStationWMOScheme : Optional NonEmptyURI
    id_ : Optional Text
    content : Scheme
      deriving (Eq, Ord, Show)

-- | The specification of a weekly roll day.
data WeeklyRollConventionEnum
    = WeeklyRollConventionEnum_MON ()
      -- ^ Monday
    | WeeklyRollConventionEnum_TUE ()
      -- ^ Tuesday
    | WeeklyRollConventionEnum_WED ()
      -- ^ Wednesday
    | WeeklyRollConventionEnum_THU ()
      -- ^ Thursday
    | WeeklyRollConventionEnum_FRI ()
      -- ^ Friday
    | WeeklyRollConventionEnum_SAT ()
      -- ^ Saturday
    | WeeklyRollConventionEnum_SUN ()
      -- ^ Sunday
    | WeeklyRollConventionEnum_TBILL ()
      -- ^ 13-week and 26-week U.S. Treasury Bill Auction Dates.
      --   Each Monday except for U.S. (New York) holidays when
      --   it will occur on a Tuesday.
    deriving (Eq, Ord, Show)

-- | A single weighted averaging observation.
data WeightedAveragingObservation = WeightedAveragingObservation with
    choice_ : WeightedAveragingObservation_choice
        -- ^ Choice between date times for literal date values,
        --   and observation numbers for schedule generated
        --   observations.
    weight : NonNegativeDecimal
        -- ^ Observation weight, which is used as a multiplier for
        --   the observation value.
      deriving (Eq, Ord, Show)

-- | A variant type used inside
--   WeightedAveragingObservation
data WeightedAveragingObservation_choice
    = WeightedAveragingObservation_choice_DateTime Time
      -- ^ Observation date time, which should be used when
      --   literal observation dates are required.
    | WeightedAveragingObservation_choice_ObservationNumber Int
      -- ^ Observation number, which should be unique, within a
      --   series generated by a date schedule.
    deriving (Eq, Ord, Show)

-- | A structure describing the removal of a trade from a
--   service, such as a reporting service.
data Withdrawal = Withdrawal with
    choice_ : Withdrawal_choice
    effectiveDate : Date
    requestedAction : Optional RequestedWithdrawalAction
    reason : [WithdrawalReason]
    reportingRegime : [ReportingRegimeIdentifier]
        -- ^ DEPRECATED. The supervisor/regulator to which this
        --   withdrawal applies
      deriving (Eq, Ord, Show)

-- | A type defining party-specific additional information
--   that may be recorded against a trade, for withdrawal
--   purposes.
data WithdrawalPartyTradeInformation = WithdrawalPartyTradeInformation with
    partyReference : PartyReference
        -- ^ Reference to a party.
    accountReference : Optional AccountReference
        -- ^ Reference to an account.
    relatedParty : [RelatedParty]
        -- ^ This may be used to identify one or more parties that
        --   perform a role within the transaction. If this is
        --   within a partyTradeInformation block, the related
        --   party performs the role with respect to the party
        --   identifie by the "partyReference" in the
        --   partyTradeInformation block.
    reportingRegime : [ReportingRegimeIdentifier]
        -- ^ Allows the organization to specify which if any
        --   relevant regulators or other supervisory bodies this
        --   is relevant for, and what reporting rules apply.
      deriving (Eq, Ord, Show)

-- | A type that describes why a trade was withdrawn.
data WithdrawalReason = WithdrawalReason with
    withdrawalReasonScheme : Optional NonEmptyURI
    content : Scheme
      deriving (Eq, Ord, Show)

-- | A variant type used inside Withdrawal
data Withdrawal_choice
    = Withdrawal_choice_Items Withdrawal_items
    | Withdrawal_choice_Trade Trade
      -- ^ The full trade representation that is being
      --   withdrawn.
    deriving (Eq, Ord, Show)

-- | A record type used inside Withdrawal
data Withdrawal_items = Withdrawal_items with
    partyTradeIdentifier : [PartyTradeIdentifier]
        -- ^ Identifiers of the trade that is being withdrawn.
    partyTradeInformation : [WithdrawalPartyTradeInformation]
        -- ^ Holds party-specific information about the trade that
        --   is being withdrawn from.
      deriving (Eq, Ord, Show)